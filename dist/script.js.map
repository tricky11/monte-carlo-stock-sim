{"mappings":"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","sources":["<anon>","script.js","data/AAPL.json","data/AMZN.json","data/NFLX.json","data/GOOG.json","data/META.json","node_modules/@stdlib/random/base/lognormal/lib/index.js","node_modules/@stdlib/utils/define-nonenumerable-read-only-property/lib/index.js","node_modules/@stdlib/utils/define-nonenumerable-read-only-property/lib/main.js","node_modules/@stdlib/utils/define-property/lib/index.js","node_modules/@stdlib/utils/define-property/lib/has_define_property_support.js","node_modules/@stdlib/utils/define-property/lib/define_property.js","node_modules/@stdlib/utils/define-property/lib/builtin.js","node_modules/@stdlib/utils/define-property/lib/polyfill.js","node_modules/@stdlib/string/format/lib/index.js","node_modules/@stdlib/string/format/lib/main.js","node_modules/@stdlib/string/base/format-interpolate/lib/index.js","node_modules/@stdlib/string/base/format-interpolate/lib/main.js","node_modules/@stdlib/string/base/format-interpolate/lib/format_integer.js","node_modules/@stdlib/string/base/format-interpolate/lib/is_number.js","node_modules/@stdlib/string/base/format-interpolate/lib/zero_pad.js","node_modules/@stdlib/string/base/format-interpolate/lib/is_string.js","node_modules/@stdlib/string/base/format-interpolate/lib/format_double.js","node_modules/@stdlib/string/base/format-interpolate/lib/space_pad.js","node_modules/@stdlib/string/base/format-tokenize/lib/index.js","node_modules/@stdlib/string/base/format-tokenize/lib/main.js","node_modules/@stdlib/string/format/lib/is_string.js","node_modules/@stdlib/random/base/lognormal/lib/main.js","node_modules/@stdlib/random/base/lognormal/lib/factory.js","node_modules/@stdlib/utils/define-nonenumerable-read-only-accessor/lib/index.js","node_modules/@stdlib/utils/define-nonenumerable-read-only-accessor/lib/main.js","node_modules/@stdlib/utils/define-nonenumerable-read-write-accessor/lib/index.js","node_modules/@stdlib/utils/define-nonenumerable-read-write-accessor/lib/main.js","node_modules/@stdlib/assert/is-plain-object/lib/index.js","node_modules/@stdlib/assert/is-plain-object/lib/main.js","node_modules/@stdlib/assert/is-object/lib/index.js","node_modules/@stdlib/assert/is-object/lib/main.js","node_modules/@stdlib/assert/is-array/lib/index.js","node_modules/@stdlib/assert/is-array/lib/main.js","node_modules/@stdlib/utils/native-class/lib/index.js","node_modules/@stdlib/assert/has-tostringtag-support/lib/index.js","node_modules/@stdlib/assert/has-tostringtag-support/lib/main.js","node_modules/@stdlib/assert/has-symbol-support/lib/index.js","node_modules/@stdlib/assert/has-symbol-support/lib/main.js","node_modules/@stdlib/utils/native-class/lib/main.js","node_modules/@stdlib/utils/native-class/lib/tostring.js","node_modules/@stdlib/utils/native-class/lib/polyfill.js","node_modules/@stdlib/assert/has-own-property/lib/index.js","node_modules/@stdlib/assert/has-own-property/lib/main.js","node_modules/@stdlib/utils/native-class/lib/tostringtag.js","node_modules/@stdlib/symbol/ctor/lib/index.js","node_modules/@stdlib/symbol/ctor/lib/main.js","node_modules/@stdlib/assert/is-function/lib/index.js","node_modules/@stdlib/assert/is-function/lib/main.js","node_modules/@stdlib/utils/type-of/lib/index.js","node_modules/@stdlib/utils/type-of/lib/check.js","node_modules/@stdlib/utils/type-of/lib/fixtures/re.js","node_modules/@stdlib/utils/type-of/lib/fixtures/nodelist.js","node_modules/@stdlib/utils/global/lib/browser.js","node_modules/@stdlib/assert/is-boolean/lib/index.js","node_modules/@stdlib/assert/is-boolean/lib/main.js","node_modules/@stdlib/assert/is-boolean/lib/primitive.js","node_modules/@stdlib/assert/is-boolean/lib/object.js","node_modules/@stdlib/boolean/ctor/lib/index.js","node_modules/@stdlib/boolean/ctor/lib/main.js","node_modules/@stdlib/assert/is-boolean/lib/try2serialize.js","node_modules/@stdlib/assert/is-boolean/lib/tostring.js","node_modules/@stdlib/utils/global/lib/codegen.js","node_modules/@stdlib/utils/global/lib/self.js","node_modules/@stdlib/utils/global/lib/window.js","node_modules/@stdlib/utils/global/lib/global_this.js","node_modules/@stdlib/utils/type-of/lib/fixtures/typedarray.js","node_modules/@stdlib/utils/type-of/lib/main.js","node_modules/@stdlib/utils/constructor-name/lib/index.js","node_modules/@stdlib/utils/constructor-name/lib/main.js","node_modules/@stdlib/regexp/function-name/lib/index.js","node_modules/@stdlib/regexp/function-name/lib/main.js","node_modules/@stdlib/regexp/function-name/lib/regexp.js","node_modules/@stdlib/assert/is-buffer/lib/index.js","node_modules/@stdlib/assert/is-buffer/lib/main.js","node_modules/@stdlib/assert/is-object-like/lib/index.js","node_modules/@stdlib/assert/tools/array-function/lib/index.js","node_modules/@stdlib/assert/tools/array-function/lib/main.js","node_modules/@stdlib/assert/is-object-like/lib/main.js","node_modules/@stdlib/utils/type-of/lib/polyfill.js","node_modules/@stdlib/utils/get-prototype-of/lib/index.js","node_modules/@stdlib/utils/get-prototype-of/lib/main.js","node_modules/@stdlib/object/ctor/lib/index.js","node_modules/@stdlib/object/ctor/lib/main.js","node_modules/@stdlib/utils/get-prototype-of/lib/detect.js","node_modules/@stdlib/utils/get-prototype-of/lib/native.js","node_modules/@stdlib/utils/get-prototype-of/lib/polyfill.js","node_modules/@stdlib/utils/get-prototype-of/lib/proto.js","node_modules/@stdlib/utils/constant-function/lib/index.js","node_modules/@stdlib/utils/constant-function/lib/main.js","node_modules/@stdlib/utils/noop/lib/index.js","node_modules/@stdlib/utils/noop/lib/main.js","node_modules/@stdlib/random/base/improved-ziggurat/lib/index.js","node_modules/@stdlib/random/base/improved-ziggurat/lib/main.js","node_modules/@stdlib/random/base/improved-ziggurat/lib/factory.js","node_modules/@stdlib/assert/is-uint32array/lib/index.js","node_modules/@stdlib/assert/is-uint32array/lib/main.js","node_modules/@stdlib/random/base/mt19937/lib/index.js","node_modules/@stdlib/random/base/mt19937/lib/main.js","node_modules/@stdlib/random/base/mt19937/lib/factory.js","node_modules/@stdlib/assert/is-collection/lib/index.js","node_modules/@stdlib/assert/is-collection/lib/main.js","node_modules/@stdlib/math/base/assert/is-integer/lib/index.js","node_modules/@stdlib/math/base/assert/is-integer/lib/main.js","node_modules/@stdlib/math/base/special/floor/lib/index.js","node_modules/@stdlib/math/base/special/floor/lib/main.js","node_modules/@stdlib/constants/array/max-typed-array-length/lib/index.js","node_modules/@stdlib/assert/is-positive-integer/lib/index.js","node_modules/@stdlib/assert/is-positive-integer/lib/main.js","node_modules/@stdlib/assert/is-positive-integer/lib/primitive.js","node_modules/@stdlib/assert/is-integer/lib/index.js","node_modules/@stdlib/assert/is-integer/lib/main.js","node_modules/@stdlib/assert/is-integer/lib/primitive.js","node_modules/@stdlib/assert/is-number/lib/index.js","node_modules/@stdlib/assert/is-number/lib/main.js","node_modules/@stdlib/assert/is-number/lib/primitive.js","node_modules/@stdlib/assert/is-number/lib/object.js","node_modules/@stdlib/number/ctor/lib/index.js","node_modules/@stdlib/number/ctor/lib/main.js","node_modules/@stdlib/assert/is-number/lib/try2serialize.js","node_modules/@stdlib/assert/is-number/lib/tostring.js","node_modules/@stdlib/assert/is-integer/lib/integer.js","node_modules/@stdlib/constants/float64/pinf/lib/index.js","node_modules/@stdlib/constants/float64/ninf/lib/index.js","node_modules/@stdlib/assert/is-integer/lib/object.js","node_modules/@stdlib/assert/is-positive-integer/lib/object.js","node_modules/@stdlib/constants/float64/max-safe-integer/lib/index.js","node_modules/@stdlib/constants/uint32/max/lib/index.js","node_modules/@stdlib/array/uint32/lib/index.js","node_modules/@stdlib/assert/has-uint32array-support/lib/index.js","node_modules/@stdlib/assert/has-uint32array-support/lib/main.js","node_modules/@stdlib/assert/has-uint32array-support/lib/uint32array.js","node_modules/@stdlib/array/uint32/lib/main.js","node_modules/@stdlib/array/uint32/lib/polyfill.js","node_modules/@stdlib/math/base/special/max/lib/index.js","node_modules/@stdlib/math/base/special/max/lib/main.js","node_modules/@stdlib/math/base/assert/is-positive-zero/lib/index.js","node_modules/@stdlib/math/base/assert/is-positive-zero/lib/main.js","node_modules/@stdlib/math/base/assert/is-nan/lib/index.js","node_modules/@stdlib/math/base/assert/is-nan/lib/main.js","node_modules/@stdlib/math/base/ops/umul/lib/index.js","node_modules/@stdlib/math/base/ops/umul/lib/main.js","node_modules/@stdlib/blas/base/gcopy/lib/index.js","node_modules/@stdlib/blas/base/gcopy/lib/main.js","node_modules/@stdlib/array/base/arraylike2object/lib/index.js","node_modules/@stdlib/array/base/arraylike2object/lib/main.js","node_modules/@stdlib/array/base/assert/is-accessor-array/lib/index.js","node_modules/@stdlib/array/base/assert/is-accessor-array/lib/main.js","node_modules/@stdlib/array/base/getter/lib/index.js","node_modules/@stdlib/array/base/getter/lib/main.js","node_modules/@stdlib/array/base/setter/lib/index.js","node_modules/@stdlib/array/base/setter/lib/main.js","node_modules/@stdlib/array/base/accessor-getter/lib/index.js","node_modules/@stdlib/array/base/accessor-getter/lib/main.js","node_modules/@stdlib/array/base/accessor-setter/lib/index.js","node_modules/@stdlib/array/base/accessor-setter/lib/main.js","node_modules/@stdlib/array/dtype/lib/index.js","node_modules/@stdlib/array/dtype/lib/main.js","node_modules/@stdlib/array/dtype/lib/ctor2dtype.js","node_modules/@stdlib/array/dtype/lib/ctors.js","node_modules/@stdlib/array/float64/lib/index.js","node_modules/@stdlib/assert/has-float64array-support/lib/index.js","node_modules/@stdlib/assert/has-float64array-support/lib/main.js","node_modules/@stdlib/assert/is-float64array/lib/index.js","node_modules/@stdlib/assert/is-float64array/lib/main.js","node_modules/@stdlib/assert/has-float64array-support/lib/float64array.js","node_modules/@stdlib/array/float64/lib/main.js","node_modules/@stdlib/array/float64/lib/polyfill.js","node_modules/@stdlib/array/float32/lib/index.js","node_modules/@stdlib/assert/has-float32array-support/lib/index.js","node_modules/@stdlib/assert/has-float32array-support/lib/main.js","node_modules/@stdlib/assert/is-float32array/lib/index.js","node_modules/@stdlib/assert/is-float32array/lib/main.js","node_modules/@stdlib/assert/has-float32array-support/lib/float32array.js","node_modules/@stdlib/array/float32/lib/main.js","node_modules/@stdlib/array/float32/lib/polyfill.js","node_modules/@stdlib/array/int32/lib/index.js","node_modules/@stdlib/assert/has-int32array-support/lib/index.js","node_modules/@stdlib/assert/has-int32array-support/lib/main.js","node_modules/@stdlib/assert/is-int32array/lib/index.js","node_modules/@stdlib/assert/is-int32array/lib/main.js","node_modules/@stdlib/constants/int32/max/lib/index.js","node_modules/@stdlib/constants/int32/min/lib/index.js","node_modules/@stdlib/assert/has-int32array-support/lib/int32array.js","node_modules/@stdlib/array/int32/lib/main.js","node_modules/@stdlib/array/int32/lib/polyfill.js","node_modules/@stdlib/array/uint16/lib/index.js","node_modules/@stdlib/assert/has-uint16array-support/lib/index.js","node_modules/@stdlib/assert/has-uint16array-support/lib/main.js","node_modules/@stdlib/assert/is-uint16array/lib/index.js","node_modules/@stdlib/assert/is-uint16array/lib/main.js","node_modules/@stdlib/constants/uint16/max/lib/index.js","node_modules/@stdlib/assert/has-uint16array-support/lib/uint16array.js","node_modules/@stdlib/array/uint16/lib/main.js","node_modules/@stdlib/array/uint16/lib/polyfill.js","node_modules/@stdlib/array/int16/lib/index.js","node_modules/@stdlib/assert/has-int16array-support/lib/index.js","node_modules/@stdlib/assert/has-int16array-support/lib/main.js","node_modules/@stdlib/assert/is-int16array/lib/index.js","node_modules/@stdlib/assert/is-int16array/lib/main.js","node_modules/@stdlib/constants/int16/max/lib/index.js","node_modules/@stdlib/constants/int16/min/lib/index.js","node_modules/@stdlib/assert/has-int16array-support/lib/int16array.js","node_modules/@stdlib/array/int16/lib/main.js","node_modules/@stdlib/array/int16/lib/polyfill.js","node_modules/@stdlib/array/uint8/lib/index.js","node_modules/@stdlib/assert/has-uint8array-support/lib/index.js","node_modules/@stdlib/assert/has-uint8array-support/lib/main.js","node_modules/@stdlib/assert/is-uint8array/lib/index.js","node_modules/@stdlib/assert/is-uint8array/lib/main.js","node_modules/@stdlib/constants/uint8/max/lib/index.js","node_modules/@stdlib/assert/has-uint8array-support/lib/uint8array.js","node_modules/@stdlib/array/uint8/lib/main.js","node_modules/@stdlib/array/uint8/lib/polyfill.js","node_modules/@stdlib/array/uint8c/lib/index.js","node_modules/@stdlib/assert/has-uint8clampedarray-support/lib/index.js","node_modules/@stdlib/assert/has-uint8clampedarray-support/lib/main.js","node_modules/@stdlib/assert/is-uint8clampedarray/lib/index.js","node_modules/@stdlib/assert/is-uint8clampedarray/lib/main.js","node_modules/@stdlib/assert/has-uint8clampedarray-support/lib/uint8clampedarray.js","node_modules/@stdlib/array/uint8c/lib/main.js","node_modules/@stdlib/array/uint8c/lib/polyfill.js","node_modules/@stdlib/array/int8/lib/index.js","node_modules/@stdlib/assert/has-int8array-support/lib/index.js","node_modules/@stdlib/assert/has-int8array-support/lib/main.js","node_modules/@stdlib/assert/is-int8array/lib/index.js","node_modules/@stdlib/assert/is-int8array/lib/main.js","node_modules/@stdlib/constants/int8/max/lib/index.js","node_modules/@stdlib/constants/int8/min/lib/index.js","node_modules/@stdlib/assert/has-int8array-support/lib/int8array.js","node_modules/@stdlib/array/int8/lib/main.js","node_modules/@stdlib/array/int8/lib/polyfill.js","node_modules/@stdlib/array/complex64/lib/index.js","node_modules/@stdlib/array/complex64/lib/main.js","node_modules/@stdlib/assert/is-nonnegative-integer/lib/index.js","node_modules/@stdlib/assert/is-nonnegative-integer/lib/main.js","node_modules/@stdlib/assert/is-nonnegative-integer/lib/primitive.js","node_modules/@stdlib/assert/is-nonnegative-integer/lib/object.js","node_modules/@stdlib/assert/is-array-like-object/lib/index.js","node_modules/@stdlib/assert/is-array-like-object/lib/main.js","node_modules/@stdlib/constants/array/max-array-length/lib/index.js","node_modules/@stdlib/assert/is-arraybuffer/lib/index.js","node_modules/@stdlib/assert/is-arraybuffer/lib/main.js","node_modules/@stdlib/assert/is-string-array/lib/index.js","node_modules/@stdlib/assert/is-string/lib/index.js","node_modules/@stdlib/assert/is-string/lib/main.js","node_modules/@stdlib/assert/is-string/lib/primitive.js","node_modules/@stdlib/assert/is-string/lib/object.js","node_modules/@stdlib/assert/is-string/lib/try2valueof.js","node_modules/@stdlib/assert/is-string/lib/valueof.js","node_modules/@stdlib/assert/is-complex-like/lib/index.js","node_modules/@stdlib/assert/is-complex-like/lib/main.js","node_modules/@stdlib/complex/float64/ctor/lib/index.js","node_modules/@stdlib/complex/float64/ctor/lib/main.js","node_modules/@stdlib/complex/float64/ctor/lib/tostring.js","node_modules/@stdlib/complex/float64/ctor/lib/tojson.js","node_modules/@stdlib/complex/float32/ctor/lib/index.js","node_modules/@stdlib/complex/float32/ctor/lib/main.js","node_modules/@stdlib/number/float64/base/to-float32/lib/index.js","node_modules/@stdlib/number/float64/base/to-float32/lib/main.js","node_modules/@stdlib/number/float64/base/to-float32/lib/polyfill.js","node_modules/@stdlib/complex/float32/ctor/lib/tostring.js","node_modules/@stdlib/complex/float32/ctor/lib/tojson.js","node_modules/@stdlib/math/base/assert/is-even/lib/index.js","node_modules/@stdlib/math/base/assert/is-even/lib/main.js","node_modules/@stdlib/array/base/assert/is-complex64array/lib/index.js","node_modules/@stdlib/array/base/assert/is-complex64array/lib/main.js","node_modules/@stdlib/array/base/assert/is-complex128array/lib/index.js","node_modules/@stdlib/array/base/assert/is-complex128array/lib/main.js","node_modules/@stdlib/assert/has-iterator-symbol-support/lib/index.js","node_modules/@stdlib/assert/has-iterator-symbol-support/lib/main.js","node_modules/@stdlib/symbol/iterator/lib/index.js","node_modules/@stdlib/symbol/iterator/lib/main.js","node_modules/@stdlib/complex/float32/real/lib/index.js","node_modules/@stdlib/complex/float32/real/lib/main.js","node_modules/@stdlib/complex/float32/imag/lib/index.js","node_modules/@stdlib/complex/float32/imag/lib/main.js","node_modules/@stdlib/strided/base/reinterpret-complex64/lib/index.js","node_modules/@stdlib/strided/base/reinterpret-complex64/lib/main.js","node_modules/@stdlib/strided/base/reinterpret-complex128/lib/index.js","node_modules/@stdlib/strided/base/reinterpret-complex128/lib/main.js","node_modules/@stdlib/array/complex64/lib/from_iterator.js","node_modules/@stdlib/array/complex64/lib/from_iterator_map.js","node_modules/@stdlib/array/complex64/lib/from_array.js","node_modules/@stdlib/array/complex128/lib/index.js","node_modules/@stdlib/array/complex128/lib/main.js","node_modules/@stdlib/complex/float64/real/lib/index.js","node_modules/@stdlib/complex/float64/real/lib/main.js","node_modules/@stdlib/complex/float64/imag/lib/index.js","node_modules/@stdlib/complex/float64/imag/lib/main.js","node_modules/@stdlib/array/complex128/lib/from_iterator.js","node_modules/@stdlib/array/complex128/lib/from_iterator_map.js","node_modules/@stdlib/array/complex128/lib/from_array.js","node_modules/@stdlib/array/bool/lib/index.js","node_modules/@stdlib/array/bool/lib/main.js","node_modules/@stdlib/array/bool/lib/from_iterator.js","node_modules/@stdlib/array/bool/lib/from_iterator_map.js","node_modules/@stdlib/array/bool/lib/from_array.js","node_modules/@stdlib/array/dtype/lib/dtypes.js","node_modules/@stdlib/blas/base/gcopy/lib/accessors.js","node_modules/@stdlib/blas/base/gcopy/lib/ndarray.js","node_modules/@stdlib/array/to-json/lib/index.js","node_modules/@stdlib/array/to-json/lib/main.js","node_modules/@stdlib/assert/is-typed-array/lib/index.js","node_modules/@stdlib/assert/is-typed-array/lib/main.js","node_modules/@stdlib/utils/function-name/lib/index.js","node_modules/@stdlib/utils/function-name/lib/main.js","node_modules/@stdlib/assert/has-function-name-support/lib/index.js","node_modules/@stdlib/assert/has-function-name-support/lib/main.js","node_modules/@stdlib/assert/has-function-name-support/lib/foo.js","node_modules/@stdlib/assert/is-typed-array/lib/ctors.js","node_modules/@stdlib/assert/is-typed-array/lib/names.json","node_modules/@stdlib/assert/is-complex-typed-array/lib/index.js","node_modules/@stdlib/assert/is-complex-typed-array/lib/main.js","node_modules/@stdlib/assert/is-complex-typed-array/lib/ctors.js","node_modules/@stdlib/assert/is-complex-typed-array/lib/names.json","node_modules/@stdlib/assert/is-booleanarray/lib/index.js","node_modules/@stdlib/assert/is-booleanarray/lib/main.js","node_modules/@stdlib/strided/base/reinterpret-boolean/lib/index.js","node_modules/@stdlib/strided/base/reinterpret-boolean/lib/main.js","node_modules/@stdlib/array/to-json/lib/type.js","node_modules/@stdlib/assert/instance-of/lib/index.js","node_modules/@stdlib/assert/instance-of/lib/main.js","node_modules/@stdlib/array/to-json/lib/ctors.js","node_modules/@stdlib/random/base/mt19937/lib/rand_uint32.js","node_modules/@stdlib/random/base/improved-ziggurat/lib/improved_ziggurat.js","node_modules/@stdlib/math/base/special/abs/lib/index.js","node_modules/@stdlib/math/base/special/abs/lib/main.js","node_modules/@stdlib/math/base/special/exp/lib/index.js","node_modules/@stdlib/math/base/special/exp/lib/main.js","node_modules/@stdlib/math/base/special/trunc/lib/index.js","node_modules/@stdlib/math/base/special/trunc/lib/main.js","node_modules/@stdlib/math/base/special/ceil/lib/index.js","node_modules/@stdlib/math/base/special/ceil/lib/main.js","node_modules/@stdlib/math/base/special/exp/lib/expmulti.js","node_modules/@stdlib/math/base/special/ldexp/lib/index.js","node_modules/@stdlib/math/base/special/ldexp/lib/main.js","node_modules/@stdlib/constants/float64/exponent-bias/lib/index.js","node_modules/@stdlib/constants/float64/max-base2-exponent/lib/index.js","node_modules/@stdlib/constants/float64/max-base2-exponent-subnormal/lib/index.js","node_modules/@stdlib/constants/float64/min-base2-exponent-subnormal/lib/index.js","node_modules/@stdlib/math/base/assert/is-infinite/lib/index.js","node_modules/@stdlib/math/base/assert/is-infinite/lib/main.js","node_modules/@stdlib/math/base/special/copysign/lib/index.js","node_modules/@stdlib/math/base/special/copysign/lib/main.js","node_modules/@stdlib/constants/float64/high-word-sign-mask/lib/index.js","node_modules/@stdlib/constants/float64/high-word-abs-mask/lib/index.js","node_modules/@stdlib/number/float64/base/to-words/lib/index.js","node_modules/@stdlib/number/float64/base/to-words/lib/main.js","node_modules/@stdlib/number/float64/base/to-words/lib/assign.js","node_modules/@stdlib/number/float64/base/to-words/lib/indices.js","node_modules/@stdlib/assert/is-little-endian/lib/index.js","node_modules/@stdlib/assert/is-little-endian/lib/main.js","node_modules/@stdlib/assert/is-little-endian/lib/ctors.js","node_modules/@stdlib/number/float64/base/get-high-word/lib/index.js","node_modules/@stdlib/number/float64/base/get-high-word/lib/main.js","node_modules/@stdlib/number/float64/base/get-high-word/lib/high.js","node_modules/@stdlib/number/float64/base/from-words/lib/index.js","node_modules/@stdlib/number/float64/base/from-words/lib/main.js","node_modules/@stdlib/number/float64/base/from-words/lib/indices.js","node_modules/@stdlib/number/float64/base/normalize/lib/index.js","node_modules/@stdlib/number/float64/base/normalize/lib/main.js","node_modules/@stdlib/number/float64/base/normalize/lib/assign.js","node_modules/@stdlib/constants/float64/smallest-normal/lib/index.js","node_modules/@stdlib/number/float64/base/exponent/lib/index.js","node_modules/@stdlib/number/float64/base/exponent/lib/main.js","node_modules/@stdlib/constants/float64/high-word-exponent-mask/lib/index.js","node_modules/@stdlib/math/base/special/exp/lib/polyval_p.js","node_modules/@stdlib/random/base/improved-ziggurat/lib/coords_array.js","node_modules/@stdlib/math/base/special/sqrt/lib/index.js","node_modules/@stdlib/math/base/special/sqrt/lib/main.js","node_modules/@stdlib/math/base/special/ln/lib/index.js","node_modules/@stdlib/math/base/special/ln/lib/main.js","node_modules/@stdlib/number/float64/base/set-high-word/lib/index.js","node_modules/@stdlib/number/float64/base/set-high-word/lib/main.js","node_modules/@stdlib/number/float64/base/set-high-word/lib/high.js","node_modules/@stdlib/math/base/special/ln/lib/polyval_p.js","node_modules/@stdlib/math/base/special/ln/lib/polyval_q.js","node_modules/@stdlib/random/base/improved-ziggurat/lib/ratio_array.js","node_modules/@stdlib/random/base/improved-ziggurat/lib/sample_tail.js","node_modules/@stdlib/random/base/lognormal/lib/validate.js","node_modules/@stdlib/assert/is-positive-number/lib/index.js","node_modules/@stdlib/assert/is-positive-number/lib/main.js","node_modules/@stdlib/assert/is-positive-number/lib/primitive.js","node_modules/@stdlib/assert/is-positive-number/lib/object.js","node_modules/@stdlib/assert/is-nan/lib/index.js","node_modules/@stdlib/assert/is-nan/lib/main.js","node_modules/@stdlib/assert/is-nan/lib/primitive.js","node_modules/@stdlib/assert/is-nan/lib/object.js","node_modules/@stdlib/random/base/lognormal/lib/lognormal.js","node_modules/@stdlib/random/base/normal/lib/index.js","node_modules/@stdlib/random/base/normal/lib/main.js","node_modules/@stdlib/random/base/normal/lib/factory.js","node_modules/@stdlib/random/base/normal/lib/validate.js","node_modules/@stdlib/random/base/normal/lib/normal.js","node_modules/@stdlib/random/base/uniform/lib/index.js","node_modules/@stdlib/random/base/uniform/lib/main.js","node_modules/@stdlib/random/base/uniform/lib/factory.js","node_modules/@stdlib/random/base/uniform/lib/validate.js","node_modules/@stdlib/random/base/uniform/lib/uniform.js","node_modules/@stdlib/stats/base/mean/lib/index.js","node_modules/@stdlib/stats/base/mean/lib/main.js","node_modules/@stdlib/stats/base/mean/lib/mean.js","node_modules/@stdlib/stats/base/meanpn/lib/index.js","node_modules/@stdlib/stats/base/meanpn/lib/main.js","node_modules/@stdlib/stats/base/meanpn/lib/meanpn.js","node_modules/@stdlib/blas/ext/base/gsumpw/lib/index.js","node_modules/@stdlib/blas/ext/base/gsumpw/lib/main.js","node_modules/@stdlib/blas/ext/base/gsumpw/lib/ndarray.js","node_modules/@stdlib/blas/ext/base/gapxsumpw/lib/index.js","node_modules/@stdlib/blas/ext/base/gapxsumpw/lib/main.js","node_modules/@stdlib/blas/ext/base/gapxsumpw/lib/ndarray.js","node_modules/@stdlib/stats/base/meanpn/lib/ndarray.js","node_modules/@stdlib/stats/base/mean/lib/ndarray.js","node_modules/@stdlib/stats/base/stdev/lib/index.js","node_modules/@stdlib/stats/base/stdev/lib/main.js","node_modules/@stdlib/stats/base/stdev/lib/stdev.js","node_modules/@stdlib/stats/base/stdevpn/lib/index.js","node_modules/@stdlib/stats/base/stdevpn/lib/main.js","node_modules/@stdlib/stats/base/stdevpn/lib/stdevpn.js","node_modules/@stdlib/stats/base/variancepn/lib/index.js","node_modules/@stdlib/stats/base/variancepn/lib/main.js","node_modules/@stdlib/stats/base/variancepn/lib/variancepn.js","node_modules/@stdlib/stats/base/variancepn/lib/ndarray.js","node_modules/@stdlib/stats/base/stdevpn/lib/ndarray.js","node_modules/@stdlib/stats/base/stdev/lib/ndarray.js","node_modules/@stdlib/utils/parse-json/lib/index.js","node_modules/@stdlib/utils/parse-json/lib/main.js","node_modules/@stdlib/fs/read-file/lib/index.js","node_modules/@stdlib/fs/read-file/lib/main.js","node_modules/@parcel/node-resolver-core/lib/_empty.js","node_modules/@stdlib/fs/read-file/lib/sync.js"],"sourcesContent":["(() => {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $6f0ad54a2a2a621f$exports = {};\n$6f0ad54a2a2a621f$exports = JSON.parse(\"[{\\\"Date\\\":\\\"01/02/2025\\\",\\\"Close\\\":243.85},{\\\"Date\\\":\\\"01/03/2025\\\",\\\"Close\\\":243.36},{\\\"Date\\\":\\\"01/06/2025\\\",\\\"Close\\\":245},{\\\"Date\\\":\\\"01/07/2025\\\",\\\"Close\\\":242.21},{\\\"Date\\\":\\\"01/08/2025\\\",\\\"Close\\\":242.7},{\\\"Date\\\":\\\"01/10/2025\\\",\\\"Close\\\":236.85},{\\\"Date\\\":\\\"01/13/2025\\\",\\\"Close\\\":234.4},{\\\"Date\\\":\\\"01/14/2025\\\",\\\"Close\\\":233.28},{\\\"Date\\\":\\\"01/15/2025\\\",\\\"Close\\\":237.87},{\\\"Date\\\":\\\"01/16/2025\\\",\\\"Close\\\":228.26},{\\\"Date\\\":\\\"01/17/2025\\\",\\\"Close\\\":229.98},{\\\"Date\\\":\\\"01/21/2025\\\",\\\"Close\\\":222.64},{\\\"Date\\\":\\\"01/22/2025\\\",\\\"Close\\\":223.83},{\\\"Date\\\":\\\"01/23/2025\\\",\\\"Close\\\":223.66},{\\\"Date\\\":\\\"01/24/2025\\\",\\\"Close\\\":222.78},{\\\"Date\\\":\\\"01/27/2025\\\",\\\"Close\\\":229.86},{\\\"Date\\\":\\\"01/28/2025\\\",\\\"Close\\\":238.26},{\\\"Date\\\":\\\"01/29/2025\\\",\\\"Close\\\":239.36},{\\\"Date\\\":\\\"01/30/2025\\\",\\\"Close\\\":237.59},{\\\"Date\\\":\\\"01/31/2025\\\",\\\"Close\\\":236},{\\\"Date\\\":\\\"02/03/2025\\\",\\\"Close\\\":228.01},{\\\"Date\\\":\\\"02/04/2025\\\",\\\"Close\\\":232.8},{\\\"Date\\\":\\\"02/05/2025\\\",\\\"Close\\\":232.47},{\\\"Date\\\":\\\"02/06/2025\\\",\\\"Close\\\":233.22},{\\\"Date\\\":\\\"02/07/2025\\\",\\\"Close\\\":227.63},{\\\"Date\\\":\\\"02/10/2025\\\",\\\"Close\\\":227.65},{\\\"Date\\\":\\\"02/11/2025\\\",\\\"Close\\\":232.62},{\\\"Date\\\":\\\"02/12/2025\\\",\\\"Close\\\":236.87},{\\\"Date\\\":\\\"02/13/2025\\\",\\\"Close\\\":241.53},{\\\"Date\\\":\\\"02/14/2025\\\",\\\"Close\\\":244.6},{\\\"Date\\\":\\\"02/18/2025\\\",\\\"Close\\\":244.47},{\\\"Date\\\":\\\"02/19/2025\\\",\\\"Close\\\":244.87},{\\\"Date\\\":\\\"02/20/2025\\\",\\\"Close\\\":245.83},{\\\"Date\\\":\\\"02/21/2025\\\",\\\"Close\\\":245.55},{\\\"Date\\\":\\\"02/24/2025\\\",\\\"Close\\\":247.1},{\\\"Date\\\":\\\"02/25/2025\\\",\\\"Close\\\":247.04},{\\\"Date\\\":\\\"02/26/2025\\\",\\\"Close\\\":240.36},{\\\"Date\\\":\\\"02/27/2025\\\",\\\"Close\\\":237.3},{\\\"Date\\\":\\\"02/28/2025\\\",\\\"Close\\\":241.84},{\\\"Date\\\":\\\"03/03/2025\\\",\\\"Close\\\":238.03},{\\\"Date\\\":\\\"03/04/2025\\\",\\\"Close\\\":235.93},{\\\"Date\\\":\\\"03/05/2025\\\",\\\"Close\\\":235.74},{\\\"Date\\\":\\\"03/06/2025\\\",\\\"Close\\\":235.33},{\\\"Date\\\":\\\"03/07/2025\\\",\\\"Close\\\":239.07},{\\\"Date\\\":\\\"03/10/2025\\\",\\\"Close\\\":227.48},{\\\"Date\\\":\\\"03/11/2025\\\",\\\"Close\\\":220.84},{\\\"Date\\\":\\\"03/12/2025\\\",\\\"Close\\\":216.98},{\\\"Date\\\":\\\"03/13/2025\\\",\\\"Close\\\":209.68},{\\\"Date\\\":\\\"03/14/2025\\\",\\\"Close\\\":213.49},{\\\"Date\\\":\\\"03/17/2025\\\",\\\"Close\\\":214},{\\\"Date\\\":\\\"03/18/2025\\\",\\\"Close\\\":212.69},{\\\"Date\\\":\\\"03/19/2025\\\",\\\"Close\\\":215.24},{\\\"Date\\\":\\\"03/20/2025\\\",\\\"Close\\\":214.1},{\\\"Date\\\":\\\"03/21/2025\\\",\\\"Close\\\":218.27},{\\\"Date\\\":\\\"03/24/2025\\\",\\\"Close\\\":220.73},{\\\"Date\\\":\\\"03/25/2025\\\",\\\"Close\\\":223.75},{\\\"Date\\\":\\\"03/26/2025\\\",\\\"Close\\\":221.53},{\\\"Date\\\":\\\"03/27/2025\\\",\\\"Close\\\":223.85}]\");\n\n\nvar $5781d91b55e476c0$exports = {};\n$5781d91b55e476c0$exports = JSON.parse(\"[{\\\"Date\\\":\\\"01/02/2025\\\",\\\"Close\\\":220.22},{\\\"Date\\\":\\\"01/03/2025\\\",\\\"Close\\\":224.19},{\\\"Date\\\":\\\"01/06/2025\\\",\\\"Close\\\":227.61},{\\\"Date\\\":\\\"01/07/2025\\\",\\\"Close\\\":222.11},{\\\"Date\\\":\\\"01/08/2025\\\",\\\"Close\\\":222.13},{\\\"Date\\\":\\\"01/10/2025\\\",\\\"Close\\\":218.94},{\\\"Date\\\":\\\"01/13/2025\\\",\\\"Close\\\":218.46},{\\\"Date\\\":\\\"01/14/2025\\\",\\\"Close\\\":217.76},{\\\"Date\\\":\\\"01/15/2025\\\",\\\"Close\\\":223.35},{\\\"Date\\\":\\\"01/16/2025\\\",\\\"Close\\\":220.66},{\\\"Date\\\":\\\"01/17/2025\\\",\\\"Close\\\":225.94},{\\\"Date\\\":\\\"01/21/2025\\\",\\\"Close\\\":230.71},{\\\"Date\\\":\\\"01/22/2025\\\",\\\"Close\\\":235.01},{\\\"Date\\\":\\\"01/23/2025\\\",\\\"Close\\\":235.42},{\\\"Date\\\":\\\"01/24/2025\\\",\\\"Close\\\":234.85},{\\\"Date\\\":\\\"01/27/2025\\\",\\\"Close\\\":235.42},{\\\"Date\\\":\\\"01/28/2025\\\",\\\"Close\\\":238.15},{\\\"Date\\\":\\\"01/29/2025\\\",\\\"Close\\\":237.07},{\\\"Date\\\":\\\"01/30/2025\\\",\\\"Close\\\":234.64},{\\\"Date\\\":\\\"01/31/2025\\\",\\\"Close\\\":237.68},{\\\"Date\\\":\\\"02/03/2025\\\",\\\"Close\\\":237.42},{\\\"Date\\\":\\\"02/04/2025\\\",\\\"Close\\\":242.06},{\\\"Date\\\":\\\"02/05/2025\\\",\\\"Close\\\":236.17},{\\\"Date\\\":\\\"02/06/2025\\\",\\\"Close\\\":238.83},{\\\"Date\\\":\\\"02/07/2025\\\",\\\"Close\\\":229.15},{\\\"Date\\\":\\\"02/10/2025\\\",\\\"Close\\\":233.14},{\\\"Date\\\":\\\"02/11/2025\\\",\\\"Close\\\":232.76},{\\\"Date\\\":\\\"02/12/2025\\\",\\\"Close\\\":228.93},{\\\"Date\\\":\\\"02/13/2025\\\",\\\"Close\\\":230.37},{\\\"Date\\\":\\\"02/14/2025\\\",\\\"Close\\\":228.68},{\\\"Date\\\":\\\"02/18/2025\\\",\\\"Close\\\":226.65},{\\\"Date\\\":\\\"02/19/2025\\\",\\\"Close\\\":226.63},{\\\"Date\\\":\\\"02/20/2025\\\",\\\"Close\\\":222.88},{\\\"Date\\\":\\\"02/21/2025\\\",\\\"Close\\\":216.58},{\\\"Date\\\":\\\"02/24/2025\\\",\\\"Close\\\":212.71},{\\\"Date\\\":\\\"02/25/2025\\\",\\\"Close\\\":212.8},{\\\"Date\\\":\\\"02/26/2025\\\",\\\"Close\\\":214.35},{\\\"Date\\\":\\\"02/27/2025\\\",\\\"Close\\\":208.74},{\\\"Date\\\":\\\"02/28/2025\\\",\\\"Close\\\":212.28},{\\\"Date\\\":\\\"03/03/2025\\\",\\\"Close\\\":205.02},{\\\"Date\\\":\\\"03/04/2025\\\",\\\"Close\\\":203.8},{\\\"Date\\\":\\\"03/05/2025\\\",\\\"Close\\\":208.36},{\\\"Date\\\":\\\"03/06/2025\\\",\\\"Close\\\":200.7},{\\\"Date\\\":\\\"03/07/2025\\\",\\\"Close\\\":199.25},{\\\"Date\\\":\\\"03/10/2025\\\",\\\"Close\\\":194.54},{\\\"Date\\\":\\\"03/11/2025\\\",\\\"Close\\\":196.59},{\\\"Date\\\":\\\"03/12/2025\\\",\\\"Close\\\":198.89},{\\\"Date\\\":\\\"03/13/2025\\\",\\\"Close\\\":193.89},{\\\"Date\\\":\\\"03/14/2025\\\",\\\"Close\\\":197.95},{\\\"Date\\\":\\\"03/17/2025\\\",\\\"Close\\\":195.74},{\\\"Date\\\":\\\"03/18/2025\\\",\\\"Close\\\":192.82},{\\\"Date\\\":\\\"03/19/2025\\\",\\\"Close\\\":195.54},{\\\"Date\\\":\\\"03/20/2025\\\",\\\"Close\\\":194.95},{\\\"Date\\\":\\\"03/21/2025\\\",\\\"Close\\\":196.21},{\\\"Date\\\":\\\"03/24/2025\\\",\\\"Close\\\":203.26},{\\\"Date\\\":\\\"03/25/2025\\\",\\\"Close\\\":205.71},{\\\"Date\\\":\\\"03/26/2025\\\",\\\"Close\\\":201.13},{\\\"Date\\\":\\\"03/27/2025\\\",\\\"Close\\\":201.36}]\");\n\n\nvar $2046038b2cff296f$exports = {};\n$2046038b2cff296f$exports = JSON.parse(\"[{\\\"Date\\\":\\\"01/02/2025\\\",\\\"Close\\\":886.73},{\\\"Date\\\":\\\"01/03/2025\\\",\\\"Close\\\":881.05},{\\\"Date\\\":\\\"01/06/2025\\\",\\\"Close\\\":881.79},{\\\"Date\\\":\\\"01/07/2025\\\",\\\"Close\\\":879.19},{\\\"Date\\\":\\\"01/08/2025\\\",\\\"Close\\\":875},{\\\"Date\\\":\\\"01/10/2025\\\",\\\"Close\\\":837.69},{\\\"Date\\\":\\\"01/13/2025\\\",\\\"Close\\\":840.29},{\\\"Date\\\":\\\"01/14/2025\\\",\\\"Close\\\":828.4},{\\\"Date\\\":\\\"01/15/2025\\\",\\\"Close\\\":848.26},{\\\"Date\\\":\\\"01/16/2025\\\",\\\"Close\\\":842.37},{\\\"Date\\\":\\\"01/17/2025\\\",\\\"Close\\\":858.1},{\\\"Date\\\":\\\"01/21/2025\\\",\\\"Close\\\":869.68},{\\\"Date\\\":\\\"01/22/2025\\\",\\\"Close\\\":953.99},{\\\"Date\\\":\\\"01/23/2025\\\",\\\"Close\\\":984.86},{\\\"Date\\\":\\\"01/24/2025\\\",\\\"Close\\\":977.59},{\\\"Date\\\":\\\"01/27/2025\\\",\\\"Close\\\":971.89},{\\\"Date\\\":\\\"01/28/2025\\\",\\\"Close\\\":971.83},{\\\"Date\\\":\\\"01/29/2025\\\",\\\"Close\\\":978.15},{\\\"Date\\\":\\\"01/30/2025\\\",\\\"Close\\\":973.24},{\\\"Date\\\":\\\"01/31/2025\\\",\\\"Close\\\":976.76},{\\\"Date\\\":\\\"02/03/2025\\\",\\\"Close\\\":978.94},{\\\"Date\\\":\\\"02/04/2025\\\",\\\"Close\\\":994.87},{\\\"Date\\\":\\\"02/05/2025\\\",\\\"Close\\\":1011.11},{\\\"Date\\\":\\\"02/06/2025\\\",\\\"Close\\\":1015.68},{\\\"Date\\\":\\\"02/07/2025\\\",\\\"Close\\\":1013.93},{\\\"Date\\\":\\\"02/10/2025\\\",\\\"Close\\\":1027.6},{\\\"Date\\\":\\\"02/11/2025\\\",\\\"Close\\\":1008.08},{\\\"Date\\\":\\\"02/12/2025\\\",\\\"Close\\\":1027.31},{\\\"Date\\\":\\\"02/13/2025\\\",\\\"Close\\\":1043.69},{\\\"Date\\\":\\\"02/14/2025\\\",\\\"Close\\\":1058.6},{\\\"Date\\\":\\\"02/18/2025\\\",\\\"Close\\\":1035.85},{\\\"Date\\\":\\\"02/19/2025\\\",\\\"Close\\\":1043.33},{\\\"Date\\\":\\\"02/20/2025\\\",\\\"Close\\\":1024.54},{\\\"Date\\\":\\\"02/21/2025\\\",\\\"Close\\\":1003.15},{\\\"Date\\\":\\\"02/24/2025\\\",\\\"Close\\\":988.47},{\\\"Date\\\":\\\"02/25/2025\\\",\\\"Close\\\":977.24},{\\\"Date\\\":\\\"02/26/2025\\\",\\\"Close\\\":990.06},{\\\"Date\\\":\\\"02/27/2025\\\",\\\"Close\\\":963.07},{\\\"Date\\\":\\\"02/28/2025\\\",\\\"Close\\\":980.56},{\\\"Date\\\":\\\"03/03/2025\\\",\\\"Close\\\":973.7},{\\\"Date\\\":\\\"03/04/2025\\\",\\\"Close\\\":972.58},{\\\"Date\\\":\\\"03/05/2025\\\",\\\"Close\\\":990.92},{\\\"Date\\\":\\\"03/06/2025\\\",\\\"Close\\\":906.36},{\\\"Date\\\":\\\"03/07/2025\\\",\\\"Close\\\":891.11},{\\\"Date\\\":\\\"03/10/2025\\\",\\\"Close\\\":866.68},{\\\"Date\\\":\\\"03/11/2025\\\",\\\"Close\\\":895.1},{\\\"Date\\\":\\\"03/12/2025\\\",\\\"Close\\\":919.68},{\\\"Date\\\":\\\"03/13/2025\\\",\\\"Close\\\":890.17},{\\\"Date\\\":\\\"03/14/2025\\\",\\\"Close\\\":918},{\\\"Date\\\":\\\"03/17/2025\\\",\\\"Close\\\":950.02},{\\\"Date\\\":\\\"03/18/2025\\\",\\\"Close\\\":929.98},{\\\"Date\\\":\\\"03/19/2025\\\",\\\"Close\\\":959.49},{\\\"Date\\\":\\\"03/20/2025\\\",\\\"Close\\\":950.84},{\\\"Date\\\":\\\"03/21/2025\\\",\\\"Close\\\":960.29},{\\\"Date\\\":\\\"03/24/2025\\\",\\\"Close\\\":971.99},{\\\"Date\\\":\\\"03/25/2025\\\",\\\"Close\\\":997.28},{\\\"Date\\\":\\\"03/26/2025\\\",\\\"Close\\\":970.65},{\\\"Date\\\":\\\"03/27/2025\\\",\\\"Close\\\":976.72}]\");\n\n\nvar $8e1b699ad97a9f1e$exports = {};\n$8e1b699ad97a9f1e$exports = JSON.parse(\"[{\\\"Date\\\":\\\"01/02/2025\\\",\\\"Close\\\":190.63},{\\\"Date\\\":\\\"01/03/2025\\\",\\\"Close\\\":193.13},{\\\"Date\\\":\\\"01/06/2025\\\",\\\"Close\\\":197.96},{\\\"Date\\\":\\\"01/07/2025\\\",\\\"Close\\\":196.71},{\\\"Date\\\":\\\"01/08/2025\\\",\\\"Close\\\":195.39},{\\\"Date\\\":\\\"01/10/2025\\\",\\\"Close\\\":193.17},{\\\"Date\\\":\\\"01/13/2025\\\",\\\"Close\\\":192.29},{\\\"Date\\\":\\\"01/14/2025\\\",\\\"Close\\\":191.05},{\\\"Date\\\":\\\"01/15/2025\\\",\\\"Close\\\":196.98},{\\\"Date\\\":\\\"01/16/2025\\\",\\\"Close\\\":194.41},{\\\"Date\\\":\\\"01/17/2025\\\",\\\"Close\\\":197.55},{\\\"Date\\\":\\\"01/21/2025\\\",\\\"Close\\\":199.63},{\\\"Date\\\":\\\"01/22/2025\\\",\\\"Close\\\":200.03},{\\\"Date\\\":\\\"01/23/2025\\\",\\\"Close\\\":199.58},{\\\"Date\\\":\\\"01/24/2025\\\",\\\"Close\\\":201.9},{\\\"Date\\\":\\\"01/27/2025\\\",\\\"Close\\\":193.77},{\\\"Date\\\":\\\"01/28/2025\\\",\\\"Close\\\":197.07},{\\\"Date\\\":\\\"01/29/2025\\\",\\\"Close\\\":197.18},{\\\"Date\\\":\\\"01/30/2025\\\",\\\"Close\\\":202.63},{\\\"Date\\\":\\\"01/31/2025\\\",\\\"Close\\\":205.6},{\\\"Date\\\":\\\"02/03/2025\\\",\\\"Close\\\":202.64},{\\\"Date\\\":\\\"02/04/2025\\\",\\\"Close\\\":207.71},{\\\"Date\\\":\\\"02/05/2025\\\",\\\"Close\\\":193.3},{\\\"Date\\\":\\\"02/06/2025\\\",\\\"Close\\\":193.31},{\\\"Date\\\":\\\"02/07/2025\\\",\\\"Close\\\":187.14},{\\\"Date\\\":\\\"02/10/2025\\\",\\\"Close\\\":188.2},{\\\"Date\\\":\\\"02/11/2025\\\",\\\"Close\\\":187.07},{\\\"Date\\\":\\\"02/12/2025\\\",\\\"Close\\\":185.43},{\\\"Date\\\":\\\"02/13/2025\\\",\\\"Close\\\":187.88},{\\\"Date\\\":\\\"02/14/2025\\\",\\\"Close\\\":186.87},{\\\"Date\\\":\\\"02/18/2025\\\",\\\"Close\\\":185.8},{\\\"Date\\\":\\\"02/19/2025\\\",\\\"Close\\\":187.13},{\\\"Date\\\":\\\"02/20/2025\\\",\\\"Close\\\":186.64},{\\\"Date\\\":\\\"02/21/2025\\\",\\\"Close\\\":181.58},{\\\"Date\\\":\\\"02/24/2025\\\",\\\"Close\\\":181.19},{\\\"Date\\\":\\\"02/25/2025\\\",\\\"Close\\\":177.37},{\\\"Date\\\":\\\"02/26/2025\\\",\\\"Close\\\":174.7},{\\\"Date\\\":\\\"02/27/2025\\\",\\\"Close\\\":170.21},{\\\"Date\\\":\\\"02/28/2025\\\",\\\"Close\\\":172.22},{\\\"Date\\\":\\\"03/03/2025\\\",\\\"Close\\\":168.66},{\\\"Date\\\":\\\"03/04/2025\\\",\\\"Close\\\":172.61},{\\\"Date\\\":\\\"03/05/2025\\\",\\\"Close\\\":174.99},{\\\"Date\\\":\\\"03/06/2025\\\",\\\"Close\\\":174.21},{\\\"Date\\\":\\\"03/07/2025\\\",\\\"Close\\\":175.75},{\\\"Date\\\":\\\"03/10/2025\\\",\\\"Close\\\":167.81},{\\\"Date\\\":\\\"03/11/2025\\\",\\\"Close\\\":165.98},{\\\"Date\\\":\\\"03/12/2025\\\",\\\"Close\\\":169},{\\\"Date\\\":\\\"03/13/2025\\\",\\\"Close\\\":164.73},{\\\"Date\\\":\\\"03/14/2025\\\",\\\"Close\\\":167.62},{\\\"Date\\\":\\\"03/17/2025\\\",\\\"Close\\\":166.57},{\\\"Date\\\":\\\"03/18/2025\\\",\\\"Close\\\":162.67},{\\\"Date\\\":\\\"03/19/2025\\\",\\\"Close\\\":166.28},{\\\"Date\\\":\\\"03/20/2025\\\",\\\"Close\\\":165.05},{\\\"Date\\\":\\\"03/21/2025\\\",\\\"Close\\\":166.25},{\\\"Date\\\":\\\"03/24/2025\\\",\\\"Close\\\":169.93},{\\\"Date\\\":\\\"03/25/2025\\\",\\\"Close\\\":172.79},{\\\"Date\\\":\\\"03/26/2025\\\",\\\"Close\\\":167.14},{\\\"Date\\\":\\\"03/27/2025\\\",\\\"Close\\\":164.08}]\");\n\n\nvar $735bc78b1ba08f31$exports = {};\n$735bc78b1ba08f31$exports = JSON.parse(\"[{\\\"Date\\\":\\\"01/02/2025\\\",\\\"Close\\\":599.24},{\\\"Date\\\":\\\"01/03/2025\\\",\\\"Close\\\":604.63},{\\\"Date\\\":\\\"01/06/2025\\\",\\\"Close\\\":630.2},{\\\"Date\\\":\\\"01/07/2025\\\",\\\"Close\\\":617.89},{\\\"Date\\\":\\\"01/08/2025\\\",\\\"Close\\\":610.72},{\\\"Date\\\":\\\"01/10/2025\\\",\\\"Close\\\":615.86},{\\\"Date\\\":\\\"01/13/2025\\\",\\\"Close\\\":608.33},{\\\"Date\\\":\\\"01/14/2025\\\",\\\"Close\\\":594.25},{\\\"Date\\\":\\\"01/15/2025\\\",\\\"Close\\\":617.12},{\\\"Date\\\":\\\"01/16/2025\\\",\\\"Close\\\":611.3},{\\\"Date\\\":\\\"01/17/2025\\\",\\\"Close\\\":612.77},{\\\"Date\\\":\\\"01/21/2025\\\",\\\"Close\\\":616.46},{\\\"Date\\\":\\\"01/22/2025\\\",\\\"Close\\\":623.5},{\\\"Date\\\":\\\"01/23/2025\\\",\\\"Close\\\":636.45},{\\\"Date\\\":\\\"01/24/2025\\\",\\\"Close\\\":647.49},{\\\"Date\\\":\\\"01/27/2025\\\",\\\"Close\\\":659.88},{\\\"Date\\\":\\\"01/28/2025\\\",\\\"Close\\\":674.33},{\\\"Date\\\":\\\"01/29/2025\\\",\\\"Close\\\":676.49},{\\\"Date\\\":\\\"01/30/2025\\\",\\\"Close\\\":687},{\\\"Date\\\":\\\"01/31/2025\\\",\\\"Close\\\":689.18},{\\\"Date\\\":\\\"02/03/2025\\\",\\\"Close\\\":697.46},{\\\"Date\\\":\\\"02/04/2025\\\",\\\"Close\\\":704.19},{\\\"Date\\\":\\\"02/05/2025\\\",\\\"Close\\\":704.87},{\\\"Date\\\":\\\"02/06/2025\\\",\\\"Close\\\":711.99},{\\\"Date\\\":\\\"02/07/2025\\\",\\\"Close\\\":714.52},{\\\"Date\\\":\\\"02/10/2025\\\",\\\"Close\\\":717.4},{\\\"Date\\\":\\\"02/11/2025\\\",\\\"Close\\\":719.8},{\\\"Date\\\":\\\"02/12/2025\\\",\\\"Close\\\":725.38},{\\\"Date\\\":\\\"02/13/2025\\\",\\\"Close\\\":728.56},{\\\"Date\\\":\\\"02/14/2025\\\",\\\"Close\\\":736.67},{\\\"Date\\\":\\\"02/18/2025\\\",\\\"Close\\\":716.37},{\\\"Date\\\":\\\"02/19/2025\\\",\\\"Close\\\":703.77},{\\\"Date\\\":\\\"02/20/2025\\\",\\\"Close\\\":694.84},{\\\"Date\\\":\\\"02/21/2025\\\",\\\"Close\\\":683.55},{\\\"Date\\\":\\\"02/24/2025\\\",\\\"Close\\\":668.13},{\\\"Date\\\":\\\"02/25/2025\\\",\\\"Close\\\":657.5},{\\\"Date\\\":\\\"02/26/2025\\\",\\\"Close\\\":673.7},{\\\"Date\\\":\\\"02/27/2025\\\",\\\"Close\\\":658.24},{\\\"Date\\\":\\\"02/28/2025\\\",\\\"Close\\\":668.2},{\\\"Date\\\":\\\"03/03/2025\\\",\\\"Close\\\":655.05},{\\\"Date\\\":\\\"03/04/2025\\\",\\\"Close\\\":640},{\\\"Date\\\":\\\"03/05/2025\\\",\\\"Close\\\":656.47},{\\\"Date\\\":\\\"03/06/2025\\\",\\\"Close\\\":627.93},{\\\"Date\\\":\\\"03/07/2025\\\",\\\"Close\\\":625.66},{\\\"Date\\\":\\\"03/10/2025\\\",\\\"Close\\\":597.99},{\\\"Date\\\":\\\"03/11/2025\\\",\\\"Close\\\":605.71},{\\\"Date\\\":\\\"03/12/2025\\\",\\\"Close\\\":619.56},{\\\"Date\\\":\\\"03/13/2025\\\",\\\"Close\\\":590.64},{\\\"Date\\\":\\\"03/14/2025\\\",\\\"Close\\\":607.6},{\\\"Date\\\":\\\"03/17/2025\\\",\\\"Close\\\":604.9},{\\\"Date\\\":\\\"03/18/2025\\\",\\\"Close\\\":582.36},{\\\"Date\\\":\\\"03/19/2025\\\",\\\"Close\\\":584.06},{\\\"Date\\\":\\\"03/20/2025\\\",\\\"Close\\\":586},{\\\"Date\\\":\\\"03/21/2025\\\",\\\"Close\\\":596.25},{\\\"Date\\\":\\\"03/24/2025\\\",\\\"Close\\\":618.85},{\\\"Date\\\":\\\"03/25/2025\\\",\\\"Close\\\":626.31},{\\\"Date\\\":\\\"03/26/2025\\\",\\\"Close\\\":610.98},{\\\"Date\\\":\\\"03/27/2025\\\",\\\"Close\\\":602.58}]\");\n\n\nvar $743faa608ca6cdc6$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $dfd4cfb9f136c5d5$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $367a9fa440f39890$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $871d6b2b8d225f7e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $5f1f3a9c556aa86c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $34265eeb9b67274c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $34265eeb9b67274c$var$main = typeof Object.defineProperty === 'function' ? Object.defineProperty : null;\n// EXPORTS //\n$34265eeb9b67274c$exports = $34265eeb9b67274c$var$main;\n\n\n// MAIN //\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/ function $5f1f3a9c556aa86c$var$hasDefinePropertySupport() {\n    // Test basic support...\n    try {\n        $34265eeb9b67274c$exports({}, 'x', {});\n        return true;\n    } catch (err) {\n        return false;\n    }\n}\n// EXPORTS //\n$5f1f3a9c556aa86c$exports = $5f1f3a9c556aa86c$var$hasDefinePropertySupport;\n\n\nvar $3a4d9697938188fb$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/ var $3a4d9697938188fb$var$defineProperty = Object.defineProperty;\n// EXPORTS //\n$3a4d9697938188fb$exports = $3a4d9697938188fb$var$defineProperty;\n\n\nvar $f427547c116eb305$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ /* eslint-disable no-underscore-dangle, no-proto */ 'use strict';\nvar $5a5504e40381a222$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $28293cfd4981871f$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $3d9a9645ba0fdb10$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $05d86a4cde6adc6e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $689fa02b419ce23e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $b3c7ff053c5e7eea$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/ function $b3c7ff053c5e7eea$var$isNumber(value) {\n    return typeof value === 'number'; // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.\n}\n// EXPORTS //\n$b3c7ff053c5e7eea$exports = $b3c7ff053c5e7eea$var$isNumber;\n\n\nvar $f4470c11f3d71260$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// FUNCTIONS //\n/**\n* Tests if a string starts with a minus sign (`-`).\n*\n* @private\n* @param {string} str - input string\n* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)\n*/ function $f4470c11f3d71260$var$startsWithMinus(str) {\n    return str[0] === '-';\n}\n/**\n* Returns a string of `n` zeros.\n*\n* @private\n* @param {number} n - number of zeros\n* @returns {string} string of zeros\n*/ function $f4470c11f3d71260$var$zeros(n) {\n    var out = '';\n    var i;\n    for(i = 0; i < n; i++)out += '0';\n    return out;\n}\n// MAIN //\n/**\n* Pads a token with zeros to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/ function $f4470c11f3d71260$var$zeroPad(str, width, right) {\n    var negative = false;\n    var pad = width - str.length;\n    if (pad < 0) return str;\n    if ($f4470c11f3d71260$var$startsWithMinus(str)) {\n        negative = true;\n        str = str.substr(1);\n    }\n    str = right ? str + $f4470c11f3d71260$var$zeros(pad) : $f4470c11f3d71260$var$zeros(pad) + str;\n    if (negative) str = '-' + str;\n    return str;\n}\n// EXPORTS //\n$f4470c11f3d71260$exports = $f4470c11f3d71260$var$zeroPad;\n\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar $689fa02b419ce23e$var$lowercase = String.prototype.toLowerCase;\nvar $689fa02b419ce23e$var$uppercase = String.prototype.toUpperCase;\n// MAIN //\n/**\n* Formats a token object argument as an integer.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid integer\n* @returns {string} formatted token argument\n*/ function $689fa02b419ce23e$var$formatInteger(token) {\n    var base;\n    var out;\n    var i;\n    switch(token.specifier){\n        case 'b':\n            // Case: %b (binary)\n            base = 2;\n            break;\n        case 'o':\n            // Case: %o (octal)\n            base = 8;\n            break;\n        case 'x':\n        case 'X':\n            // Case: %x, %X (hexadecimal)\n            base = 16;\n            break;\n        case 'd':\n        case 'i':\n        case 'u':\n        default:\n            // Case: %d, %i, %u (decimal)\n            base = 10;\n            break;\n    }\n    out = token.arg;\n    i = parseInt(out, 10);\n    if (!isFinite(i)) {\n        if (!$b3c7ff053c5e7eea$exports(out)) throw new Error('invalid integer. Value: ' + out);\n        i = 0;\n    }\n    if (i < 0 && (token.specifier === 'u' || base !== 10)) i = 0xffffffff + i + 1;\n    if (i < 0) {\n        out = (-i).toString(base);\n        if (token.precision) out = $f4470c11f3d71260$exports(out, token.precision, token.padRight);\n        out = '-' + out;\n    } else {\n        out = i.toString(base);\n        if (!i && !token.precision) out = '';\n        else if (token.precision) out = $f4470c11f3d71260$exports(out, token.precision, token.padRight);\n        if (token.sign) out = token.sign + out;\n    }\n    if (base === 16) {\n        if (token.alternate) out = '0x' + out;\n        out = token.specifier === $689fa02b419ce23e$var$uppercase.call(token.specifier) ? $689fa02b419ce23e$var$uppercase.call(out) : $689fa02b419ce23e$var$lowercase.call(out);\n    }\n    if (base === 8) {\n        if (token.alternate && out.charAt(0) !== '0') out = '0' + out;\n    }\n    return out;\n}\n// EXPORTS //\n$689fa02b419ce23e$exports = $689fa02b419ce23e$var$formatInteger;\n\n\nvar $45e4fcd22e06377c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/ function $45e4fcd22e06377c$var$isString(value) {\n    return typeof value === 'string'; // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n// EXPORTS //\n$45e4fcd22e06377c$exports = $45e4fcd22e06377c$var$isString;\n\n\nvar $c98673acb52107cb$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar $c98673acb52107cb$var$abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math\nvar $c98673acb52107cb$var$lowercase = String.prototype.toLowerCase;\nvar $c98673acb52107cb$var$uppercase = String.prototype.toUpperCase;\nvar $c98673acb52107cb$var$replace = String.prototype.replace;\n// VARIABLES //\nvar $c98673acb52107cb$var$RE_EXP_POS_DIGITS = /e\\+(\\d)$/;\nvar $c98673acb52107cb$var$RE_EXP_NEG_DIGITS = /e-(\\d)$/;\nvar $c98673acb52107cb$var$RE_ONLY_DIGITS = /^(\\d+)$/;\nvar $c98673acb52107cb$var$RE_DIGITS_BEFORE_EXP = /^(\\d+)e/;\nvar $c98673acb52107cb$var$RE_TRAILING_PERIOD_ZERO = /\\.0$/;\nvar $c98673acb52107cb$var$RE_PERIOD_ZERO_EXP = /\\.0*e/;\nvar $c98673acb52107cb$var$RE_ZERO_BEFORE_EXP = /(\\..*[^0])0*e/;\n// MAIN //\n/**\n* Formats a token object argument as a floating-point number.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid floating-point number\n* @returns {string} formatted token argument\n*/ function $c98673acb52107cb$var$formatDouble(token) {\n    var digits;\n    var out;\n    var f = parseFloat(token.arg);\n    if (!isFinite(f)) {\n        if (!$b3c7ff053c5e7eea$exports(token.arg)) throw new Error('invalid floating-point number. Value: ' + out);\n        // Case: NaN, Infinity, or -Infinity\n        f = token.arg;\n    }\n    switch(token.specifier){\n        case 'e':\n        case 'E':\n            out = f.toExponential(token.precision);\n            break;\n        case 'f':\n        case 'F':\n            out = f.toFixed(token.precision);\n            break;\n        case 'g':\n        case 'G':\n            if ($c98673acb52107cb$var$abs(f) < 0.0001) {\n                digits = token.precision;\n                if (digits > 0) digits -= 1;\n                out = f.toExponential(digits);\n            } else out = f.toPrecision(token.precision);\n            if (!token.alternate) {\n                out = $c98673acb52107cb$var$replace.call(out, $c98673acb52107cb$var$RE_ZERO_BEFORE_EXP, '$1e');\n                out = $c98673acb52107cb$var$replace.call(out, $c98673acb52107cb$var$RE_PERIOD_ZERO_EXP, 'e');\n                out = $c98673acb52107cb$var$replace.call(out, $c98673acb52107cb$var$RE_TRAILING_PERIOD_ZERO, '');\n            }\n            break;\n        default:\n            throw new Error('invalid double notation. Value: ' + token.specifier);\n    }\n    out = $c98673acb52107cb$var$replace.call(out, $c98673acb52107cb$var$RE_EXP_POS_DIGITS, 'e+0$1');\n    out = $c98673acb52107cb$var$replace.call(out, $c98673acb52107cb$var$RE_EXP_NEG_DIGITS, 'e-0$1');\n    if (token.alternate) {\n        out = $c98673acb52107cb$var$replace.call(out, $c98673acb52107cb$var$RE_ONLY_DIGITS, '$1.');\n        out = $c98673acb52107cb$var$replace.call(out, $c98673acb52107cb$var$RE_DIGITS_BEFORE_EXP, '$1.e');\n    }\n    if (f >= 0 && token.sign) out = token.sign + out;\n    out = token.specifier === $c98673acb52107cb$var$uppercase.call(token.specifier) ? $c98673acb52107cb$var$uppercase.call(out) : $c98673acb52107cb$var$lowercase.call(out);\n    return out;\n}\n// EXPORTS //\n$c98673acb52107cb$exports = $c98673acb52107cb$var$formatDouble;\n\n\nvar $38a0c40dd8438ef4$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// FUNCTIONS //\n/**\n* Returns `n` spaces.\n*\n* @private\n* @param {number} n - number of spaces\n* @returns {string} string of spaces\n*/ function $38a0c40dd8438ef4$var$spaces(n) {\n    var out = '';\n    var i;\n    for(i = 0; i < n; i++)out += ' ';\n    return out;\n}\n// MAIN //\n/**\n* Pads a token with spaces to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/ function $38a0c40dd8438ef4$var$spacePad(str, width, right) {\n    var pad = width - str.length;\n    if (pad < 0) return str;\n    str = right ? str + $38a0c40dd8438ef4$var$spaces(pad) : $38a0c40dd8438ef4$var$spaces(pad) + str;\n    return str;\n}\n// EXPORTS //\n$38a0c40dd8438ef4$exports = $38a0c40dd8438ef4$var$spacePad;\n\n\n\n// VARIABLES //\nvar $05d86a4cde6adc6e$var$fromCharCode = String.fromCharCode;\nvar $05d86a4cde6adc6e$var$isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.\n// FUNCTIONS //\n/**\n* Returns a boolean indicating whether a value is `NaN`.\n*\n* @private\n* @param {*} value - input value\n* @returns {boolean} boolean indicating whether a value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 4 );\n* // returns false\n*/ function $05d86a4cde6adc6e$var$isnan(value) {\n    return value !== value;\n}\n/**\n* Initializes token object with properties of supplied format identifier object or default values if not present.\n*\n* @private\n* @param {Object} token - format identifier object\n* @returns {Object} token object\n*/ function $05d86a4cde6adc6e$var$initialize(token) {\n    var out = {};\n    out.specifier = token.specifier;\n    out.precision = token.precision === void 0 ? 1 : token.precision;\n    out.width = token.width;\n    out.flags = token.flags || '';\n    out.mapping = token.mapping;\n    return out;\n}\n// MAIN //\n/**\n* Generates string from a token array by interpolating values.\n*\n* @param {Array} tokens - string parts and format identifier objects\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be an array\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var tokens = [ 'beep ', { 'specifier': 's' } ];\n* var out = formatInterpolate( tokens, 'boop' );\n* // returns 'beep boop'\n*/ function $05d86a4cde6adc6e$var$formatInterpolate(tokens) {\n    var hasPeriod;\n    var flags;\n    var token;\n    var flag;\n    var num;\n    var out;\n    var pos;\n    var i;\n    var j;\n    if (!$05d86a4cde6adc6e$var$isArray(tokens)) throw new TypeError('invalid argument. First argument must be an array. Value: `' + tokens + '`.');\n    out = '';\n    pos = 1;\n    for(i = 0; i < tokens.length; i++){\n        token = tokens[i];\n        if ($45e4fcd22e06377c$exports(token)) out += token;\n        else {\n            hasPeriod = token.precision !== void 0;\n            token = $05d86a4cde6adc6e$var$initialize(token);\n            if (!token.specifier) throw new TypeError('invalid argument. Token is missing `specifier` property. Index: `' + i + '`. Value: `' + token + '`.');\n            if (token.mapping) pos = token.mapping;\n            flags = token.flags;\n            for(j = 0; j < flags.length; j++){\n                flag = flags.charAt(j);\n                switch(flag){\n                    case ' ':\n                        token.sign = ' ';\n                        break;\n                    case '+':\n                        token.sign = '+';\n                        break;\n                    case '-':\n                        token.padRight = true;\n                        token.padZeros = false;\n                        break;\n                    case '0':\n                        token.padZeros = flags.indexOf('-') < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.\n                        break;\n                    case '#':\n                        token.alternate = true;\n                        break;\n                    default:\n                        throw new Error('invalid flag: ' + flag);\n                }\n            }\n            if (token.width === '*') {\n                token.width = parseInt(arguments[pos], 10);\n                pos += 1;\n                if ($05d86a4cde6adc6e$var$isnan(token.width)) throw new TypeError('the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.');\n                if (token.width < 0) {\n                    token.padRight = true;\n                    token.width = -token.width;\n                }\n            }\n            if (hasPeriod) {\n                if (token.precision === '*') {\n                    token.precision = parseInt(arguments[pos], 10);\n                    pos += 1;\n                    if ($05d86a4cde6adc6e$var$isnan(token.precision)) throw new TypeError('the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.');\n                    if (token.precision < 0) {\n                        token.precision = 1;\n                        hasPeriod = false;\n                    }\n                }\n            }\n            token.arg = arguments[pos];\n            switch(token.specifier){\n                case 'b':\n                case 'o':\n                case 'x':\n                case 'X':\n                case 'd':\n                case 'i':\n                case 'u':\n                    // Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)\n                    if (hasPeriod) token.padZeros = false;\n                    token.arg = $689fa02b419ce23e$exports(token);\n                    break;\n                case 's':\n                    // Case: %s (string)\n                    token.maxWidth = hasPeriod ? token.precision : -1;\n                    token.arg = String(token.arg);\n                    break;\n                case 'c':\n                    // Case: %c (character)\n                    if (!$05d86a4cde6adc6e$var$isnan(token.arg)) {\n                        num = parseInt(token.arg, 10);\n                        if (num < 0 || num > 127) throw new Error('invalid character code. Value: ' + token.arg);\n                        token.arg = $05d86a4cde6adc6e$var$isnan(num) ? String(token.arg) : $05d86a4cde6adc6e$var$fromCharCode(num); // eslint-disable-line max-len\n                    }\n                    break;\n                case 'e':\n                case 'E':\n                case 'f':\n                case 'F':\n                case 'g':\n                case 'G':\n                    // Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)\n                    if (!hasPeriod) token.precision = 6;\n                    token.arg = $c98673acb52107cb$exports(token);\n                    break;\n                default:\n                    throw new Error('invalid specifier: ' + token.specifier);\n            }\n            // Fit argument into field width...\n            if (token.maxWidth >= 0 && token.arg.length > token.maxWidth) token.arg = token.arg.substring(0, token.maxWidth);\n            if (token.padZeros) token.arg = $f4470c11f3d71260$exports(token.arg, token.width || token.precision, token.padRight); // eslint-disable-line max-len\n            else if (token.width) token.arg = $38a0c40dd8438ef4$exports(token.arg, token.width, token.padRight);\n            out += token.arg || '';\n            pos += 1;\n        }\n    }\n    return out;\n}\n// EXPORTS //\n$05d86a4cde6adc6e$exports = $05d86a4cde6adc6e$var$formatInterpolate;\n\n\n// EXPORTS //\n$3d9a9645ba0fdb10$exports = $05d86a4cde6adc6e$exports;\n\n\nvar $9bb73ed29242928e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $ef875852df60c9a8$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// VARIABLES //\nvar $ef875852df60c9a8$var$RE = /%(?:([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%A-Za-z])/g;\n// FUNCTIONS //\n/**\n* Parses a delimiter.\n*\n* @private\n* @param {Array} match - regular expression match\n* @returns {Object} delimiter token object\n*/ function $ef875852df60c9a8$var$parse(match) {\n    var token = {\n        'mapping': match[1] ? parseInt(match[1], 10) : void 0,\n        'flags': match[2],\n        'width': match[3],\n        'precision': match[5],\n        'specifier': match[6]\n    };\n    if (match[4] === '.' && match[5] === void 0) token.precision = '1';\n    return token;\n}\n// MAIN //\n/**\n* Tokenizes a string into an array of string parts and format identifier objects.\n*\n* @param {string} str - input string\n* @returns {Array} tokens\n*\n* @example\n* var tokens = formatTokenize( 'Hello %s!' );\n* // returns [ 'Hello ', {...}, '!' ]\n*/ function $ef875852df60c9a8$var$formatTokenize(str) {\n    var content;\n    var tokens;\n    var match;\n    var prev;\n    tokens = [];\n    prev = 0;\n    match = $ef875852df60c9a8$var$RE.exec(str);\n    while(match){\n        content = str.slice(prev, $ef875852df60c9a8$var$RE.lastIndex - match[0].length);\n        if (content.length) tokens.push(content);\n        tokens.push($ef875852df60c9a8$var$parse(match));\n        prev = $ef875852df60c9a8$var$RE.lastIndex;\n        match = $ef875852df60c9a8$var$RE.exec(str);\n    }\n    content = str.slice(prev);\n    if (content.length) tokens.push(content);\n    return tokens;\n}\n// EXPORTS //\n$ef875852df60c9a8$exports = $ef875852df60c9a8$var$formatTokenize;\n\n\n// EXPORTS //\n$9bb73ed29242928e$exports = $ef875852df60c9a8$exports;\n\n\nvar $30e31cf71a00c461$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/ function $30e31cf71a00c461$var$isString(value) {\n    return typeof value === 'string'; // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n// EXPORTS //\n$30e31cf71a00c461$exports = $30e31cf71a00c461$var$isString;\n\n\n// MAIN //\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/ function $28293cfd4981871f$var$format(str) {\n    var args;\n    var i;\n    if (!$30e31cf71a00c461$exports(str)) throw new TypeError($28293cfd4981871f$var$format('invalid argument. First argument must be a string. Value: `%s`.', str));\n    args = [\n        $9bb73ed29242928e$exports(str)\n    ];\n    for(i = 1; i < arguments.length; i++)args.push(arguments[i]);\n    return $3d9a9645ba0fdb10$exports.apply(null, args);\n}\n// EXPORTS //\n$28293cfd4981871f$exports = $28293cfd4981871f$var$format;\n\n\n// EXPORTS //\n$5a5504e40381a222$exports = $28293cfd4981871f$exports;\n\n\n// VARIABLES //\nvar $f427547c116eb305$var$objectProtoype = Object.prototype;\nvar $f427547c116eb305$var$toStr = $f427547c116eb305$var$objectProtoype.toString;\nvar $f427547c116eb305$var$defineGetter = $f427547c116eb305$var$objectProtoype.__defineGetter__;\nvar $f427547c116eb305$var$defineSetter = $f427547c116eb305$var$objectProtoype.__defineSetter__;\nvar $f427547c116eb305$var$lookupGetter = $f427547c116eb305$var$objectProtoype.__lookupGetter__;\nvar $f427547c116eb305$var$lookupSetter = $f427547c116eb305$var$objectProtoype.__lookupSetter__;\n// MAIN //\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/ function $f427547c116eb305$var$defineProperty(obj, prop, descriptor) {\n    var prototype;\n    var hasValue;\n    var hasGet;\n    var hasSet;\n    if (typeof obj !== 'object' || obj === null || $f427547c116eb305$var$toStr.call(obj) === '[object Array]') throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an object. Value: `%s`.', obj));\n    if (typeof descriptor !== 'object' || descriptor === null || $f427547c116eb305$var$toStr.call(descriptor) === '[object Array]') throw new TypeError($5a5504e40381a222$exports('invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor));\n    hasValue = 'value' in descriptor;\n    if (hasValue) {\n        if ($f427547c116eb305$var$lookupGetter.call(obj, prop) || $f427547c116eb305$var$lookupSetter.call(obj, prop)) {\n            // Override `__proto__` to avoid touching inherited accessors:\n            prototype = obj.__proto__;\n            obj.__proto__ = $f427547c116eb305$var$objectProtoype;\n            // Delete property as existing getters/setters prevent assigning value to specified property:\n            delete obj[prop];\n            obj[prop] = descriptor.value;\n            // Restore original prototype:\n            obj.__proto__ = prototype;\n        } else obj[prop] = descriptor.value;\n    }\n    hasGet = 'get' in descriptor;\n    hasSet = 'set' in descriptor;\n    if (hasValue && (hasGet || hasSet)) throw new Error('invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.');\n    if (hasGet && $f427547c116eb305$var$defineGetter) $f427547c116eb305$var$defineGetter.call(obj, prop, descriptor.get);\n    if (hasSet && $f427547c116eb305$var$defineSetter) $f427547c116eb305$var$defineSetter.call(obj, prop, descriptor.set);\n    return obj;\n}\n// EXPORTS //\n$f427547c116eb305$exports = $f427547c116eb305$var$defineProperty;\n\n\n// MAIN //\nvar $871d6b2b8d225f7e$var$defineProperty;\nif ($5f1f3a9c556aa86c$exports()) $871d6b2b8d225f7e$var$defineProperty = $3a4d9697938188fb$exports;\nelse $871d6b2b8d225f7e$var$defineProperty = $f427547c116eb305$exports;\n// EXPORTS //\n$871d6b2b8d225f7e$exports = $871d6b2b8d225f7e$var$defineProperty;\n\n\n// MAIN //\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/ function $367a9fa440f39890$var$setNonEnumerableReadOnly(obj, prop, value) {\n    $871d6b2b8d225f7e$exports(obj, prop, {\n        'configurable': false,\n        'enumerable': false,\n        'writable': false,\n        'value': value\n    });\n}\n// EXPORTS //\n$367a9fa440f39890$exports = $367a9fa440f39890$var$setNonEnumerableReadOnly;\n\n\n// EXPORTS //\n$dfd4cfb9f136c5d5$exports = $367a9fa440f39890$exports;\n\n\nvar $ff49fffc1b65c6db$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $a971c8057dda0ad4$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $a4444f7456e1c73a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $356661c5ff0b22b5$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Defines a non-enumerable read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/ function $356661c5ff0b22b5$var$setNonEnumerableReadOnlyAccessor(obj, prop, getter) {\n    $871d6b2b8d225f7e$exports(obj, prop, {\n        'configurable': false,\n        'enumerable': false,\n        'get': getter\n    });\n}\n// EXPORTS //\n$356661c5ff0b22b5$exports = $356661c5ff0b22b5$var$setNonEnumerableReadOnlyAccessor;\n\n\n// EXPORTS //\n$a4444f7456e1c73a$exports = $356661c5ff0b22b5$exports;\n\n\nvar $c1b2e538264ff4b7$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $560b11f3efa37bfa$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Defines a non-enumerable read-write accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - get accessor\n* @param {Function} setter - set accessor\n*\n* @example\n* function getter() {\n*     return name + ' foo';\n* }\n*\n* function setter( v ) {\n*     name = v;\n* }\n*\n* var name = 'bar';\n* var obj = {};\n*\n* setNonEnumerableReadWriteAccessor( obj, 'foo', getter, setter );\n*\n* var v = obj.foo;\n* // returns 'bar foo'\n*\n* obj.foo = 'beep';\n*\n* v = obj.foo;\n* // returns 'beep foo'\n*/ function $560b11f3efa37bfa$var$setNonEnumerableReadWriteAccessor(obj, prop, getter, setter) {\n    $871d6b2b8d225f7e$exports(obj, prop, {\n        'configurable': false,\n        'enumerable': false,\n        'get': getter,\n        'set': setter\n    });\n}\n// EXPORTS //\n$560b11f3efa37bfa$exports = $560b11f3efa37bfa$var$setNonEnumerableReadWriteAccessor;\n\n\n// EXPORTS //\n$c1b2e538264ff4b7$exports = $560b11f3efa37bfa$exports;\n\n\nvar $c8f9ba5bc2a81d34$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $950a7c8c5f57ecc9$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $01b2bacec2990d67$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $c3bcb4f12f2774cd$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $5ebc6df234db68eb$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $0ae4ca15aedf4f34$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $c1bcb1474c583c23$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $ad8748866c202ed6$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $7df1b287ab18f0d2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $08ec1251ae26e6d3$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $f2eeec8d342f58b8$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\n/**\n* Tests for native `Symbol` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol` support\n*\n* @example\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/ function $f2eeec8d342f58b8$var$hasSymbolSupport() {\n    return typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n}\n// EXPORTS //\n$f2eeec8d342f58b8$exports = $f2eeec8d342f58b8$var$hasSymbolSupport;\n\n\n// EXPORTS //\n$08ec1251ae26e6d3$exports = $f2eeec8d342f58b8$exports;\n\n\n// VARIABLES //\nvar $7df1b287ab18f0d2$var$FLG = $08ec1251ae26e6d3$exports();\n// MAIN //\n/**\n* Tests for native `toStringTag` support.\n*\n* @returns {boolean} boolean indicating if an environment has `toStringTag` support\n*\n* @example\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/ function $7df1b287ab18f0d2$var$hasToStringTagSupport() {\n    return $7df1b287ab18f0d2$var$FLG && typeof Symbol.toStringTag === 'symbol';\n}\n// EXPORTS //\n$7df1b287ab18f0d2$exports = $7df1b287ab18f0d2$var$hasToStringTagSupport;\n\n\n// EXPORTS //\n$ad8748866c202ed6$exports = $7df1b287ab18f0d2$exports;\n\n\nvar $dc4809be987a55e0$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $fd1000537da8a65f$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $fd1000537da8a65f$var$toStr = Object.prototype.toString;\n// EXPORTS //\n$fd1000537da8a65f$exports = $fd1000537da8a65f$var$toStr;\n\n\n// MAIN //\n/**\n* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/ function $dc4809be987a55e0$var$nativeClass(v) {\n    return $fd1000537da8a65f$exports.call(v);\n}\n// EXPORTS //\n$dc4809be987a55e0$exports = $dc4809be987a55e0$var$nativeClass;\n\n\nvar $92cccdbac4d45668$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $5a7912bad9882251$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $4c076cdf0a0e33ea$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// FUNCTIONS //\nvar $4c076cdf0a0e33ea$var$has = Object.prototype.hasOwnProperty;\n// MAIN //\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/ function $4c076cdf0a0e33ea$var$hasOwnProp(value, property) {\n    if (value === void 0 || value === null) return false;\n    return $4c076cdf0a0e33ea$var$has.call(value, property);\n}\n// EXPORTS //\n$4c076cdf0a0e33ea$exports = $4c076cdf0a0e33ea$var$hasOwnProp;\n\n\n// EXPORTS //\n$5a7912bad9882251$exports = $4c076cdf0a0e33ea$exports;\n\n\nvar $16a2c08be5ca434f$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $3d8926390533d7c3$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $d2db8d7cf419b4e4$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $d2db8d7cf419b4e4$var$Sym = typeof Symbol === 'function' ? Symbol : void 0; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$d2db8d7cf419b4e4$exports = $d2db8d7cf419b4e4$var$Sym;\n\n\n// EXPORTS //\n$3d8926390533d7c3$exports = $d2db8d7cf419b4e4$exports;\n\n\n// MAIN //\nvar $16a2c08be5ca434f$var$toStrTag = typeof $3d8926390533d7c3$exports === 'function' ? $3d8926390533d7c3$exports.toStringTag : '';\n// EXPORTS //\n$16a2c08be5ca434f$exports = $16a2c08be5ca434f$var$toStrTag;\n\n\n\n// MAIN //\n/**\n* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/ function $92cccdbac4d45668$var$nativeClass(v) {\n    var isOwn;\n    var tag;\n    var out;\n    if (v === null || v === void 0) return $fd1000537da8a65f$exports.call(v);\n    tag = v[$16a2c08be5ca434f$exports];\n    isOwn = $5a7912bad9882251$exports(v, $16a2c08be5ca434f$exports);\n    // Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.\n    try {\n        v[$16a2c08be5ca434f$exports] = void 0;\n    } catch (err) {\n        return $fd1000537da8a65f$exports.call(v);\n    }\n    out = $fd1000537da8a65f$exports.call(v);\n    if (isOwn) v[$16a2c08be5ca434f$exports] = tag;\n    else delete v[$16a2c08be5ca434f$exports];\n    return out;\n}\n// EXPORTS //\n$92cccdbac4d45668$exports = $92cccdbac4d45668$var$nativeClass;\n\n\n// MAIN //\nvar $c1bcb1474c583c23$var$main;\nif ($ad8748866c202ed6$exports()) $c1bcb1474c583c23$var$main = $92cccdbac4d45668$exports;\nelse $c1bcb1474c583c23$var$main = $dc4809be987a55e0$exports;\n// EXPORTS //\n$c1bcb1474c583c23$exports = $c1bcb1474c583c23$var$main;\n\n\n// VARIABLES //\nvar $0ae4ca15aedf4f34$var$f;\n// FUNCTIONS //\n/**\n* Tests if a value is an array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an array\n*\n* @example\n* var bool = isArray( [] );\n* // returns true\n*\n* @example\n* var bool = isArray( {} );\n* // returns false\n*/ function $0ae4ca15aedf4f34$var$isArray(value) {\n    return $c1bcb1474c583c23$exports(value) === '[object Array]';\n}\n// MAIN //\nif (Array.isArray) $0ae4ca15aedf4f34$var$f = Array.isArray;\nelse $0ae4ca15aedf4f34$var$f = $0ae4ca15aedf4f34$var$isArray;\n// EXPORTS //\n$0ae4ca15aedf4f34$exports = $0ae4ca15aedf4f34$var$f;\n\n\n// EXPORTS //\n$5ebc6df234db68eb$exports = $0ae4ca15aedf4f34$exports;\n\n\n// MAIN //\n/**\n* Tests if a value is an object; e.g., `{}`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an object\n*\n* @example\n* var bool = isObject( {} );\n* // returns true\n*\n* @example\n* var bool = isObject( null );\n* // returns false\n*/ function $c3bcb4f12f2774cd$var$isObject(value) {\n    return typeof value === 'object' && value !== null && !$5ebc6df234db68eb$exports(value);\n}\n// EXPORTS //\n$c3bcb4f12f2774cd$exports = $c3bcb4f12f2774cd$var$isObject;\n\n\n// EXPORTS //\n$01b2bacec2990d67$exports = $c3bcb4f12f2774cd$exports;\n\n\nvar $39cac8b951c1ded2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $a5a4352d57441052$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $11635579c618f7ef$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $ebe10159ccc0b72f$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $17eeb353939b4c1a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $17eeb353939b4c1a$var$RE = /./;\n// EXPORTS //\n$17eeb353939b4c1a$exports = $17eeb353939b4c1a$var$RE;\n\n\nvar $033a4865697952e4$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $09f4eb6cac48617c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $195eb9bd8e34a246$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $8dc2db74c26e7332$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $d94b237ec9b79e34$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Tests if a value is a boolean primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean primitive\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n*\n* var bool = isBoolean( new Boolean( true ) );\n* // returns false\n*/ function $d94b237ec9b79e34$var$isBoolean(value) {\n    return typeof value === 'boolean';\n}\n// EXPORTS //\n$d94b237ec9b79e34$exports = $d94b237ec9b79e34$var$isBoolean;\n\n\nvar $fe892bf154c0b855$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\nvar $7ddb66cb80aa5581$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $2015413f2ffb2cf4$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\n/**\n* Returns a boolean.\n*\n* @name Boolean\n* @constructor\n* @type {Function}\n* @param {*} value - input value\n* @returns {(boolean|Boolean)} boolean\n*\n* @example\n* var b = Boolean( null );\n* // returns false\n*\n* b = Boolean( [] );\n* // returns true\n*\n* b = Boolean( {} );\n* // returns true\n*\n* @example\n* var b = new Boolean( false );\n* // returns <Boolean>\n*/ var $2015413f2ffb2cf4$var$Bool = Boolean; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$2015413f2ffb2cf4$exports = $2015413f2ffb2cf4$var$Bool;\n\n\n// EXPORTS //\n$7ddb66cb80aa5581$exports = $2015413f2ffb2cf4$exports;\n\n\nvar $f616776244fc2bfb$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $8a0899da35fd4d07$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// eslint-disable-next-line stdlib/no-redeclare\nvar $8a0899da35fd4d07$var$toString = Boolean.prototype.toString; // non-generic\n// EXPORTS //\n$8a0899da35fd4d07$exports = $8a0899da35fd4d07$var$toString;\n\n\n// MAIN //\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/ function $f616776244fc2bfb$var$test(value) {\n    try {\n        $8a0899da35fd4d07$exports.call(value);\n        return true;\n    } catch (err) {\n        return false;\n    }\n}\n// EXPORTS //\n$f616776244fc2bfb$exports = $f616776244fc2bfb$var$test;\n\n\n// VARIABLES //\nvar $fe892bf154c0b855$var$FLG = $ad8748866c202ed6$exports();\n// MAIN //\n/**\n* Tests if a value is a boolean object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean object\n*\n* @example\n* var bool = isBoolean( true );\n* // returns false\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n*\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/ function $fe892bf154c0b855$var$isBoolean(value) {\n    if (typeof value === 'object') {\n        if (value instanceof $7ddb66cb80aa5581$exports) return true;\n        if ($fe892bf154c0b855$var$FLG) return $f616776244fc2bfb$exports(value);\n        return $c1bcb1474c583c23$exports(value) === '[object Boolean]';\n    }\n    return false;\n}\n// EXPORTS //\n$fe892bf154c0b855$exports = $fe892bf154c0b855$var$isBoolean;\n\n\n// MAIN //\n/**\n* Tests if a value is a boolean.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a boolean\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n*\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n*\n* var bool = isBoolean( new Boolean( true ) );\n* // returns true\n*/ function $8dc2db74c26e7332$var$isBoolean(value) {\n    return $d94b237ec9b79e34$exports(value) || $fe892bf154c0b855$exports(value);\n}\n// EXPORTS //\n$8dc2db74c26e7332$exports = $8dc2db74c26e7332$var$isBoolean;\n\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($8dc2db74c26e7332$exports, 'isPrimitive', $d94b237ec9b79e34$exports);\n$dfd4cfb9f136c5d5$exports($8dc2db74c26e7332$exports, 'isObject', $fe892bf154c0b855$exports);\n// EXPORTS //\n$195eb9bd8e34a246$exports = $8dc2db74c26e7332$exports;\n\n\nvar $09f4eb6cac48617c$require$isBoolean = $195eb9bd8e34a246$exports.isPrimitive;\n\nvar $f6e0ff9dbf4fa51f$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\n/**\n* Returns the global object using code generation.\n*\n* @private\n* @returns {Object} global object\n*/ function $f6e0ff9dbf4fa51f$var$getGlobal() {\n    return new Function('return this;')(); // eslint-disable-line no-new-func, stdlib/require-globals\n}\n// EXPORTS //\n$f6e0ff9dbf4fa51f$exports = $f6e0ff9dbf4fa51f$var$getGlobal;\n\n\nvar $ea44ca70bbcaacc7$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $ea44ca70bbcaacc7$var$obj = typeof self === 'object' ? self : null;\n// EXPORTS //\n$ea44ca70bbcaacc7$exports = $ea44ca70bbcaacc7$var$obj;\n\n\nvar $3c0f6f0b3fed2d4c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $3c0f6f0b3fed2d4c$var$obj = typeof window === 'object' ? window : null;\n// EXPORTS //\n$3c0f6f0b3fed2d4c$exports = $3c0f6f0b3fed2d4c$var$obj;\n\n\nvar $ef185afabe14564c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $ef185afabe14564c$var$obj = typeof globalThis === 'object' ? globalThis : null; // eslint-disable-line no-undef\n// EXPORTS //\n$ef185afabe14564c$exports = $ef185afabe14564c$var$obj;\n\n\n// MAIN //\n/**\n* Returns the global object.\n*\n* ## Notes\n*\n* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.\n*\n* @private\n* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object\n* @throws {TypeError} must provide a boolean\n* @throws {Error} unable to resolve global object\n* @returns {Object} global object\n*\n* @example\n* var g = getGlobal();\n* // returns {...}\n*/ function $09f4eb6cac48617c$var$getGlobal(codegen) {\n    if (arguments.length) {\n        if (!$09f4eb6cac48617c$require$isBoolean(codegen)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a boolean. Value: `%s`.', codegen));\n        if (codegen) return $f6e0ff9dbf4fa51f$exports();\n    // Fall through...\n    }\n    // Case: 2020 revision of ECMAScript standard\n    if ($ef185afabe14564c$exports) return $ef185afabe14564c$exports;\n    // Case: browsers and web workers\n    if ($ea44ca70bbcaacc7$exports) return $ea44ca70bbcaacc7$exports;\n    // Case: browsers\n    if ($3c0f6f0b3fed2d4c$exports) return $3c0f6f0b3fed2d4c$exports;\n    // Case: unknown\n    throw new Error('unexpected error. Unable to resolve global object.');\n}\n// EXPORTS //\n$09f4eb6cac48617c$exports = $09f4eb6cac48617c$var$getGlobal;\n\n\n// MAIN //\nvar $033a4865697952e4$var$root = $09f4eb6cac48617c$exports();\nvar $033a4865697952e4$var$nodeList = $033a4865697952e4$var$root.document && $033a4865697952e4$var$root.document.childNodes;\n// EXPORTS //\n$033a4865697952e4$exports = $033a4865697952e4$var$nodeList;\n\n\nvar $0cdd6c3124ce7e79$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $0cdd6c3124ce7e79$var$typedarray = Int8Array; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$0cdd6c3124ce7e79$exports = $0cdd6c3124ce7e79$var$typedarray;\n\n\n// MAIN //\n/**\n* Checks whether a polyfill is needed when using the `typeof` operator.\n*\n* @private\n* @returns {boolean} boolean indicating whether a polyfill is needed\n*/ function $ebe10159ccc0b72f$var$check() {\n    if (// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):\n    typeof $17eeb353939b4c1a$exports === 'function' || // Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):\n    typeof $0cdd6c3124ce7e79$exports === 'object' || // PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):\n    typeof $033a4865697952e4$exports === 'function') return true;\n    return false;\n}\n// EXPORTS //\n$ebe10159ccc0b72f$exports = $ebe10159ccc0b72f$var$check;\n\n\nvar $57f3ee8f60e14393$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $094cb60ccc73a674$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $f25f78d4bbb4d32e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $06003f96259ab889$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $5fc5214d71835fc8$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\n/**\n* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/ function $5fc5214d71835fc8$var$reFunctionName() {\n    return /^\\s*function\\s*([^(]*)/i;\n}\n// EXPORTS //\n$5fc5214d71835fc8$exports = $5fc5214d71835fc8$var$reFunctionName;\n\n\nvar $b8a0fb4d6749c567$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* Regular expression: `/^\\s*function\\s*([^(]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `\\s*`\n*     -   Match zero or more spaces after the word `function`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `/i`\n*     -   ignore case\n*\n* @constant\n* @type {RegExp}\n* @default /^\\s*function\\s*([^(]*)/i\n*/ var $b8a0fb4d6749c567$var$RE_FUNCTION_NAME = $5fc5214d71835fc8$exports();\n// EXPORTS //\n$b8a0fb4d6749c567$exports = $b8a0fb4d6749c567$var$RE_FUNCTION_NAME;\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($5fc5214d71835fc8$exports, 'REGEXP', $b8a0fb4d6749c567$exports);\n// EXPORTS //\n$06003f96259ab889$exports = $5fc5214d71835fc8$exports;\n\n\nvar $f25f78d4bbb4d32e$require$RE = $06003f96259ab889$exports.REGEXP;\nvar $195b16e791542a7f$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $daf9b9ffe40280b0$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $5f29508570e4c532$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $90f61aea219ebb3a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $ca405724d466029f$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n// MAIN //\n/**\n* Returns a function which tests if every element in an array passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/ function $ca405724d466029f$var$arrayfcn(predicate) {\n    if (typeof predicate !== 'function') throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a function. Value: `%s`.', predicate));\n    return every;\n    /**\n\t* Tests if every element in an array passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array for which all elements pass a test condition\n\t*/ function every(value) {\n        var len;\n        var i;\n        if (!$5ebc6df234db68eb$exports(value)) return false;\n        len = value.length;\n        if (len === 0) return false;\n        for(i = 0; i < len; i++){\n            if (predicate(value[i]) === false) return false;\n        }\n        return true;\n    }\n}\n// EXPORTS //\n$ca405724d466029f$exports = $ca405724d466029f$var$arrayfcn;\n\n\n// EXPORTS //\n$90f61aea219ebb3a$exports = $ca405724d466029f$exports;\n\n\nvar $38760b92cd8ccb7c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Tests if a value is object-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is object-like\n*\n* @example\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( [] );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( null );\n* // returns false\n*/ function $38760b92cd8ccb7c$var$isObjectLike(value) {\n    return value !== null && typeof value === 'object';\n}\n// EXPORTS //\n$38760b92cd8ccb7c$exports = $38760b92cd8ccb7c$var$isObjectLike;\n\n\n// VARIABLES //\nvar $5f29508570e4c532$var$isObjectLikeArray = $90f61aea219ebb3a$exports($38760b92cd8ccb7c$exports);\n// MAIN //\n$dfd4cfb9f136c5d5$exports($38760b92cd8ccb7c$exports, 'isObjectLikeArray', $5f29508570e4c532$var$isObjectLikeArray);\n// EXPORTS //\n$5f29508570e4c532$exports = $38760b92cd8ccb7c$exports;\n\n\n// MAIN //\n/**\n* Tests if a value is a Buffer instance.\n*\n* @param {*} value - value to validate\n* @returns {boolean} boolean indicating if a value is a Buffer instance\n*\n* @example\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( new Buffer( [1,2,3,4] ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( {} );\n* // returns false\n*\n* @example\n* var v = isBuffer( [] );\n* // returns false\n*/ function $daf9b9ffe40280b0$var$isBuffer(value) {\n    return $5f29508570e4c532$exports(value) && // eslint-disable-next-line no-underscore-dangle\n    (value._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)\n    value.constructor && // WARNING: `typeof` is not a foolproof check, as certain envs consider RegExp and NodeList instances to be functions\n    typeof value.constructor.isBuffer === 'function' && value.constructor.isBuffer(value));\n}\n// EXPORTS //\n$daf9b9ffe40280b0$exports = $daf9b9ffe40280b0$var$isBuffer;\n\n\n// EXPORTS //\n$195b16e791542a7f$exports = $daf9b9ffe40280b0$exports;\n\n\n// MAIN //\n/**\n* Determines the name of a value's constructor.\n*\n* @param {*} v - input value\n* @returns {string} name of a value's constructor\n*\n* @example\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* @example\n* var v = constructorName( 5 );\n* // returns 'Number'\n*\n* @example\n* var v = constructorName( null );\n* // returns 'Null'\n*\n* @example\n* var v = constructorName( undefined );\n* // returns 'Undefined'\n*\n* @example\n* var v = constructorName( function noop() {} );\n* // returns 'Function'\n*/ function $f25f78d4bbb4d32e$var$constructorName(v) {\n    var match;\n    var name;\n    var ctor;\n    name = $c1bcb1474c583c23$exports(v).slice(8, -1);\n    if ((name === 'Object' || name === 'Error') && v.constructor) {\n        ctor = v.constructor;\n        if (typeof ctor.name === 'string') return ctor.name;\n        match = $f25f78d4bbb4d32e$require$RE.exec(ctor.toString());\n        if (match) return match[1];\n    }\n    if ($195b16e791542a7f$exports(v)) return 'Buffer';\n    return name;\n}\n// EXPORTS //\n$f25f78d4bbb4d32e$exports = $f25f78d4bbb4d32e$var$constructorName;\n\n\n// EXPORTS //\n$094cb60ccc73a674$exports = $f25f78d4bbb4d32e$exports;\n\n\n// NOTES //\n/*\n* Built-in `typeof` operator behavior:\n*\n* ```text\n* typeof null => 'object'\n* typeof undefined => 'undefined'\n* typeof 'a' => 'string'\n* typeof 5 => 'number'\n* typeof NaN => 'number'\n* typeof true => 'boolean'\n* typeof false => 'boolean'\n* typeof {} => 'object'\n* typeof [] => 'object'\n* typeof function foo(){} => 'function'\n* typeof function* foo(){} => 'object'\n* typeof Symbol() => 'symbol'\n* ```\n*\n*/ // MAIN //\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/ function $57f3ee8f60e14393$var$typeOf(v) {\n    var type;\n    // Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):\n    if (v === null) return 'null';\n    type = typeof v;\n    // If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.\n    if (type === 'object') return $094cb60ccc73a674$exports(v).toLowerCase();\n    return type;\n}\n// EXPORTS //\n$57f3ee8f60e14393$exports = $57f3ee8f60e14393$var$typeOf;\n\n\nvar $43eb246741dfe14e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/ function $43eb246741dfe14e$var$typeOf(v) {\n    return $094cb60ccc73a674$exports(v).toLowerCase();\n}\n// EXPORTS //\n$43eb246741dfe14e$exports = $43eb246741dfe14e$var$typeOf;\n\n\n// MAIN //\nvar $11635579c618f7ef$var$main = $ebe10159ccc0b72f$exports() ? $43eb246741dfe14e$exports : $57f3ee8f60e14393$exports;\n// EXPORTS //\n$11635579c618f7ef$exports = $11635579c618f7ef$var$main;\n\n\n// MAIN //\n/**\n* Tests if a value is a function.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a function\n*\n* @example\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/ function $a5a4352d57441052$var$isFunction(value) {\n    // Note: cannot use `typeof` directly, as various browser engines incorrectly return `'function'` when operating on non-function objects, such as regular expressions and NodeLists.\n    return $11635579c618f7ef$exports(value) === 'function';\n}\n// EXPORTS //\n$a5a4352d57441052$exports = $a5a4352d57441052$var$isFunction;\n\n\n// EXPORTS //\n$39cac8b951c1ded2$exports = $a5a4352d57441052$exports;\n\n\nvar $d5bb7e750799db60$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $e12825453b39e256$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $c135f3c349acd1cd$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $b6e0e6b2379122d5$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\n/**\n* Returns an object.\n*\n* @name Object\n* @constructor\n* @type {Function}\n* @param {*} value - input value\n* @returns {Object} object\n*\n* @example\n* var o = new Object( null );\n* // returns {}\n*\n* @example\n* var o = new Object( 5.0 );\n* // returns <Number>\n*\n* @example\n* var o = new Object( 'beep' );\n* // returns <String>\n*\n* @example\n* var o1 = {};\n*\n* var o2 = new Object( o1 );\n* // returns {}\n*\n* var bool = ( o1 === o2 );\n* // returns true\n*/ var $b6e0e6b2379122d5$var$Obj = Object; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$b6e0e6b2379122d5$exports = $b6e0e6b2379122d5$var$Obj;\n\n\n// EXPORTS //\n$c135f3c349acd1cd$exports = $b6e0e6b2379122d5$exports;\n\n\nvar $953bdf9b1275f1e2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $e662dc7930a785d2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $e662dc7930a785d2$var$getProto = Object.getPrototypeOf;\n// EXPORTS //\n$e662dc7930a785d2$exports = $e662dc7930a785d2$var$getProto;\n\n\nvar $9d5e86c952aed971$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $0c6c90c0e2fe7c27$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Returns the value of the `__proto__` property.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {*} value of `__proto__` property\n*/ function $0c6c90c0e2fe7c27$var$getProto(obj) {\n    // eslint-disable-next-line no-proto\n    return obj.__proto__;\n}\n// EXPORTS //\n$0c6c90c0e2fe7c27$exports = $0c6c90c0e2fe7c27$var$getProto;\n\n\n// MAIN //\n/**\n* Returns the prototype of a provided object.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {(Object|null)} prototype\n*/ function $9d5e86c952aed971$var$getPrototypeOf(obj) {\n    var proto = $0c6c90c0e2fe7c27$exports(obj);\n    if (proto || proto === null) return proto;\n    if ($c1bcb1474c583c23$exports(obj.constructor) === '[object Function]') // May break if the constructor has been tampered with...\n    return obj.constructor.prototype;\n    if (obj instanceof Object) return Object.prototype;\n    // Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.\n    return null;\n}\n// EXPORTS //\n$9d5e86c952aed971$exports = $9d5e86c952aed971$var$getPrototypeOf;\n\n\n// MAIN //\nvar $953bdf9b1275f1e2$var$getProto;\nif ($39cac8b951c1ded2$exports(Object.getPrototypeOf)) $953bdf9b1275f1e2$var$getProto = $e662dc7930a785d2$exports;\nelse $953bdf9b1275f1e2$var$getProto = $9d5e86c952aed971$exports;\n// EXPORTS //\n$953bdf9b1275f1e2$exports = $953bdf9b1275f1e2$var$getProto;\n\n\n// MAIN //\n/**\n* Returns the prototype of a provided object.\n*\n* @param {*} value - input value\n* @returns {(Object|null)} prototype\n*\n* @example\n* var proto = getPrototypeOf( {} );\n* // returns {}\n*/ function $e12825453b39e256$var$getPrototypeOf(value) {\n    if (value === null || value === void 0) return null;\n    // In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:\n    value = $c135f3c349acd1cd$exports(value);\n    return $953bdf9b1275f1e2$exports(value);\n}\n// EXPORTS //\n$e12825453b39e256$exports = $e12825453b39e256$var$getPrototypeOf;\n\n\n// EXPORTS //\n$d5bb7e750799db60$exports = $e12825453b39e256$exports;\n\n\n\n\n// VARIABLES //\nvar $950a7c8c5f57ecc9$var$objectPrototype = Object.prototype;\n// FUNCTIONS //\n/**\n* Tests that an object only has own properties.\n*\n* @private\n* @param {Object} obj - value to test\n* @returns {boolean} boolean indicating if an object only has own properties\n*/ function $950a7c8c5f57ecc9$var$ownProps(obj) {\n    var key;\n    // NOTE: possibility of perf boost if key enumeration order is known (see http://stackoverflow.com/questions/18531624/isplainobject-thing).\n    for(key in obj){\n        if (!$5a7912bad9882251$exports(obj, key)) return false;\n    }\n    return true;\n}\n// MAIN //\n/**\n* Tests if a value is a plain object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a plain object\n*\n* @example\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* @example\n* var bool = isPlainObject( null );\n* // returns false\n*/ function $950a7c8c5f57ecc9$var$isPlainObject(value) {\n    var proto;\n    // Screen for obvious non-objects...\n    if (!$01b2bacec2990d67$exports(value)) return false;\n    // Objects with no prototype (e.g., `Object.create( null )`) are plain...\n    proto = $d5bb7e750799db60$exports(value);\n    if (!proto) return true;\n    // Objects having a prototype are plain if and only if they are constructed with a global `Object` function and the prototype points to the prototype of a plain object...\n    return(// Cannot have own `constructor` property:\n    !$5a7912bad9882251$exports(value, 'constructor') && // Prototype `constructor` property must be a function (see also https://bugs.jquery.com/ticket/9897 and http://stackoverflow.com/questions/18531624/isplainobject-thing):\n    $5a7912bad9882251$exports(proto, 'constructor') && $39cac8b951c1ded2$exports(proto.constructor) && $c1bcb1474c583c23$exports(proto.constructor) === '[object Function]' && // Test for object-specific method:\n    $5a7912bad9882251$exports(proto, 'isPrototypeOf') && $39cac8b951c1ded2$exports(proto.isPrototypeOf) && // Test if the prototype matches the global `Object` prototype (same realm):\n    (proto === $950a7c8c5f57ecc9$var$objectPrototype || // Test that all properties are own properties (cross-realm; *most* likely a plain object):\n    $950a7c8c5f57ecc9$var$ownProps(value)));\n}\n// EXPORTS //\n$950a7c8c5f57ecc9$exports = $950a7c8c5f57ecc9$var$isPlainObject;\n\n\n// EXPORTS //\n$c8f9ba5bc2a81d34$exports = $950a7c8c5f57ecc9$exports;\n\n\n\n\nvar $427c86626b845cf7$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $e3dd5756224fd923$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Creates a function which always returns the same value.\n*\n* @param {*} [value] - value to always return\n* @returns {Function} constant function\n*\n* @example\n* var fcn = wrap( 3.14 );\n*\n* var v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*/ function $e3dd5756224fd923$var$wrap(value) {\n    return constantFunction;\n    /**\n\t* Constant function.\n\t*\n\t* @private\n\t* @returns {*} constant value\n\t*/ function constantFunction() {\n        return value;\n    }\n}\n// EXPORTS //\n$e3dd5756224fd923$exports = $e3dd5756224fd923$var$wrap;\n\n\n// EXPORTS //\n$427c86626b845cf7$exports = $e3dd5756224fd923$exports;\n\n\nvar $b50f262dd23e3975$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $28edb5103c7fd514$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* No operation.\n*\n* @example\n* noop();\n* // ...does nothing.\n*/ function $28edb5103c7fd514$var$noop() {\n// Empty function...\n}\n// EXPORTS //\n$28edb5103c7fd514$exports = $28edb5103c7fd514$var$noop;\n\n\n// EXPORTS //\n$b50f262dd23e3975$exports = $28edb5103c7fd514$exports;\n\n\nvar $665931b83d6270df$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $39a357d3dce33fab$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $82132ebca57c92e4$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n\n\n\n\nvar $82132ebca57c92e4$require$isBoolean = $195eb9bd8e34a246$exports.isPrimitive;\n\nvar $a3146ba2bb56d8f0$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $757c75aef8d2941a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// VARIABLES //\nvar $757c75aef8d2941a$var$hasUint32Array = typeof Uint32Array === 'function'; // eslint-disable-line stdlib/require-globals\n// MAIN //\n/**\n* Tests if a value is a Uint32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint32Array\n*\n* @example\n* var bool = isUint32Array( new Uint32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint32Array( [] );\n* // returns false\n*/ function $757c75aef8d2941a$var$isUint32Array(value) {\n    return $757c75aef8d2941a$var$hasUint32Array && value instanceof Uint32Array || // eslint-disable-line stdlib/require-globals\n    $c1bcb1474c583c23$exports(value) === '[object Uint32Array]';\n}\n// EXPORTS //\n$757c75aef8d2941a$exports = $757c75aef8d2941a$var$isUint32Array;\n\n\n// EXPORTS //\n$a3146ba2bb56d8f0$exports = $757c75aef8d2941a$exports;\n\n\nvar $05d4f0dfaf19f1a1$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $54d02d2e82bde01d$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $3b344fcd5166f627$exports = {};\n/* eslint-disable max-lines, max-len */ /**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code and copyright notice are from the [source implementation][mt19937]. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without\n* modification, are permitted provided that the following conditions\n* are met:\n*\n*   1. Redistributions of source code must retain the above copyright\n*      notice, this list of conditions and the following disclaimer.\n*\n*   2. Redistributions in binary form must reproduce the above copyright\n*      notice, this list of conditions and the following disclaimer in the\n*      documentation and/or other materials provided with the distribution.\n*\n*   3. The names of its contributors may not be used to endorse or promote\n*      products derived from this software without specific prior written\n*      permission.\n*\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n* \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n* A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n* EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n* PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n* PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n* LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* ```\n*\n* [mt19937]: http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/CODES/mt19937ar.c\n*/ 'use strict';\n\n\n\n\n\nvar $b52cee4fbc0f7b72$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $aa8cbfd7c504b7cd$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $009faf297be97aa1$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $4ffaf4cf532b0a66$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $19a18984922c6b5f$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $e925a6402668f716$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// TODO: implementation (?)\n/**\n* Rounds a double-precision floating-point number toward negative infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = floor( -4.2 );\n* // returns -5.0\n*\n* @example\n* var v = floor( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = floor( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = floor( NaN );\n* // returns NaN\n*/ var $e925a6402668f716$var$floor = Math.floor; // eslint-disable-line stdlib/no-builtin-math\n// EXPORTS //\n$e925a6402668f716$exports = $e925a6402668f716$var$floor;\n\n\n// EXPORTS //\n$19a18984922c6b5f$exports = $e925a6402668f716$exports;\n\n\n// MAIN //\n/**\n* Tests if a finite double-precision floating-point number is an integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an integer\n*\n* @example\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( 3.14 );\n* // returns false\n*/ function $4ffaf4cf532b0a66$var$isInteger(x) {\n    return $19a18984922c6b5f$exports(x) === x;\n}\n// EXPORTS //\n$4ffaf4cf532b0a66$exports = $4ffaf4cf532b0a66$var$isInteger;\n\n\n// EXPORTS //\n$009faf297be97aa1$exports = $4ffaf4cf532b0a66$exports;\n\n\nvar $4c027b7f20d29e65$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Maximum length of a typed array.\n*\n* @module @stdlib/constants/array/max-typed-array-length\n*\n* @example\n* var MAX_TYPED_ARRAY_LENGTH = require( '@stdlib/constants/array/max-typed-array-length' );\n* // returns 9007199254740991\n*/ // MAIN //\n/**\n* Maximum length of a typed array.\n*\n* ```tex\n* 2^{53} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 9007199254740991\n*/ var $4c027b7f20d29e65$var$MAX_TYPED_ARRAY_LENGTH = 9007199254740991;\n// EXPORTS //\n$4c027b7f20d29e65$exports = $4c027b7f20d29e65$var$MAX_TYPED_ARRAY_LENGTH;\n\n\n// MAIN //\n/**\n* Tests if a value is a collection.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a collection\n*\n* @example\n* var bool = isCollection( [] );\n* // returns true\n*\n* @example\n* var bool = isCollection( {} );\n* // returns false\n*/ function $aa8cbfd7c504b7cd$var$isCollection(value) {\n    return typeof value === 'object' && value !== null && typeof value.length === 'number' && $009faf297be97aa1$exports(value.length) && value.length >= 0 && value.length <= $4c027b7f20d29e65$exports;\n}\n// EXPORTS //\n$aa8cbfd7c504b7cd$exports = $aa8cbfd7c504b7cd$var$isCollection;\n\n\n// EXPORTS //\n$b52cee4fbc0f7b72$exports = $aa8cbfd7c504b7cd$exports;\n\n\n\n\nvar $3b344fcd5166f627$require$isBoolean = $195eb9bd8e34a246$exports.isPrimitive;\nvar $edfad03af173d8ff$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $cc0fc3db9896380b$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $94bce60474e71568$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $0654f579c472fc00$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $299d7a0d100776ba$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $f642eccedad232fa$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $019754bf0ce823af$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $40e61c93e97a3e07$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $363bfa0d881059e6$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/ function $363bfa0d881059e6$var$isNumber(value) {\n    return typeof value === 'number';\n}\n// EXPORTS //\n$363bfa0d881059e6$exports = $363bfa0d881059e6$var$isNumber;\n\n\nvar $700f4493d928a3cd$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\nvar $a64a1429c4ede784$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $12d842204dbcf5a2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// EXPORTS //\n$12d842204dbcf5a2$exports = Number; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n$a64a1429c4ede784$exports = $12d842204dbcf5a2$exports;\n\n\nvar $d7c508a0812e96c7$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $103323befb61daf7$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n// eslint-disable-next-line stdlib/no-redeclare\nvar $103323befb61daf7$var$toString = $a64a1429c4ede784$exports.prototype.toString; // non-generic\n// EXPORTS //\n$103323befb61daf7$exports = $103323befb61daf7$var$toString;\n\n\n// MAIN //\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/ function $d7c508a0812e96c7$var$test(value) {\n    try {\n        $103323befb61daf7$exports.call(value);\n        return true;\n    } catch (err) {\n        return false;\n    }\n}\n// EXPORTS //\n$d7c508a0812e96c7$exports = $d7c508a0812e96c7$var$test;\n\n\n// VARIABLES //\nvar $700f4493d928a3cd$var$FLG = $ad8748866c202ed6$exports();\n// MAIN //\n/**\n* Tests if a value is a number object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/ function $700f4493d928a3cd$var$isNumber(value) {\n    if (typeof value === 'object') {\n        if (value instanceof $a64a1429c4ede784$exports) return true;\n        if ($700f4493d928a3cd$var$FLG) return $d7c508a0812e96c7$exports(value);\n        return $c1bcb1474c583c23$exports(value) === '[object Number]';\n    }\n    return false;\n}\n// EXPORTS //\n$700f4493d928a3cd$exports = $700f4493d928a3cd$var$isNumber;\n\n\n// MAIN //\n/**\n* Tests if a value is a number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a number\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( null );\n* // returns false\n*/ function $40e61c93e97a3e07$var$isNumber(value) {\n    return $363bfa0d881059e6$exports(value) || $700f4493d928a3cd$exports(value);\n}\n// EXPORTS //\n$40e61c93e97a3e07$exports = $40e61c93e97a3e07$var$isNumber;\n\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($40e61c93e97a3e07$exports, 'isPrimitive', $363bfa0d881059e6$exports);\n$dfd4cfb9f136c5d5$exports($40e61c93e97a3e07$exports, 'isObject', $700f4493d928a3cd$exports);\n// EXPORTS //\n$019754bf0ce823af$exports = $40e61c93e97a3e07$exports;\n\n\nvar $f642eccedad232fa$require$isNumber = $019754bf0ce823af$exports.isPrimitive;\nvar $10bf7053ead4e5e5$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $163c16c3843b9db0$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Double-precision floating-point positive infinity.\n*\n* @module @stdlib/constants/float64/pinf\n* @type {number}\n*\n* @example\n* var FLOAT64_PINF = require( '@stdlib/constants/float64/pinf' );\n* // returns Infinity\n*/ // MAIN //\n/**\n* Double-precision floating-point positive infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point positive infinity has the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.POSITIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/ var $163c16c3843b9db0$var$FLOAT64_PINF = Number.POSITIVE_INFINITY; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$163c16c3843b9db0$exports = $163c16c3843b9db0$var$FLOAT64_PINF;\n\n\nvar $8caa281ecaa80049$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Double-precision floating-point negative infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point negative infinity has the bit sequence\n*\n* ```binarystring\n* 1 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.NEGATIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/ var $8caa281ecaa80049$var$FLOAT64_NINF = $a64a1429c4ede784$exports.NEGATIVE_INFINITY;\n// EXPORTS //\n$8caa281ecaa80049$exports = $8caa281ecaa80049$var$FLOAT64_NINF;\n\n\n\n// MAIN //\n/**\n* Tests if a number primitive is an integer value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a number primitive is an integer value\n*/ function $10bf7053ead4e5e5$var$isInteger(value) {\n    return value < $163c16c3843b9db0$exports && value > $8caa281ecaa80049$exports && $009faf297be97aa1$exports(value);\n}\n// EXPORTS //\n$10bf7053ead4e5e5$exports = $10bf7053ead4e5e5$var$isInteger;\n\n\n// MAIN //\n/**\n* Tests if a value is a number primitive having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having an integer value\n*\n* @example\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*/ function $f642eccedad232fa$var$isInteger(value) {\n    return $f642eccedad232fa$require$isNumber(value) && $10bf7053ead4e5e5$exports(value);\n}\n// EXPORTS //\n$f642eccedad232fa$exports = $f642eccedad232fa$var$isInteger;\n\n\nvar $e221483ccbb20fc0$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $e221483ccbb20fc0$require$isNumber = $019754bf0ce823af$exports.isObject;\n\n// MAIN //\n/**\n* Tests if a value is a number object having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having an integer value\n*\n* @example\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/ function $e221483ccbb20fc0$var$isInteger(value) {\n    return $e221483ccbb20fc0$require$isNumber(value) && $10bf7053ead4e5e5$exports(value.valueOf());\n}\n// EXPORTS //\n$e221483ccbb20fc0$exports = $e221483ccbb20fc0$var$isInteger;\n\n\n// MAIN //\n/**\n* Tests if a value is an integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an integer\n*\n* @example\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isInteger( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isInteger( null );\n* // returns false\n*/ function $299d7a0d100776ba$var$isInteger(value) {\n    return $f642eccedad232fa$exports(value) || $e221483ccbb20fc0$exports(value);\n}\n// EXPORTS //\n$299d7a0d100776ba$exports = $299d7a0d100776ba$var$isInteger;\n\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($299d7a0d100776ba$exports, 'isPrimitive', $f642eccedad232fa$exports);\n$dfd4cfb9f136c5d5$exports($299d7a0d100776ba$exports, 'isObject', $e221483ccbb20fc0$exports);\n// EXPORTS //\n$0654f579c472fc00$exports = $299d7a0d100776ba$exports;\n\n\nvar $94bce60474e71568$require$isInteger = $0654f579c472fc00$exports.isPrimitive;\n// MAIN //\n/**\n* Tests if a value is a number primitive having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*/ function $94bce60474e71568$var$isPositiveInteger(value) {\n    return $94bce60474e71568$require$isInteger(value) && value > 0.0;\n}\n// EXPORTS //\n$94bce60474e71568$exports = $94bce60474e71568$var$isPositiveInteger;\n\n\nvar $213520d942e0740c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $213520d942e0740c$require$isInteger = $0654f579c472fc00$exports.isObject;\n// MAIN //\n/**\n* Tests if a value is a number object having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/ function $213520d942e0740c$var$isPositiveInteger(value) {\n    return $213520d942e0740c$require$isInteger(value) && value.valueOf() > 0.0;\n}\n// EXPORTS //\n$213520d942e0740c$exports = $213520d942e0740c$var$isPositiveInteger;\n\n\n// MAIN //\n/**\n* Tests if a value is a positive integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive integer\n*\n* @example\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( null );\n* // returns false\n*/ function $cc0fc3db9896380b$var$isPositiveInteger(value) {\n    return $94bce60474e71568$exports(value) || $213520d942e0740c$exports(value);\n}\n// EXPORTS //\n$cc0fc3db9896380b$exports = $cc0fc3db9896380b$var$isPositiveInteger;\n\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($cc0fc3db9896380b$exports, 'isPrimitive', $94bce60474e71568$exports);\n$dfd4cfb9f136c5d5$exports($cc0fc3db9896380b$exports, 'isObject', $213520d942e0740c$exports);\n// EXPORTS //\n$edfad03af173d8ff$exports = $cc0fc3db9896380b$exports;\n\n\nvar $3b344fcd5166f627$require$isPositiveInteger = $edfad03af173d8ff$exports.isPrimitive;\nvar $1c9ea135448a31a9$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Maximum safe double-precision floating-point integer.\n*\n* @module @stdlib/constants/float64/max-safe-integer\n* @type {number}\n*\n* @example\n* var FLOAT64_MAX_SAFE_INTEGER = require( '@stdlib/constants/float64/max-safe-integer' );\n* // returns 9007199254740991\n*/ // MAIN //\n/**\n* Maximum safe double-precision floating-point integer.\n*\n* ## Notes\n*\n* The integer has the value\n*\n* ```tex\n* 2^{53} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 9007199254740991\n* @see [Safe Integers]{@link http://www.2ality.com/2013/10/safe-integers.html}\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/ var $1c9ea135448a31a9$var$FLOAT64_MAX_SAFE_INTEGER = 9007199254740991;\n// EXPORTS //\n$1c9ea135448a31a9$exports = $1c9ea135448a31a9$var$FLOAT64_MAX_SAFE_INTEGER;\n\n\nvar $a5069161f8233194$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Maximum unsigned 32-bit integer.\n*\n* @module @stdlib/constants/uint32/max\n* @type {uinteger32}\n*\n* @example\n* var UINT32_MAX = require( '@stdlib/constants/uint32/max' );\n* // returns 4294967295\n*/ // MAIN //\n/**\n* Maximum unsigned 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/ var $a5069161f8233194$var$UINT32_MAX = 4294967295;\n// EXPORTS //\n$a5069161f8233194$exports = $a5069161f8233194$var$UINT32_MAX;\n\n\nvar $2ffeb30574781963$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $054bc35b6f5fb593$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $c7b696d148cebce3$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\nvar $95312e39384f229f$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $95312e39384f229f$var$main = typeof Uint32Array === 'function' ? Uint32Array : null; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$95312e39384f229f$exports = $95312e39384f229f$var$main;\n\n\n// MAIN //\n/**\n* Tests for native `Uint32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint32Array` support\n*\n* @example\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/ function $c7b696d148cebce3$var$hasUint32ArraySupport() {\n    var bool;\n    var arr;\n    if (typeof $95312e39384f229f$exports !== 'function') return false;\n    // Test basic support...\n    try {\n        arr = [\n            1,\n            3.14,\n            -3.14,\n            $a5069161f8233194$exports + 1,\n            $a5069161f8233194$exports + 2\n        ];\n        arr = new $95312e39384f229f$exports(arr);\n        bool = $a3146ba2bb56d8f0$exports(arr) && arr[0] === 1 && arr[1] === 3 && // truncation\n        arr[2] === $a5069161f8233194$exports - 2 && // truncation and wrap around\n        arr[3] === 0 && // wrap around\n        arr[4] === 1 // wrap around\n        ;\n    } catch (err) {\n        bool = false;\n    }\n    return bool;\n}\n// EXPORTS //\n$c7b696d148cebce3$exports = $c7b696d148cebce3$var$hasUint32ArraySupport;\n\n\n// EXPORTS //\n$054bc35b6f5fb593$exports = $c7b696d148cebce3$exports;\n\n\nvar $27067c3f2efc61d0$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $27067c3f2efc61d0$var$ctor = typeof Uint32Array === 'function' ? Uint32Array : void 0; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$27067c3f2efc61d0$exports = $27067c3f2efc61d0$var$ctor;\n\n\nvar $8c6ec15ca4e0a049$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// TODO: write polyfill\n// MAIN //\n/**\n* Typed array which represents an array of 32-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/ function $8c6ec15ca4e0a049$var$polyfill() {\n    throw new Error('not implemented');\n}\n// EXPORTS //\n$8c6ec15ca4e0a049$exports = $8c6ec15ca4e0a049$var$polyfill;\n\n\n// MAIN //\nvar $2ffeb30574781963$var$ctor;\nif ($054bc35b6f5fb593$exports()) $2ffeb30574781963$var$ctor = $27067c3f2efc61d0$exports;\nelse $2ffeb30574781963$var$ctor = $8c6ec15ca4e0a049$exports;\n// EXPORTS //\n$2ffeb30574781963$exports = $2ffeb30574781963$var$ctor;\n\n\nvar $c60bed3c04bd9984$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $98c1ea186f9ec02b$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $e7144be1dfdeeb7d$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $05ec2bd337789885$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Tests if a double-precision floating-point numeric value is positive zero.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is positive zero\n*\n* @example\n* var bool = isPositiveZero( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveZero( -0.0 );\n* // returns false\n*/ function $05ec2bd337789885$var$isPositiveZero(x) {\n    return x === 0.0 && 1.0 / x === $163c16c3843b9db0$exports;\n}\n// EXPORTS //\n$05ec2bd337789885$exports = $05ec2bd337789885$var$isPositiveZero;\n\n\n// EXPORTS //\n$e7144be1dfdeeb7d$exports = $05ec2bd337789885$exports;\n\n\nvar $806500fab48b0961$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $4d115d22c79c26cf$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\n/**\n* Tests if a double-precision floating-point numeric value is `NaN`.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 7.0 );\n* // returns false\n*/ function $4d115d22c79c26cf$var$isnan(x) {\n    return x !== x;\n}\n// EXPORTS //\n$4d115d22c79c26cf$exports = $4d115d22c79c26cf$var$isnan;\n\n\n// EXPORTS //\n$806500fab48b0961$exports = $4d115d22c79c26cf$exports;\n\n\n\n// MAIN //\n/**\n* Returns the maximum value.\n*\n* @param {number} x - first number\n* @param {number} y - second number\n* @returns {number} maximum value\n*\n* @example\n* var v = max( 3.14, 4.2 );\n* // returns 4.2\n*\n* @example\n* var v = max( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = max( +0.0, -0.0 );\n* // returns +0.0\n*/ function $98c1ea186f9ec02b$var$max(x, y) {\n    if ($806500fab48b0961$exports(x) || $806500fab48b0961$exports(y)) return NaN;\n    if (x === $163c16c3843b9db0$exports || y === $163c16c3843b9db0$exports) return $163c16c3843b9db0$exports;\n    if (x === y && x === 0.0) {\n        if ($e7144be1dfdeeb7d$exports(x)) return x;\n        return y;\n    }\n    if (x > y) return x;\n    return y;\n}\n// EXPORTS //\n$98c1ea186f9ec02b$exports = $98c1ea186f9ec02b$var$max;\n\n\n// EXPORTS //\n$c60bed3c04bd9984$exports = $98c1ea186f9ec02b$exports;\n\n\nvar $66f874ac6fdc70e7$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $ec70f4308d970ec8$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// VARIABLES //\n// Define a mask for the least significant 16 bits (low word): 65535 => 0x0000ffff => 00000000000000001111111111111111\nvar $ec70f4308d970ec8$var$LOW_WORD_MASK = 65535; // asm type annotation\n// MAIN //\n/**\n* Performs C-like multiplication of two unsigned 32-bit integers.\n*\n* ## Method\n*\n* -   To emulate C-like multiplication without the aid of 64-bit integers, we recognize that a 32-bit integer can be split into two 16-bit words\n*\n*     ```tex\n*     a = w_h*2^{16} + w_l\n*     ```\n*\n*     where \\\\( w_h \\\\) is the most significant 16 bits and \\\\( w_l \\\\) is the least significant 16 bits. For example, consider the maximum unsigned 32-bit integer \\\\( 2^{32}-1 \\\\)\n*\n*     ```binarystring\n*     11111111111111111111111111111111\n*     ```\n*\n*     The 16-bit high word is then\n*\n*     ```binarystring\n*     1111111111111111\n*     ```\n*\n*     and the 16-bit low word\n*\n*     ```binarystring\n*     1111111111111111\n*     ```\n*\n*     If we cast the high word to 32-bit precision and multiply by \\\\( 2^{16} \\\\) (equivalent to a 16-bit left shift), then the bit sequence is\n*\n*     ```binarystring\n*     11111111111111110000000000000000\n*     ```\n*\n*     Similarly, upon casting the low word to 32-bit precision, the bit sequence is\n*\n*     ```binarystring\n*     00000000000000001111111111111111\n*     ```\n*\n*     From the rules of binary addition, we recognize that adding the two 32-bit values for the high and low words will return our original value \\\\( 2^{32}-1 \\\\).\n*\n* -   Accordingly, the multiplication of two 32-bit integers can be expressed\n*\n*     ```tex\n*     \\begin{align*}\n*     a \\cdot b &= ( a_h \\cdot 2^{16} + a_l) \\cdot ( b_h \\cdot 2^{16} + b_l) \\\\\n*           &= a_l \\cdot b_l + a_h \\cdot b_l \\cdot 2^{16} + a_l \\cdot b_h \\cdot 2^{16} + (a_h \\cdot b_h) \\cdot 2^{32} \\\\\n*           &= a_l \\cdot b_l + (a_h \\cdot b_l + a_l \\cdot b_h) \\cdot 2^{16} + (a_h \\cdot b_h) \\cdot 2^{32}\n*     \\end{align*}\n*     ```\n*\n* -   We note that multiplying (dividing) an integer by \\\\( 2^n \\\\) is equivalent to performing a left (right) shift of \\\\( n \\\\) bits.\n*\n* -   Further, as we want to return an integer of the same precision, for a 32-bit integer, the return value will be modulo \\\\( 2^{32} \\\\). Stated another way, we only care about the low word of a 64-bit result.\n*\n* -   Accordingly, the last term, being evenly divisible by \\\\( 2^{32} \\\\), drops from the equation leaving the remaining two terms as the remainder.\n*\n*     ```tex\n*     a \\cdot b = a_l \\cdot b_l + (a_h \\cdot b_l + a_l \\cdot b_h) << 16\n*     ```\n*\n* -   Lastly, the second term in the above equation contributes to the middle bits and may cause the product to \"overflow\". However, we can disregard (`>>>0`) overflow bits due to modulo arithmetic, as discussed earlier with regard to the term involving the partial product of high words.\n*\n* @param {uinteger32} a - integer\n* @param {uinteger32} b - integer\n* @returns {uinteger32} product\n*\n* @example\n* var v = umul( 10>>>0, 4>>>0 );\n* // returns 40\n*/ function $ec70f4308d970ec8$var$umul(a, b) {\n    var lbits;\n    var mbits;\n    var ha;\n    var hb;\n    var la;\n    var lb;\n    a >>>= 0; // asm type annotation\n    b >>>= 0; // asm type annotation\n    // Isolate the most significant 16-bits:\n    ha = a >>> 16 >>> 0; // asm type annotation\n    hb = b >>> 16 >>> 0; // asm type annotation\n    // Isolate the least significant 16-bits:\n    la = (a & $ec70f4308d970ec8$var$LOW_WORD_MASK) >>> 0; // asm type annotation\n    lb = (b & $ec70f4308d970ec8$var$LOW_WORD_MASK) >>> 0; // asm type annotation\n    // Compute partial sums:\n    lbits = la * lb >>> 0; // asm type annotation; no integer overflow possible\n    mbits = ha * lb + la * hb << 16 >>> 0; // asm type annotation; possible integer overflow\n    // The final `>>>0` converts the intermediate sum to an unsigned integer (possible integer overflow during sum):\n    return lbits + mbits >>> 0; // asm type annotation\n}\n// EXPORTS //\n$ec70f4308d970ec8$exports = $ec70f4308d970ec8$var$umul;\n\n\n// EXPORTS //\n$66f874ac6fdc70e7$exports = $ec70f4308d970ec8$exports;\n\n\nvar $5c6324161692e0ec$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $63bf1be7a391376a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $6a02809187fe3c4a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $9c2cd5987f1f9b27$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $114d21ecee832746$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $70574a91dd3c20ca$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// VARIABLES //\nvar $70574a91dd3c20ca$var$TYPE = 'function';\n// MAIN //\n/**\n* Tests if an array-like object supports the accessor (get/set) protocol.\n*\n* @param {Object} value - value to test\n* @returns {boolean} boolean indicating whether a value is an accessor array\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var bool = isAccessorArray( new Complex128Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isAccessorArray( [] );\n* // returns false\n*/ function $70574a91dd3c20ca$var$isAccessorArray(value) {\n    return typeof value.get === $70574a91dd3c20ca$var$TYPE && typeof value.set === $70574a91dd3c20ca$var$TYPE; // eslint-disable-line valid-typeof\n}\n// EXPORTS //\n$70574a91dd3c20ca$exports = $70574a91dd3c20ca$var$isAccessorArray;\n\n\n// EXPORTS //\n$114d21ecee832746$exports = $70574a91dd3c20ca$exports;\n\n\nvar $88f5ca10627f0cae$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $7746194384f5541a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// VARIABLES //\nvar $7746194384f5541a$var$GETTERS = {\n    'float64': $7746194384f5541a$var$getFloat64,\n    'float32': $7746194384f5541a$var$getFloat32,\n    'int32': $7746194384f5541a$var$getInt32,\n    'int16': $7746194384f5541a$var$getInt16,\n    'int8': $7746194384f5541a$var$getInt8,\n    'uint32': $7746194384f5541a$var$getUint32,\n    'uint16': $7746194384f5541a$var$getUint16,\n    'uint8': $7746194384f5541a$var$getUint8,\n    'uint8c': $7746194384f5541a$var$getUint8c,\n    'generic': $7746194384f5541a$var$getGeneric,\n    'default': $7746194384f5541a$var$getArrayLike\n};\n// FUNCTIONS //\n/**\n* Returns an element from a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getFloat64( arr, 2 );\n* // returns 3.0\n*/ function $7746194384f5541a$var$getFloat64(arr, idx) {\n    return arr[idx];\n}\n/**\n* Returns an element from a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Float32Array = require( '@stdlib/array/float32' );\n*\n* var arr = new Float32Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getFloat32( arr, 2 );\n* // returns 3.0\n*/ function $7746194384f5541a$var$getFloat32(arr, idx) {\n    return arr[idx];\n}\n/**\n* Returns an element from an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Int32Array = require( '@stdlib/array/int32' );\n*\n* var arr = new Int32Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getInt32( arr, 2 );\n* // returns 3\n*/ function $7746194384f5541a$var$getInt32(arr, idx) {\n    return arr[idx];\n}\n/**\n* Returns an element from an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Int16Array = require( '@stdlib/array/int16' );\n*\n* var arr = new Int16Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getInt16( arr, 2 );\n* // returns 3\n*/ function $7746194384f5541a$var$getInt16(arr, idx) {\n    return arr[idx];\n}\n/**\n* Returns an element from an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n*\n* var arr = new Int8Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getInt8( arr, 2 );\n* // returns 3\n*/ function $7746194384f5541a$var$getInt8(arr, idx) {\n    return arr[idx];\n}\n/**\n* Returns an element from a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Uint32Array = require( '@stdlib/array/uint32' );\n*\n* var arr = new Uint32Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint32( arr, 2 );\n* // returns 3\n*/ function $7746194384f5541a$var$getUint32(arr, idx) {\n    return arr[idx];\n}\n/**\n* Returns an element from a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Uint16Array = require( '@stdlib/array/uint16' );\n*\n* var arr = new Uint16Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint16( arr, 2 );\n* // returns 3\n*/ function $7746194384f5541a$var$getUint16(arr, idx) {\n    return arr[idx];\n}\n/**\n* Returns an element from a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Uint8Array = require( '@stdlib/array/uint8' );\n*\n* var arr = new Uint8Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint8( arr, 2 );\n* // returns 3\n*/ function $7746194384f5541a$var$getUint8(arr, idx) {\n    return arr[idx];\n}\n/**\n* Returns an element from a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Uint8ClampedArray = require( '@stdlib/array/uint8c' );\n*\n* var arr = new Uint8ClampedArray( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint8c( arr, 2 );\n* // returns 3\n*/ function $7746194384f5541a$var$getUint8c(arr, idx) {\n    return arr[idx];\n}\n/**\n* Returns an element from a generic `Array`.\n*\n* @private\n* @param {Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element value\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var v = getGeneric( arr, 2 );\n* // returns 3\n*/ function $7746194384f5541a$var$getGeneric(arr, idx) {\n    return arr[idx];\n}\n/**\n* Returns an element from an indexed array-like object.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element value\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var v = getArrayLike( arr, 2 );\n* // returns 3\n*/ function $7746194384f5541a$var$getArrayLike(arr, idx) {\n    return arr[idx];\n}\n// MAIN //\n/**\n* Returns an accessor function for retrieving an element from an indexed array-like object.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* var dtype = require( '@stdlib/array/dtype' );\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var get = getter( dtype( arr ) );\n* var v = get( arr, 2 );\n* // returns 3\n*/ function $7746194384f5541a$var$getter(dtype) {\n    var f = $7746194384f5541a$var$GETTERS[dtype];\n    if (typeof f === 'function') return f;\n    return $7746194384f5541a$var$GETTERS.default;\n}\n// EXPORTS //\n$7746194384f5541a$exports = $7746194384f5541a$var$getter;\n\n\n// EXPORTS //\n$88f5ca10627f0cae$exports = $7746194384f5541a$exports;\n\n\nvar $c5348a68ff530f9c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $4d421b6080a6fa07$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// VARIABLES //\nvar $4d421b6080a6fa07$var$SETTERS = {\n    'float64': $4d421b6080a6fa07$var$setFloat64,\n    'float32': $4d421b6080a6fa07$var$setFloat32,\n    'int32': $4d421b6080a6fa07$var$setInt32,\n    'int16': $4d421b6080a6fa07$var$setInt16,\n    'int8': $4d421b6080a6fa07$var$setInt8,\n    'uint32': $4d421b6080a6fa07$var$setUint32,\n    'uint16': $4d421b6080a6fa07$var$setUint16,\n    'uint8': $4d421b6080a6fa07$var$setUint8,\n    'uint8c': $4d421b6080a6fa07$var$setUint8c,\n    'generic': $4d421b6080a6fa07$var$setGeneric,\n    'default': $4d421b6080a6fa07$var$setArrayLike\n};\n// FUNCTIONS //\n/**\n* Sets an element in a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( 4 );\n*\n* setFloat64( arr, 2, 3.0 );\n*\n* var v = arr[ 2 ];\n* // returns 3.0\n*/ function $4d421b6080a6fa07$var$setFloat64(arr, idx, value) {\n    arr[idx] = value;\n}\n/**\n* Sets an element in a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Float32Array = require( '@stdlib/array/float32' );\n*\n* var arr = new Float32Array( 4 );\n*\n* setFloat32( arr, 2, 3.0 );\n*\n* var v = arr[ 2 ];\n* // returns 3.0\n*/ function $4d421b6080a6fa07$var$setFloat32(arr, idx, value) {\n    arr[idx] = value;\n}\n/**\n* Sets an element in an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Int32Array = require( '@stdlib/array/int32' );\n*\n* var arr = new Int32Array( 4 );\n*\n* setInt32( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/ function $4d421b6080a6fa07$var$setInt32(arr, idx, value) {\n    arr[idx] = value;\n}\n/**\n* Sets an element in an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Int16Array = require( '@stdlib/array/int16' );\n*\n* var arr = new Int16Array( 4 );\n*\n* setInt16( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/ function $4d421b6080a6fa07$var$setInt16(arr, idx, value) {\n    arr[idx] = value;\n}\n/**\n* Sets an element in an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n*\n* var arr = new Int8Array( 4 );\n*\n* setInt8( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/ function $4d421b6080a6fa07$var$setInt8(arr, idx, value) {\n    arr[idx] = value;\n}\n/**\n* Sets an element in a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Uint32Array = require( '@stdlib/array/uint32' );\n*\n* var arr = new Uint32Array( 4 );\n*\n* setUint32( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/ function $4d421b6080a6fa07$var$setUint32(arr, idx, value) {\n    arr[idx] = value;\n}\n/**\n* Sets an element in a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Uint16Array = require( '@stdlib/array/uint16' );\n*\n* var arr = new Uint16Array( 4 );\n*\n* setUint16( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/ function $4d421b6080a6fa07$var$setUint16(arr, idx, value) {\n    arr[idx] = value;\n}\n/**\n* Sets an element in a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Uint8Array = require( '@stdlib/array/uint8' );\n*\n* var arr = new Uint8Array( 4 );\n*\n* setUint8( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/ function $4d421b6080a6fa07$var$setUint8(arr, idx, value) {\n    arr[idx] = value;\n}\n/**\n* Sets an element in a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Uint8ClampedArray = require( '@stdlib/array/uint8c' );\n*\n* var arr = new Uint8ClampedArray( 4 );\n*\n* setUint8c( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/ function $4d421b6080a6fa07$var$setUint8c(arr, idx, value) {\n    arr[idx] = value;\n}\n/**\n* Sets an element in a generic `Array`.\n*\n* @private\n* @param {Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* setGeneric( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/ function $4d421b6080a6fa07$var$setGeneric(arr, idx, value) {\n    arr[idx] = value;\n}\n/**\n* Sets an element in an indexed array-like object.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* setArrayLike( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/ function $4d421b6080a6fa07$var$setArrayLike(arr, idx, value) {\n    arr[idx] = value;\n}\n// MAIN //\n/**\n* Returns an accessor function for setting an element in an indexed array-like object.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* var dtype = require( '@stdlib/array/dtype' );\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var set = setter( dtype( arr ) );\n* set( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/ function $4d421b6080a6fa07$var$setter(dtype) {\n    var f = $4d421b6080a6fa07$var$SETTERS[dtype];\n    if (typeof f === 'function') return f;\n    return $4d421b6080a6fa07$var$SETTERS.default;\n}\n// EXPORTS //\n$4d421b6080a6fa07$exports = $4d421b6080a6fa07$var$setter;\n\n\n// EXPORTS //\n$c5348a68ff530f9c$exports = $4d421b6080a6fa07$exports;\n\n\nvar $dfd66f945cb96da9$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $8141b4ae21f8ed28$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// VARIABLES //\nvar $8141b4ae21f8ed28$var$GETTERS = {\n    'complex128': $8141b4ae21f8ed28$var$getComplex128,\n    'complex64': $8141b4ae21f8ed28$var$getComplex64,\n    'default': $8141b4ae21f8ed28$var$getArrayLike\n};\n// FUNCTIONS //\n/**\n* Returns an element from a `Complex128Array`.\n*\n* @private\n* @param {Complex128Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getComplex128( arr, 1 );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 3.0\n*\n* var im = imag( v );\n* // returns 4.0\n*/ function $8141b4ae21f8ed28$var$getComplex128(arr, idx) {\n    return arr.get(idx);\n}\n/**\n* Returns an element from a `Complex64Array`.\n*\n* @private\n* @param {Complex64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getComplex64( arr, 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 3.0\n*\n* var im = imagf( v );\n* // returns 4.0\n*/ function $8141b4ae21f8ed28$var$getComplex64(arr, idx) {\n    return arr.get(idx);\n}\n/**\n* Returns an element from an array-like object supporting the get/set protocol.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element value\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* function get( idx ) {\n*    return arr[ idx ];\n* }\n*\n* function set( value, idx ) {\n*    arr[ idx ] = value;\n* }\n*\n* arr.get = get;\n* arr.set = set;\n*\n* var v = getArrayLike( arr, 2 );\n* // returns 3\n*/ function $8141b4ae21f8ed28$var$getArrayLike(arr, idx) {\n    return arr.get(idx);\n}\n// MAIN //\n/**\n* Returns an accessor function for retrieving an element from an array-like object supporting the get/set protocol.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var dtype = require( '@stdlib/array/dtype' );\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var get = getter( dtype( arr ) );\n* var v = get( arr, 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 3.0\n*\n* var im = imagf( v );\n* // returns 4.0\n*/ function $8141b4ae21f8ed28$var$getter(dtype) {\n    var f = $8141b4ae21f8ed28$var$GETTERS[dtype];\n    if (typeof f === 'function') return f;\n    return $8141b4ae21f8ed28$var$GETTERS.default;\n}\n// EXPORTS //\n$8141b4ae21f8ed28$exports = $8141b4ae21f8ed28$var$getter;\n\n\n// EXPORTS //\n$dfd66f945cb96da9$exports = $8141b4ae21f8ed28$exports;\n\n\nvar $7a65e941626c3146$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $ce0839c36fe479b6$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// VARIABLES //\nvar $ce0839c36fe479b6$var$SETTERS = {\n    'complex128': $ce0839c36fe479b6$var$setComplex128,\n    'complex64': $ce0839c36fe479b6$var$setComplex64,\n    'default': $ce0839c36fe479b6$var$setArrayLike\n};\n// FUNCTIONS //\n/**\n* Sets an element in a `Complex128Array`.\n*\n* @private\n* @param {Complex128Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( [ 1, 2, 3, 4 ] );\n*\n* setComplex128( arr, 1, new Complex128( 10.0, 11.0 ) );\n* var v = arr.get( 1 );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 10.0\n*\n* var im = imag( v );\n* // returns 11.0\n*/ function $ce0839c36fe479b6$var$setComplex128(arr, idx, value) {\n    arr.set(value, idx);\n}\n/**\n* Sets an element in a `Complex64Array`.\n*\n* @private\n* @param {Complex64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* setComplex64( arr, 1, new Complex64( 10.0, 11.0 ) );\n* var v = arr.get( 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 10.0\n*\n* var im = imagf( v );\n* // returns 11.0\n*/ function $ce0839c36fe479b6$var$setComplex64(arr, idx, value) {\n    arr.set(value, idx);\n}\n/**\n* Sets an element in an array-like object supporting the get/set protocol.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* function get( idx ) {\n*    return arr[ idx ];\n* }\n*\n* function set( value, idx ) {\n*    arr[ idx ] = value;\n* }\n*\n* arr.get = get;\n* arr.set = set;\n*\n* setArrayLike( arr, 2, 10 );\n*\n* var v = arr[ 2 ];\n* // returns 10\n*/ function $ce0839c36fe479b6$var$setArrayLike(arr, idx, value) {\n    arr.set(value, idx);\n}\n// MAIN //\n/**\n* Returns an accessor function for setting an element in an array-like object supporting the get/set protocol.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var dtype = require( '@stdlib/array/dtype' );\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var set = setter( dtype( arr ) );\n* set( arr, 1, new Complex64( 10.0, 11.0 ) );\n*\n* var v = arr.get( 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 10.0\n*\n* var im = imagf( v );\n* // returns 11.0\n*/ function $ce0839c36fe479b6$var$setter(dtype) {\n    var f = $ce0839c36fe479b6$var$SETTERS[dtype];\n    if (typeof f === 'function') return f;\n    return $ce0839c36fe479b6$var$SETTERS.default;\n}\n// EXPORTS //\n$ce0839c36fe479b6$exports = $ce0839c36fe479b6$var$setter;\n\n\n// EXPORTS //\n$7a65e941626c3146$exports = $ce0839c36fe479b6$exports;\n\n\nvar $197ea0f3ce9f037b$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $ae2895751c8f79c8$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n\nvar $1cea0019130bbe15$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\n// Mapping from array constructors to data types...\nvar $1cea0019130bbe15$var$ctor2dtypes = {\n    'Float32Array': 'float32',\n    'Float64Array': 'float64',\n    'Array': 'generic',\n    'Int16Array': 'int16',\n    'Int32Array': 'int32',\n    'Int8Array': 'int8',\n    'Uint16Array': 'uint16',\n    'Uint32Array': 'uint32',\n    'Uint8Array': 'uint8',\n    'Uint8ClampedArray': 'uint8c',\n    'Complex64Array': 'complex64',\n    'Complex128Array': 'complex128',\n    'BooleanArray': 'bool'\n};\n// EXPORTS //\n$1cea0019130bbe15$exports = $1cea0019130bbe15$var$ctor2dtypes;\n\n\nvar $3ad6a1cfb43d8878$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $688bf0eeb5997346$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $f51c88c88382236d$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $6a2ea7ea146c8988$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $a1b67c4739a9bfa6$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $1f47951994ce5bd6$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// VARIABLES //\nvar $1f47951994ce5bd6$var$hasFloat64Array = typeof Float64Array === 'function'; // eslint-disable-line stdlib/require-globals\n// MAIN //\n/**\n* Tests if a value is a Float64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float64Array\n*\n* @example\n* var bool = isFloat64Array( new Float64Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat64Array( [] );\n* // returns false\n*/ function $1f47951994ce5bd6$var$isFloat64Array(value) {\n    return $1f47951994ce5bd6$var$hasFloat64Array && value instanceof Float64Array || // eslint-disable-line stdlib/require-globals\n    $c1bcb1474c583c23$exports(value) === '[object Float64Array]';\n}\n// EXPORTS //\n$1f47951994ce5bd6$exports = $1f47951994ce5bd6$var$isFloat64Array;\n\n\n// EXPORTS //\n$a1b67c4739a9bfa6$exports = $1f47951994ce5bd6$exports;\n\n\nvar $60ea159ebc53c5b3$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $60ea159ebc53c5b3$var$main = typeof Float64Array === 'function' ? Float64Array : null; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$60ea159ebc53c5b3$exports = $60ea159ebc53c5b3$var$main;\n\n\n// MAIN //\n/**\n* Tests for native `Float64Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float64Array` support\n*\n* @example\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/ function $6a2ea7ea146c8988$var$hasFloat64ArraySupport() {\n    var bool;\n    var arr;\n    if (typeof $60ea159ebc53c5b3$exports !== 'function') return false;\n    // Test basic support...\n    try {\n        arr = new $60ea159ebc53c5b3$exports([\n            1.0,\n            3.14,\n            -3.14,\n            NaN\n        ]);\n        bool = $a1b67c4739a9bfa6$exports(arr) && arr[0] === 1.0 && arr[1] === 3.14 && arr[2] === -3.14 && arr[3] !== arr[3];\n    } catch (err) {\n        bool = false;\n    }\n    return bool;\n}\n// EXPORTS //\n$6a2ea7ea146c8988$exports = $6a2ea7ea146c8988$var$hasFloat64ArraySupport;\n\n\n// EXPORTS //\n$f51c88c88382236d$exports = $6a2ea7ea146c8988$exports;\n\n\nvar $f3538e338d4130bd$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $f3538e338d4130bd$var$ctor = typeof Float64Array === 'function' ? Float64Array : void 0; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$f3538e338d4130bd$exports = $f3538e338d4130bd$var$ctor;\n\n\nvar $1602a69491a764ab$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// TODO: write polyfill\n// MAIN //\n/**\n* Typed array which represents an array of double-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/ function $1602a69491a764ab$var$polyfill() {\n    throw new Error('not implemented');\n}\n// EXPORTS //\n$1602a69491a764ab$exports = $1602a69491a764ab$var$polyfill;\n\n\n// MAIN //\nvar $688bf0eeb5997346$var$ctor;\nif ($f51c88c88382236d$exports()) $688bf0eeb5997346$var$ctor = $f3538e338d4130bd$exports;\nelse $688bf0eeb5997346$var$ctor = $1602a69491a764ab$exports;\n// EXPORTS //\n$688bf0eeb5997346$exports = $688bf0eeb5997346$var$ctor;\n\n\nvar $26891ca0f6b1a852$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $e4989b1d79b3b8c3$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $bcbe48ccd7c6c2c1$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $a7f905c77ab0e6a2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $4bec4a970779c346$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// VARIABLES //\nvar $4bec4a970779c346$var$hasFloat32Array = typeof Float32Array === 'function'; // eslint-disable-line stdlib/require-globals\n// MAIN //\n/**\n* Tests if a value is a Float32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float32Array\n*\n* @example\n* var bool = isFloat32Array( new Float32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat32Array( [] );\n* // returns false\n*/ function $4bec4a970779c346$var$isFloat32Array(value) {\n    return $4bec4a970779c346$var$hasFloat32Array && value instanceof Float32Array || // eslint-disable-line stdlib/require-globals\n    $c1bcb1474c583c23$exports(value) === '[object Float32Array]';\n}\n// EXPORTS //\n$4bec4a970779c346$exports = $4bec4a970779c346$var$isFloat32Array;\n\n\n// EXPORTS //\n$a7f905c77ab0e6a2$exports = $4bec4a970779c346$exports;\n\n\n\nvar $9eac870346dc568c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $9eac870346dc568c$var$main = typeof Float32Array === 'function' ? Float32Array : null; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$9eac870346dc568c$exports = $9eac870346dc568c$var$main;\n\n\n// MAIN //\n/**\n* Tests for native `Float32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float32Array` support\n*\n* @example\n* var bool = hasFloat32ArraySupport();\n* // returns <boolean>\n*/ function $bcbe48ccd7c6c2c1$var$hasFloat32ArraySupport() {\n    var bool;\n    var arr;\n    if (typeof $9eac870346dc568c$exports !== 'function') return false;\n    // Test basic support...\n    try {\n        arr = new $9eac870346dc568c$exports([\n            1.0,\n            3.14,\n            -3.14,\n            5.0e40\n        ]);\n        bool = $a7f905c77ab0e6a2$exports(arr) && arr[0] === 1.0 && arr[1] === 3.140000104904175 && arr[2] === -3.140000104904175 && arr[3] === $163c16c3843b9db0$exports;\n    } catch (err) {\n        bool = false;\n    }\n    return bool;\n}\n// EXPORTS //\n$bcbe48ccd7c6c2c1$exports = $bcbe48ccd7c6c2c1$var$hasFloat32ArraySupport;\n\n\n// EXPORTS //\n$e4989b1d79b3b8c3$exports = $bcbe48ccd7c6c2c1$exports;\n\n\nvar $d1410802ed9042b2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $d1410802ed9042b2$var$ctor = typeof Float32Array === 'function' ? Float32Array : void 0; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$d1410802ed9042b2$exports = $d1410802ed9042b2$var$ctor;\n\n\nvar $e39cb8336d43de5c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// TODO: write polyfill\n// MAIN //\n/**\n* Typed array which represents an array of single-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/ function $e39cb8336d43de5c$var$polyfill() {\n    throw new Error('not implemented');\n}\n// EXPORTS //\n$e39cb8336d43de5c$exports = $e39cb8336d43de5c$var$polyfill;\n\n\n// MAIN //\nvar $26891ca0f6b1a852$var$ctor;\nif ($e4989b1d79b3b8c3$exports()) $26891ca0f6b1a852$var$ctor = $d1410802ed9042b2$exports;\nelse $26891ca0f6b1a852$var$ctor = $e39cb8336d43de5c$exports;\n// EXPORTS //\n$26891ca0f6b1a852$exports = $26891ca0f6b1a852$var$ctor;\n\n\n\nvar $25d2454a59275c01$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $6f7f726350c4ec69$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $46221959f324b79e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $76f29fd81e6db4bc$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $db8c282f0aeaed30$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// VARIABLES //\nvar $db8c282f0aeaed30$var$hasInt32Array = typeof Int32Array === 'function'; // eslint-disable-line stdlib/require-globals\n// MAIN //\n/**\n* Tests if a value is an Int32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int32Array\n*\n* @example\n* var bool = isInt32Array( new Int32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt32Array( [] );\n* // returns false\n*/ function $db8c282f0aeaed30$var$isInt32Array(value) {\n    return $db8c282f0aeaed30$var$hasInt32Array && value instanceof Int32Array || // eslint-disable-line stdlib/require-globals\n    $c1bcb1474c583c23$exports(value) === '[object Int32Array]';\n}\n// EXPORTS //\n$db8c282f0aeaed30$exports = $db8c282f0aeaed30$var$isInt32Array;\n\n\n// EXPORTS //\n$76f29fd81e6db4bc$exports = $db8c282f0aeaed30$exports;\n\n\nvar $29c6c390d1dbe43f$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Maximum signed 32-bit integer.\n*\n* @module @stdlib/constants/int32/max\n* @type {integer32}\n*\n* @example\n* var INT32_MAX = require( '@stdlib/constants/int32/max' );\n* // returns 2147483647\n*/ // MAIN //\n/**\n* Maximum signed 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{31} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 01111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 2147483647\n*/ var $29c6c390d1dbe43f$var$INT32_MAX = 2147483647; // asm type annotation\n// EXPORTS //\n$29c6c390d1dbe43f$exports = $29c6c390d1dbe43f$var$INT32_MAX;\n\n\nvar $99acf866a7ce9c84$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Minimum signed 32-bit integer.\n*\n* @module @stdlib/constants/int32/min\n* @type {integer32}\n*\n* @example\n* var INT32_MIN = require( '@stdlib/constants/int32/min' );\n* // returns -2147483648\n*/ // MAIN //\n/**\n* Minimum signed 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -(2^{31})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 10000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -2147483648\n*/ var $99acf866a7ce9c84$var$INT32_MIN = -2147483648; // asm type annotation\n// EXPORTS //\n$99acf866a7ce9c84$exports = $99acf866a7ce9c84$var$INT32_MIN;\n\n\nvar $00f94046e2bcf8e2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $00f94046e2bcf8e2$var$main = typeof Int32Array === 'function' ? Int32Array : null; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$00f94046e2bcf8e2$exports = $00f94046e2bcf8e2$var$main;\n\n\n// MAIN //\n/**\n* Tests for native `Int32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int32Array` support\n*\n* @example\n* var bool = hasInt32ArraySupport();\n* // returns <boolean>\n*/ function $46221959f324b79e$var$hasInt32ArraySupport() {\n    var bool;\n    var arr;\n    if (typeof $00f94046e2bcf8e2$exports !== 'function') return false;\n    // Test basic support...\n    try {\n        arr = new $00f94046e2bcf8e2$exports([\n            1,\n            3.14,\n            -3.14,\n            $29c6c390d1dbe43f$exports + 1\n        ]);\n        bool = $76f29fd81e6db4bc$exports(arr) && arr[0] === 1 && arr[1] === 3 && // truncation\n        arr[2] === -3 && // truncation\n        arr[3] === $99acf866a7ce9c84$exports // wrap around\n        ;\n    } catch (err) {\n        bool = false;\n    }\n    return bool;\n}\n// EXPORTS //\n$46221959f324b79e$exports = $46221959f324b79e$var$hasInt32ArraySupport;\n\n\n// EXPORTS //\n$6f7f726350c4ec69$exports = $46221959f324b79e$exports;\n\n\nvar $448c9aa0d27fc1c2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $448c9aa0d27fc1c2$var$ctor = typeof Int32Array === 'function' ? Int32Array : void 0; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$448c9aa0d27fc1c2$exports = $448c9aa0d27fc1c2$var$ctor;\n\n\nvar $809df437e6d360b9$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// TODO: write polyfill\n// MAIN //\n/**\n* Typed array which represents an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/ function $809df437e6d360b9$var$polyfill() {\n    throw new Error('not implemented');\n}\n// EXPORTS //\n$809df437e6d360b9$exports = $809df437e6d360b9$var$polyfill;\n\n\n// MAIN //\nvar $25d2454a59275c01$var$ctor;\nif ($6f7f726350c4ec69$exports()) $25d2454a59275c01$var$ctor = $448c9aa0d27fc1c2$exports;\nelse $25d2454a59275c01$var$ctor = $809df437e6d360b9$exports;\n// EXPORTS //\n$25d2454a59275c01$exports = $25d2454a59275c01$var$ctor;\n\n\nvar $d41d9d0c25adca97$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $f88d18dac5c80440$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $0939ef0769e4a541$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $70add841e4c53a36$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $093455c87000bdbd$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// VARIABLES //\nvar $093455c87000bdbd$var$hasUint16Array = typeof Uint16Array === 'function'; // eslint-disable-line stdlib/require-globals\n// MAIN //\n/**\n* Tests if a value is a Uint16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint16Array\n*\n* @example\n* var bool = isUint16Array( new Uint16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint16Array( [] );\n* // returns false\n*/ function $093455c87000bdbd$var$isUint16Array(value) {\n    return $093455c87000bdbd$var$hasUint16Array && value instanceof Uint16Array || // eslint-disable-line stdlib/require-globals\n    $c1bcb1474c583c23$exports(value) === '[object Uint16Array]';\n}\n// EXPORTS //\n$093455c87000bdbd$exports = $093455c87000bdbd$var$isUint16Array;\n\n\n// EXPORTS //\n$70add841e4c53a36$exports = $093455c87000bdbd$exports;\n\n\nvar $e3580730f4942dc8$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Maximum unsigned 16-bit integer.\n*\n* @module @stdlib/constants/uint16/max\n* @type {integer32}\n*\n* @example\n* var UINT16_MAX = require( '@stdlib/constants/uint16/max' );\n* // returns 65535\n*/ // MAIN //\n/**\n* Maximum unsigned 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{16} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 1111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 65535\n*/ var $e3580730f4942dc8$var$UINT16_MAX = 65535; // asm type annotation\n// EXPORTS //\n$e3580730f4942dc8$exports = $e3580730f4942dc8$var$UINT16_MAX;\n\n\nvar $1f4c3649cfc7b463$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $1f4c3649cfc7b463$var$main = typeof Uint16Array === 'function' ? Uint16Array : null; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$1f4c3649cfc7b463$exports = $1f4c3649cfc7b463$var$main;\n\n\n// MAIN //\n/**\n* Tests for native `Uint16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint16Array` support\n*\n* @example\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/ function $0939ef0769e4a541$var$hasUint16ArraySupport() {\n    var bool;\n    var arr;\n    if (typeof $1f4c3649cfc7b463$exports !== 'function') return false;\n    // Test basic support...\n    try {\n        arr = [\n            1,\n            3.14,\n            -3.14,\n            $e3580730f4942dc8$exports + 1,\n            $e3580730f4942dc8$exports + 2\n        ];\n        arr = new $1f4c3649cfc7b463$exports(arr);\n        bool = $70add841e4c53a36$exports(arr) && arr[0] === 1 && arr[1] === 3 && // truncation\n        arr[2] === $e3580730f4942dc8$exports - 2 && // truncation and wrap around\n        arr[3] === 0 && // wrap around\n        arr[4] === 1 // wrap around\n        ;\n    } catch (err) {\n        bool = false;\n    }\n    return bool;\n}\n// EXPORTS //\n$0939ef0769e4a541$exports = $0939ef0769e4a541$var$hasUint16ArraySupport;\n\n\n// EXPORTS //\n$f88d18dac5c80440$exports = $0939ef0769e4a541$exports;\n\n\nvar $3d6f94228254dbc1$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $3d6f94228254dbc1$var$ctor = typeof Uint16Array === 'function' ? Uint16Array : void 0; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$3d6f94228254dbc1$exports = $3d6f94228254dbc1$var$ctor;\n\n\nvar $c038b280ecde4a56$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// TODO: write polyfill\n// MAIN //\n/**\n* Typed array which represents an array of 16-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/ function $c038b280ecde4a56$var$polyfill() {\n    throw new Error('not implemented');\n}\n// EXPORTS //\n$c038b280ecde4a56$exports = $c038b280ecde4a56$var$polyfill;\n\n\n// MAIN //\nvar $d41d9d0c25adca97$var$ctor;\nif ($f88d18dac5c80440$exports()) $d41d9d0c25adca97$var$ctor = $3d6f94228254dbc1$exports;\nelse $d41d9d0c25adca97$var$ctor = $c038b280ecde4a56$exports;\n// EXPORTS //\n$d41d9d0c25adca97$exports = $d41d9d0c25adca97$var$ctor;\n\n\nvar $8e8697281bde0b47$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $5c1694e24a2d76e5$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $32932833093f7068$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $68cbb738d294702f$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $231e46d78911d41a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// VARIABLES //\nvar $231e46d78911d41a$var$hasInt16Array = typeof Int16Array === 'function'; // eslint-disable-line stdlib/require-globals\n// MAIN //\n/**\n* Tests if a value is an Int16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int16Array\n*\n* @example\n* var bool = isInt16Array( new Int16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt16Array( [] );\n* // returns false\n*/ function $231e46d78911d41a$var$isInt16Array(value) {\n    return $231e46d78911d41a$var$hasInt16Array && value instanceof Int16Array || // eslint-disable-line stdlib/require-globals\n    $c1bcb1474c583c23$exports(value) === '[object Int16Array]';\n}\n// EXPORTS //\n$231e46d78911d41a$exports = $231e46d78911d41a$var$isInt16Array;\n\n\n// EXPORTS //\n$68cbb738d294702f$exports = $231e46d78911d41a$exports;\n\n\nvar $2446128d1e477ad4$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Maximum signed 16-bit integer.\n*\n* @module @stdlib/constants/int16/max\n* @type {integer32}\n*\n* @example\n* var INT16_MAX = require( '@stdlib/constants/int16/max' );\n* // returns 32767\n*/ // MAIN //\n/**\n* Maximum signed 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{15} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 32767\n*/ var $2446128d1e477ad4$var$INT16_MAX = 32767; // asm type annotation\n// EXPORTS //\n$2446128d1e477ad4$exports = $2446128d1e477ad4$var$INT16_MAX;\n\n\nvar $891f6158648ba9cb$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Minimum signed 16-bit integer.\n*\n* @module @stdlib/constants/int16/min\n* @type {integer32}\n*\n* @example\n* var INT16_MIN = require( '@stdlib/constants/int16/min' );\n* // returns -32768\n*/ // MAIN //\n/**\n* Minimum signed 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -(2^{15})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 1000000000000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -32768\n*/ var $891f6158648ba9cb$var$INT16_MIN = -32768; // asm type annotation\n// EXPORTS //\n$891f6158648ba9cb$exports = $891f6158648ba9cb$var$INT16_MIN;\n\n\nvar $96d48abaa213ed8a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $96d48abaa213ed8a$var$main = typeof Int16Array === 'function' ? Int16Array : null; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$96d48abaa213ed8a$exports = $96d48abaa213ed8a$var$main;\n\n\n// MAIN //\n/**\n* Tests for native `Int16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int16Array` support\n*\n* @example\n* var bool = hasInt16ArraySupport();\n* // returns <boolean>\n*/ function $32932833093f7068$var$hasInt16ArraySupport() {\n    var bool;\n    var arr;\n    if (typeof $96d48abaa213ed8a$exports !== 'function') return false;\n    // Test basic support...\n    try {\n        arr = new $96d48abaa213ed8a$exports([\n            1,\n            3.14,\n            -3.14,\n            $2446128d1e477ad4$exports + 1\n        ]);\n        bool = $68cbb738d294702f$exports(arr) && arr[0] === 1 && arr[1] === 3 && // truncation\n        arr[2] === -3 && // truncation\n        arr[3] === $891f6158648ba9cb$exports // wrap around\n        ;\n    } catch (err) {\n        bool = false;\n    }\n    return bool;\n}\n// EXPORTS //\n$32932833093f7068$exports = $32932833093f7068$var$hasInt16ArraySupport;\n\n\n// EXPORTS //\n$5c1694e24a2d76e5$exports = $32932833093f7068$exports;\n\n\nvar $49936125e794dea2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $49936125e794dea2$var$ctor = typeof Int16Array === 'function' ? Int16Array : void 0; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$49936125e794dea2$exports = $49936125e794dea2$var$ctor;\n\n\nvar $97a51d62a5b77d16$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// TODO: write polyfill\n// MAIN //\n/**\n* Typed array which represents an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/ function $97a51d62a5b77d16$var$polyfill() {\n    throw new Error('not implemented');\n}\n// EXPORTS //\n$97a51d62a5b77d16$exports = $97a51d62a5b77d16$var$polyfill;\n\n\n// MAIN //\nvar $8e8697281bde0b47$var$ctor;\nif ($5c1694e24a2d76e5$exports()) $8e8697281bde0b47$var$ctor = $49936125e794dea2$exports;\nelse $8e8697281bde0b47$var$ctor = $97a51d62a5b77d16$exports;\n// EXPORTS //\n$8e8697281bde0b47$exports = $8e8697281bde0b47$var$ctor;\n\n\nvar $b1ee90e09bc85e12$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $fd29a8d396fe8333$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $b0b32f9f79eec122$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $40ce47bdafbd2519$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $a3c8f1663b58e13f$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// VARIABLES //\nvar $a3c8f1663b58e13f$var$hasUint8Array = typeof Uint8Array === 'function'; // eslint-disable-line stdlib/require-globals\n// MAIN //\n/**\n* Tests if a value is a Uint8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8Array\n*\n* @example\n* var bool = isUint8Array( new Uint8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8Array( [] );\n* // returns false\n*/ function $a3c8f1663b58e13f$var$isUint8Array(value) {\n    return $a3c8f1663b58e13f$var$hasUint8Array && value instanceof Uint8Array || // eslint-disable-line stdlib/require-globals\n    $c1bcb1474c583c23$exports(value) === '[object Uint8Array]';\n}\n// EXPORTS //\n$a3c8f1663b58e13f$exports = $a3c8f1663b58e13f$var$isUint8Array;\n\n\n// EXPORTS //\n$40ce47bdafbd2519$exports = $a3c8f1663b58e13f$exports;\n\n\nvar $3cb40d89de80441c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Maximum unsigned 8-bit integer.\n*\n* @module @stdlib/constants/uint8/max\n* @type {integer32}\n*\n* @example\n* var UINT8_MAX = require( '@stdlib/constants/uint8/max' );\n* // returns 255\n*/ // MAIN //\n/**\n* Maximum unsigned 8-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{8} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 255\n*/ var $3cb40d89de80441c$var$UINT8_MAX = 255; // asm type annotation\n// EXPORTS //\n$3cb40d89de80441c$exports = $3cb40d89de80441c$var$UINT8_MAX;\n\n\nvar $0c619b71d9181927$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $0c619b71d9181927$var$main = typeof Uint8Array === 'function' ? Uint8Array : null; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$0c619b71d9181927$exports = $0c619b71d9181927$var$main;\n\n\n// MAIN //\n/**\n* Tests for native `Uint8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8Array` support\n*\n* @example\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/ function $b0b32f9f79eec122$var$hasUint8ArraySupport() {\n    var bool;\n    var arr;\n    if (typeof $0c619b71d9181927$exports !== 'function') return false;\n    // Test basic support...\n    try {\n        arr = [\n            1,\n            3.14,\n            -3.14,\n            $3cb40d89de80441c$exports + 1,\n            $3cb40d89de80441c$exports + 2\n        ];\n        arr = new $0c619b71d9181927$exports(arr);\n        bool = $40ce47bdafbd2519$exports(arr) && arr[0] === 1 && arr[1] === 3 && // truncation\n        arr[2] === $3cb40d89de80441c$exports - 2 && // truncation and wrap around\n        arr[3] === 0 && // wrap around\n        arr[4] === 1 // wrap around\n        ;\n    } catch (err) {\n        bool = false;\n    }\n    return bool;\n}\n// EXPORTS //\n$b0b32f9f79eec122$exports = $b0b32f9f79eec122$var$hasUint8ArraySupport;\n\n\n// EXPORTS //\n$fd29a8d396fe8333$exports = $b0b32f9f79eec122$exports;\n\n\nvar $c8e3a1d9fea18240$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $c8e3a1d9fea18240$var$ctor = typeof Uint8Array === 'function' ? Uint8Array : void 0; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$c8e3a1d9fea18240$exports = $c8e3a1d9fea18240$var$ctor;\n\n\nvar $bf72e6acf6f8e9aa$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// TODO: write polyfill\n// MAIN //\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/ function $bf72e6acf6f8e9aa$var$polyfill() {\n    throw new Error('not implemented');\n}\n// EXPORTS //\n$bf72e6acf6f8e9aa$exports = $bf72e6acf6f8e9aa$var$polyfill;\n\n\n// MAIN //\nvar $b1ee90e09bc85e12$var$ctor;\nif ($fd29a8d396fe8333$exports()) $b1ee90e09bc85e12$var$ctor = $c8e3a1d9fea18240$exports;\nelse $b1ee90e09bc85e12$var$ctor = $bf72e6acf6f8e9aa$exports;\n// EXPORTS //\n$b1ee90e09bc85e12$exports = $b1ee90e09bc85e12$var$ctor;\n\n\nvar $6a9e0856aadec59b$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $fb5436843fc1bce3$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $4ee92a1c52afadd6$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $fb28b0ee7bf4d923$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $4b32ec28ec97ca81$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// VARIABLES //\nvar $4b32ec28ec97ca81$var$hasUint8ClampedArray = typeof Uint8ClampedArray === 'function'; // eslint-disable-line stdlib/require-globals\n// MAIN //\n/**\n* Tests if a value is a Uint8ClampedArray.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8ClampedArray\n*\n* @example\n* var bool = isUint8ClampedArray( new Uint8ClampedArray( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8ClampedArray( [] );\n* // returns false\n*/ function $4b32ec28ec97ca81$var$isUint8ClampedArray(value) {\n    return $4b32ec28ec97ca81$var$hasUint8ClampedArray && value instanceof Uint8ClampedArray || // eslint-disable-line stdlib/require-globals\n    $c1bcb1474c583c23$exports(value) === '[object Uint8ClampedArray]';\n}\n// EXPORTS //\n$4b32ec28ec97ca81$exports = $4b32ec28ec97ca81$var$isUint8ClampedArray;\n\n\n// EXPORTS //\n$fb28b0ee7bf4d923$exports = $4b32ec28ec97ca81$exports;\n\n\nvar $46bcc8ff276d7bb3$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $46bcc8ff276d7bb3$var$main = typeof Uint8ClampedArray === 'function' ? Uint8ClampedArray : null; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$46bcc8ff276d7bb3$exports = $46bcc8ff276d7bb3$var$main;\n\n\n// MAIN //\n/**\n* Tests for native `Uint8ClampedArray` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8ClampedArray` support\n*\n* @example\n* var bool = hasUint8ClampedArraySupport();\n* // returns <boolean>\n*/ function $4ee92a1c52afadd6$var$hasUint8ClampedArraySupport() {\n    var bool;\n    var arr;\n    if (typeof $46bcc8ff276d7bb3$exports !== 'function') return false;\n    // Test basic support...\n    try {\n        arr = new $46bcc8ff276d7bb3$exports([\n            -1,\n            0,\n            1,\n            3.14,\n            4.99,\n            255,\n            256\n        ]);\n        bool = $fb28b0ee7bf4d923$exports(arr) && arr[0] === 0 && // clamped\n        arr[1] === 0 && arr[2] === 1 && arr[3] === 3 && // round to nearest\n        arr[4] === 5 && // round to nearest\n        arr[5] === 255 && arr[6] === 255 // clamped\n        ;\n    } catch (err) {\n        bool = false;\n    }\n    return bool;\n}\n// EXPORTS //\n$4ee92a1c52afadd6$exports = $4ee92a1c52afadd6$var$hasUint8ClampedArraySupport;\n\n\n// EXPORTS //\n$fb5436843fc1bce3$exports = $4ee92a1c52afadd6$exports;\n\n\nvar $30d78b713a9853a3$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $30d78b713a9853a3$var$ctor = typeof Uint8ClampedArray === 'function' ? Uint8ClampedArray : void 0; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$30d78b713a9853a3$exports = $30d78b713a9853a3$var$ctor;\n\n\nvar $d76037cffd959500$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// TODO: write polyfill\n// MAIN //\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @throws {Error} not implemented\n*/ function $d76037cffd959500$var$polyfill() {\n    throw new Error('not implemented');\n}\n// EXPORTS //\n$d76037cffd959500$exports = $d76037cffd959500$var$polyfill;\n\n\n// MAIN //\nvar $6a9e0856aadec59b$var$ctor;\nif ($fb5436843fc1bce3$exports()) $6a9e0856aadec59b$var$ctor = $30d78b713a9853a3$exports;\nelse $6a9e0856aadec59b$var$ctor = $d76037cffd959500$exports;\n// EXPORTS //\n$6a9e0856aadec59b$exports = $6a9e0856aadec59b$var$ctor;\n\n\nvar $08d0b88cbc0edb01$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $d71bfd64bcd54886$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $2df7669c4e6c6a51$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $65472513b605afc2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $459126ac0bd50730$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// VARIABLES //\nvar $459126ac0bd50730$var$hasInt8Array = typeof Int8Array === 'function'; // eslint-disable-line stdlib/require-globals\n// MAIN //\n/**\n* Tests if a value is an Int8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int8Array\n*\n* @example\n* var bool = isInt8Array( new Int8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt8Array( [] );\n* // returns false\n*/ function $459126ac0bd50730$var$isInt8Array(value) {\n    return $459126ac0bd50730$var$hasInt8Array && value instanceof Int8Array || // eslint-disable-line stdlib/require-globals\n    $c1bcb1474c583c23$exports(value) === '[object Int8Array]';\n}\n// EXPORTS //\n$459126ac0bd50730$exports = $459126ac0bd50730$var$isInt8Array;\n\n\n// EXPORTS //\n$65472513b605afc2$exports = $459126ac0bd50730$exports;\n\n\nvar $f100d20f2ae15016$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Maximum signed 8-bit integer.\n*\n* @module @stdlib/constants/int8/max\n* @type {integer32}\n*\n* @example\n* var INT8_MAX = require( '@stdlib/constants/int8/max' );\n* // returns 127\n*/ // MAIN //\n/**\n* Maximum signed 8-bit integer.\n*\n* ## Notes\n*\n* The number is given by\n*\n* ```tex\n* 2^{7} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 01111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 127\n*/ var $f100d20f2ae15016$var$INT8_MAX = 127; // asm type annotation\n// EXPORTS //\n$f100d20f2ae15016$exports = $f100d20f2ae15016$var$INT8_MAX;\n\n\nvar $84c8b55c42b29a84$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Minimum signed 8-bit integer.\n*\n* @module @stdlib/constants/int8/min\n* @type {integer32}\n*\n* @example\n* var INT8_MIN = require( '@stdlib/constants/int8/min' );\n* // returns -128\n*/ // MAIN //\n/**\n* Minimum signed 8-bit integer.\n*\n* ## Notes\n*\n* The number is given by\n*\n* ```tex\n* -(2^{7})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 10000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -128\n*/ var $84c8b55c42b29a84$var$INT8_MIN = -128; // asm type annotation\n// EXPORTS //\n$84c8b55c42b29a84$exports = $84c8b55c42b29a84$var$INT8_MIN;\n\n\nvar $f10dbf5cb0777625$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $f10dbf5cb0777625$var$main = typeof Int8Array === 'function' ? Int8Array : null; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$f10dbf5cb0777625$exports = $f10dbf5cb0777625$var$main;\n\n\n// MAIN //\n/**\n* Tests for native `Int8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int8Array` support\n*\n* @example\n* var bool = hasInt8ArraySupport();\n* // returns <boolean>\n*/ function $2df7669c4e6c6a51$var$hasInt8ArraySupport() {\n    var bool;\n    var arr;\n    if (typeof $f10dbf5cb0777625$exports !== 'function') return false;\n    // Test basic support...\n    try {\n        arr = new $f10dbf5cb0777625$exports([\n            1,\n            3.14,\n            -3.14,\n            $f100d20f2ae15016$exports + 1\n        ]);\n        bool = $65472513b605afc2$exports(arr) && arr[0] === 1 && arr[1] === 3 && // truncation\n        arr[2] === -3 && // truncation\n        arr[3] === $84c8b55c42b29a84$exports // wrap around\n        ;\n    } catch (err) {\n        bool = false;\n    }\n    return bool;\n}\n// EXPORTS //\n$2df7669c4e6c6a51$exports = $2df7669c4e6c6a51$var$hasInt8ArraySupport;\n\n\n// EXPORTS //\n$d71bfd64bcd54886$exports = $2df7669c4e6c6a51$exports;\n\n\nvar $6b65e71714af0366$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $6b65e71714af0366$var$ctor = typeof Int8Array === 'function' ? Int8Array : void 0; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n$6b65e71714af0366$exports = $6b65e71714af0366$var$ctor;\n\n\nvar $cad39b825d919f89$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// TODO: write polyfill\n// MAIN //\n/**\n* Typed array which represents an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/ function $cad39b825d919f89$var$polyfill() {\n    throw new Error('not implemented');\n}\n// EXPORTS //\n$cad39b825d919f89$exports = $cad39b825d919f89$var$polyfill;\n\n\n// MAIN //\nvar $08d0b88cbc0edb01$var$ctor;\nif ($d71bfd64bcd54886$exports()) $08d0b88cbc0edb01$var$ctor = $6b65e71714af0366$exports;\nelse $08d0b88cbc0edb01$var$ctor = $cad39b825d919f89$exports;\n// EXPORTS //\n$08d0b88cbc0edb01$exports = $08d0b88cbc0edb01$var$ctor;\n\n\nvar $375b4d44e8b8b01e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $ba8711ef40fa4add$exports = {};\n/* eslint-disable no-restricted-syntax, max-lines, no-invalid-this */ /**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $0bdd74f709a75343$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $1182d28e7a3e580c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $92083d37421a5150$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $92083d37421a5150$require$isInteger = $0654f579c472fc00$exports.isPrimitive;\n// MAIN //\n/**\n* Tests if a value is a number primitive having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*/ function $92083d37421a5150$var$isNonNegativeInteger(value) {\n    return $92083d37421a5150$require$isInteger(value) && value >= 0;\n}\n// EXPORTS //\n$92083d37421a5150$exports = $92083d37421a5150$var$isNonNegativeInteger;\n\n\nvar $22b0b8a3134625d9$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $22b0b8a3134625d9$require$isInteger = $0654f579c472fc00$exports.isObject;\n// MAIN //\n/**\n* Tests if a value is a number object having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/ function $22b0b8a3134625d9$var$isNonNegativeInteger(value) {\n    return $22b0b8a3134625d9$require$isInteger(value) && value.valueOf() >= 0;\n}\n// EXPORTS //\n$22b0b8a3134625d9$exports = $22b0b8a3134625d9$var$isNonNegativeInteger;\n\n\n// MAIN //\n/**\n* Tests if a value is a nonnegative integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( null );\n* // returns false\n*/ function $1182d28e7a3e580c$var$isNonNegativeInteger(value) {\n    return $92083d37421a5150$exports(value) || $22b0b8a3134625d9$exports(value);\n}\n// EXPORTS //\n$1182d28e7a3e580c$exports = $1182d28e7a3e580c$var$isNonNegativeInteger;\n\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($1182d28e7a3e580c$exports, 'isPrimitive', $92083d37421a5150$exports);\n$dfd4cfb9f136c5d5$exports($1182d28e7a3e580c$exports, 'isObject', $22b0b8a3134625d9$exports);\n// EXPORTS //\n$0bdd74f709a75343$exports = $1182d28e7a3e580c$exports;\n\n\nvar $ba8711ef40fa4add$require$isNonNegativeInteger = $0bdd74f709a75343$exports.isPrimitive;\nvar $121906abae93f5cb$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $a103721489851473$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $86fed06ae3a4ffeb$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Maximum length of a generic array.\n*\n* @module @stdlib/constants/array/max-array-length\n*\n* @example\n* var MAX_ARRAY_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n* // returns 4294967295\n*/ // MAIN //\n/**\n* Maximum length of a generic array.\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/ var $86fed06ae3a4ffeb$var$MAX_ARRAY_LENGTH = 4294967295; // asm type annotation\n// EXPORTS //\n$86fed06ae3a4ffeb$exports = $86fed06ae3a4ffeb$var$MAX_ARRAY_LENGTH;\n\n\n// MAIN //\n/**\n* Tests if a value is an array-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is an array-like object\n*\n* @example\n* var bool = isArrayLikeObject( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( { 'length':10 } );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( 'beep' );\n* // returns false\n*/ function $a103721489851473$var$isArrayLikeObject(value) {\n    return typeof value === 'object' && value !== null && typeof value.length === 'number' && $009faf297be97aa1$exports(value.length) && value.length >= 0 && value.length <= $86fed06ae3a4ffeb$exports;\n}\n// EXPORTS //\n$a103721489851473$exports = $a103721489851473$var$isArrayLikeObject;\n\n\n// EXPORTS //\n$121906abae93f5cb$exports = $a103721489851473$exports;\n\n\n\nvar $0c6292c314072f8d$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $c8de0f653ba5296a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// VARIABLES //\nvar $c8de0f653ba5296a$var$hasArrayBuffer = typeof ArrayBuffer === 'function'; // eslint-disable-line stdlib/require-globals\n// MAIN //\n/**\n* Tests if a value is an ArrayBuffer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an ArrayBuffer\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var bool = isArrayBuffer( new ArrayBuffer( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isArrayBuffer( [] );\n* // returns false\n*/ function $c8de0f653ba5296a$var$isArrayBuffer(value) {\n    return $c8de0f653ba5296a$var$hasArrayBuffer && value instanceof ArrayBuffer || // eslint-disable-line stdlib/require-globals\n    $c1bcb1474c583c23$exports(value) === '[object ArrayBuffer]';\n}\n// EXPORTS //\n$c8de0f653ba5296a$exports = $c8de0f653ba5296a$var$isArrayBuffer;\n\n\n// EXPORTS //\n$0c6292c314072f8d$exports = $c8de0f653ba5296a$exports;\n\n\n\n\nvar $2f257dbaf842ff48$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\nvar $2a5f909076b7a477$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $dcb6c17f402af636$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $cc1bfbb385362bad$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/ function $cc1bfbb385362bad$var$isString(value) {\n    return typeof value === 'string';\n}\n// EXPORTS //\n$cc1bfbb385362bad$exports = $cc1bfbb385362bad$var$isString;\n\n\nvar $c6300c370a161ac9$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\nvar $0efeea41ca4d50b7$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $d1898cc3130a36e1$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// eslint-disable-next-line stdlib/no-redeclare\nvar $d1898cc3130a36e1$var$valueOf = String.prototype.valueOf; // non-generic\n// EXPORTS //\n$d1898cc3130a36e1$exports = $d1898cc3130a36e1$var$valueOf;\n\n\n// MAIN //\n/**\n* Attempts to extract a string value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a string can be extracted\n*/ function $0efeea41ca4d50b7$var$test(value) {\n    try {\n        $d1898cc3130a36e1$exports.call(value);\n        return true;\n    } catch (err) {\n        return false;\n    }\n}\n// EXPORTS //\n$0efeea41ca4d50b7$exports = $0efeea41ca4d50b7$var$test;\n\n\n// VARIABLES //\nvar $c6300c370a161ac9$var$FLG = $ad8748866c202ed6$exports();\n// MAIN //\n/**\n* Tests if a value is a string object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string object\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns false\n*/ function $c6300c370a161ac9$var$isString(value) {\n    if (typeof value === 'object') {\n        if (value instanceof String) return true;\n        if ($c6300c370a161ac9$var$FLG) return $0efeea41ca4d50b7$exports(value);\n        return $c1bcb1474c583c23$exports(value) === '[object String]';\n    }\n    return false;\n}\n// EXPORTS //\n$c6300c370a161ac9$exports = $c6300c370a161ac9$var$isString;\n\n\n// MAIN //\n/**\n* Tests if a value is a string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a string\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*/ function $dcb6c17f402af636$var$isString(value) {\n    return $cc1bfbb385362bad$exports(value) || $c6300c370a161ac9$exports(value);\n}\n// EXPORTS //\n$dcb6c17f402af636$exports = $dcb6c17f402af636$var$isString;\n\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($dcb6c17f402af636$exports, 'isPrimitive', $cc1bfbb385362bad$exports);\n$dfd4cfb9f136c5d5$exports($dcb6c17f402af636$exports, 'isObject', $c6300c370a161ac9$exports);\n// EXPORTS //\n$2a5f909076b7a477$exports = $dcb6c17f402af636$exports;\n\n\n// VARIABLES //\nvar $2f257dbaf842ff48$var$isPrimitiveArray = $90f61aea219ebb3a$exports($2a5f909076b7a477$exports.isPrimitive);\nvar $2f257dbaf842ff48$var$isObjectArray = $90f61aea219ebb3a$exports($2a5f909076b7a477$exports.isObject);\n// MAIN //\nvar $2f257dbaf842ff48$var$isStringArray = $90f61aea219ebb3a$exports($2a5f909076b7a477$exports);\n$dfd4cfb9f136c5d5$exports($2f257dbaf842ff48$var$isStringArray, 'primitives', $2f257dbaf842ff48$var$isPrimitiveArray);\n$dfd4cfb9f136c5d5$exports($2f257dbaf842ff48$var$isStringArray, 'objects', $2f257dbaf842ff48$var$isObjectArray);\n// EXPORTS //\n$2f257dbaf842ff48$exports = $2f257dbaf842ff48$var$isStringArray;\n\n\nvar $ba8711ef40fa4add$require$isStringArray = $2f257dbaf842ff48$exports.primitives;\n\nvar $ba8711ef40fa4add$require$isString = $2a5f909076b7a477$exports.isPrimitive;\n\nvar $7911d5483bd25b55$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $fc6bf7c413c52178$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $ad35ee0af2f9e50a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $894324bf8503b94f$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $894324bf8503b94f$require$isNumber = $019754bf0ce823af$exports.isPrimitive;\n\n\n\nvar $2e091ace12ecbc2e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Serializes a complex number as a string.\n*\n* @private\n* @returns {string} serialized complex number\n*/ function $2e091ace12ecbc2e$var$toString() {\n    /* eslint-disable no-invalid-this */ var str = '' + this.re;\n    if (this.im < 0) str += ' - ' + -this.im;\n    else str += ' + ' + this.im;\n    str += 'i';\n    return str;\n}\n// EXPORTS //\n$2e091ace12ecbc2e$exports = $2e091ace12ecbc2e$var$toString;\n\n\nvar $75b1db21debcd1c7$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Serializes a complex number as a JSON object.\n*\n* @private\n* @returns {Object} JSON representation\n*/ function $75b1db21debcd1c7$var$toJSON() {\n    /* eslint-disable no-invalid-this */ var out = {};\n    out.type = 'Complex128';\n    out.re = this.re;\n    out.im = this.im;\n    return out;\n}\n// EXPORTS //\n$75b1db21debcd1c7$exports = $75b1db21debcd1c7$var$toJSON;\n\n\n// MAIN //\n/**\n* 128-bit complex number constructor.\n*\n* @constructor\n* @param {number} real - real component\n* @param {number} imag - imaginary component\n* @throws {TypeError} must invoke using the `new` keyword\n* @throws {TypeError} real component must be a number\n* @throws {TypeError} imaginary component must be a number\n* @returns {Complex128} 128-bit complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n* // returns <Complex128>\n*/ function $894324bf8503b94f$var$Complex128(real, imag) {\n    if (!(this instanceof $894324bf8503b94f$var$Complex128)) throw new TypeError('invalid invocation. Constructor must be called with the `new` keyword.');\n    if (!$894324bf8503b94f$require$isNumber(real)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Real component must be a number. Value: `%s`.', real));\n    if (!$894324bf8503b94f$require$isNumber(imag)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Imaginary component must be a number. Value: `%s`.', imag));\n    $871d6b2b8d225f7e$exports(this, 're', {\n        'configurable': false,\n        'enumerable': true,\n        'writable': false,\n        'value': real\n    });\n    $871d6b2b8d225f7e$exports(this, 'im', {\n        'configurable': false,\n        'enumerable': true,\n        'writable': false,\n        'value': imag\n    });\n    return this;\n}\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var nbytes = Complex128.BYTES_PER_ELEMENT;\n* // returns 8\n*/ $dfd4cfb9f136c5d5$exports($894324bf8503b94f$var$Complex128, 'BYTES_PER_ELEMENT', 8);\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128.prototype\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var nbytes = z.BYTES_PER_ELEMENT;\n* // returns 8\n*/ $dfd4cfb9f136c5d5$exports($894324bf8503b94f$var$Complex128.prototype, 'BYTES_PER_ELEMENT', 8);\n/**\n* Length (in bytes) of a complex number.\n*\n* @name byteLength\n* @memberof Complex128.prototype\n* @type {integer}\n* @returns {integer} byte length\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var nbytes = z.byteLength;\n* // returns 16\n*/ $dfd4cfb9f136c5d5$exports($894324bf8503b94f$var$Complex128.prototype, 'byteLength', 16);\n/**\n* Serializes a complex number as a string.\n*\n* @name toString\n* @memberof Complex128.prototype\n* @type {Function}\n* @returns {string} serialized complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var str = z.toString();\n* // returns '5 + 3i'\n*/ $dfd4cfb9f136c5d5$exports($894324bf8503b94f$var$Complex128.prototype, 'toString', $2e091ace12ecbc2e$exports);\n/**\n* Serializes a complex number as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `Complex128` instance.\n*\n* @name toJSON\n* @memberof Complex128.prototype\n* @type {Function}\n* @returns {Object} serialized complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var obj = z.toJSON();\n* // returns { 'type': 'Complex128', 're': 5.0, 'im': 3.0 }\n*/ $dfd4cfb9f136c5d5$exports($894324bf8503b94f$var$Complex128.prototype, 'toJSON', $75b1db21debcd1c7$exports);\n// EXPORTS //\n$894324bf8503b94f$exports = $894324bf8503b94f$var$Complex128;\n\n\n// EXPORTS //\n$ad35ee0af2f9e50a$exports = $894324bf8503b94f$exports;\n\n\nvar $5d6f97a39db1e2b8$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $c27ada7a6a65f84c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $c27ada7a6a65f84c$require$isNumber = $019754bf0ce823af$exports.isPrimitive;\n\n\nvar $4d0919e4af4fd38a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $f8a354fe3d226513$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\nvar $f8a354fe3d226513$var$fround = typeof Math.fround === 'function' ? Math.fround : null; // eslint-disable-line stdlib/no-builtin-math\n// EXPORTS //\n$f8a354fe3d226513$exports = $f8a354fe3d226513$var$fround;\n\n\nvar $279c1404560a229e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// VARIABLES //\nvar $279c1404560a229e$var$FLOAT32_VIEW = new $26891ca0f6b1a852$exports(1);\n// MAIN //\n/**\n* Converts a double-precision floating-point number to the nearest single-precision floating-point number.\n*\n* @param {number} x - double-precision floating-point number\n* @returns {number} nearest single-precision floating-point number\n*\n* @example\n* var y = float64ToFloat32( 1.337 );\n* // returns 1.3370000123977661\n*/ function $279c1404560a229e$var$float64ToFloat32(x) {\n    $279c1404560a229e$var$FLOAT32_VIEW[0] = x;\n    return $279c1404560a229e$var$FLOAT32_VIEW[0];\n}\n// EXPORTS //\n$279c1404560a229e$exports = $279c1404560a229e$var$float64ToFloat32;\n\n\n// MAIN //\nvar $4d0919e4af4fd38a$var$float64ToFloat32;\nif (typeof $f8a354fe3d226513$exports === 'function') $4d0919e4af4fd38a$var$float64ToFloat32 = $f8a354fe3d226513$exports;\nelse $4d0919e4af4fd38a$var$float64ToFloat32 = $279c1404560a229e$exports;\n// EXPORTS //\n$4d0919e4af4fd38a$exports = $4d0919e4af4fd38a$var$float64ToFloat32;\n\n\n\nvar $22a5430236ea7416$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Serializes a complex number as a string.\n*\n* @private\n* @returns {string} serialized complex number\n*/ function $22a5430236ea7416$var$toString() {\n    /* eslint-disable no-invalid-this */ var str = '' + this.re;\n    if (this.im < 0) str += ' - ' + -this.im;\n    else str += ' + ' + this.im;\n    str += 'i';\n    return str;\n}\n// EXPORTS //\n$22a5430236ea7416$exports = $22a5430236ea7416$var$toString;\n\n\nvar $9857dd86698f86c0$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Serializes a complex number as a JSON object.\n*\n* @private\n* @returns {Object} JSON representation\n*/ function $9857dd86698f86c0$var$toJSON() {\n    /* eslint-disable no-invalid-this */ var out = {};\n    out.type = 'Complex64';\n    out.re = this.re;\n    out.im = this.im;\n    return out;\n}\n// EXPORTS //\n$9857dd86698f86c0$exports = $9857dd86698f86c0$var$toJSON;\n\n\n// MAIN //\n/**\n* 64-bit complex number constructor.\n*\n* @constructor\n* @param {number} real - real component\n* @param {number} imag - imaginary component\n* @throws {TypeError} must invoke using the `new` keyword\n* @throws {TypeError} real component must be a number\n* @throws {TypeError} imaginary component must be a number\n* @returns {Complex64} 64-bit complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n* // returns <Complex64>\n*/ function $c27ada7a6a65f84c$var$Complex64(real, imag) {\n    if (!(this instanceof $c27ada7a6a65f84c$var$Complex64)) throw new TypeError('invalid invocation. Constructor must be called with the `new` keyword.');\n    if (!$c27ada7a6a65f84c$require$isNumber(real)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Real component must be a number. Value: `%s`.', real));\n    if (!$c27ada7a6a65f84c$require$isNumber(imag)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Imaginary component must be a number. Value: `%s`.', imag));\n    $871d6b2b8d225f7e$exports(this, 're', {\n        'configurable': false,\n        'enumerable': true,\n        'writable': false,\n        'value': $4d0919e4af4fd38a$exports(real)\n    });\n    $871d6b2b8d225f7e$exports(this, 'im', {\n        'configurable': false,\n        'enumerable': true,\n        'writable': false,\n        'value': $4d0919e4af4fd38a$exports(imag)\n    });\n    return this;\n}\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var nbytes = Complex64.BYTES_PER_ELEMENT;\n* // returns 4\n*/ $dfd4cfb9f136c5d5$exports($c27ada7a6a65f84c$var$Complex64, 'BYTES_PER_ELEMENT', 4);\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64.prototype\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var nbytes = z.BYTES_PER_ELEMENT;\n* // returns 4\n*/ $dfd4cfb9f136c5d5$exports($c27ada7a6a65f84c$var$Complex64.prototype, 'BYTES_PER_ELEMENT', 4);\n/**\n* Length (in bytes) of a complex number.\n*\n* @name byteLength\n* @memberof Complex64.prototype\n* @type {integer}\n* @returns {integer} byte length\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var nbytes = z.byteLength;\n* // returns 8\n*/ $dfd4cfb9f136c5d5$exports($c27ada7a6a65f84c$var$Complex64.prototype, 'byteLength', 8);\n/**\n* Serializes a complex number as a string.\n*\n* @name toString\n* @memberof Complex64.prototype\n* @type {Function}\n* @returns {string} serialized complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var str = z.toString();\n* // returns '5 + 3i'\n*/ $dfd4cfb9f136c5d5$exports($c27ada7a6a65f84c$var$Complex64.prototype, 'toString', $22a5430236ea7416$exports);\n/**\n* Serializes a complex number as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `Complex64` instance.\n*\n* @name toJSON\n* @memberof Complex64.prototype\n* @type {Function}\n* @returns {Object} serialized complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var obj = z.toJSON();\n* // returns { 'type': 'Complex64', 're': 5.0, 'im': 3.0 }\n*/ $dfd4cfb9f136c5d5$exports($c27ada7a6a65f84c$var$Complex64.prototype, 'toJSON', $9857dd86698f86c0$exports);\n// EXPORTS //\n$c27ada7a6a65f84c$exports = $c27ada7a6a65f84c$var$Complex64;\n\n\n// EXPORTS //\n$5d6f97a39db1e2b8$exports = $c27ada7a6a65f84c$exports;\n\n\n// MAIN //\n/**\n* Tests if a value is a complex number-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex number-like object.\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var x = new Complex128( 4.0, 2.0 );\n* var bool = isComplexLike( x );\n* // returns true\n*\n* x = new Complex64( 4.0, 2.0 );\n* bool = isComplexLike( x );\n* // returns true\n*/ function $fc6bf7c413c52178$var$isComplexLike(value) {\n    if (value instanceof $ad35ee0af2f9e50a$exports || value instanceof $5d6f97a39db1e2b8$exports) return true;\n    return typeof value === 'object' && value !== null && typeof value.re === 'number' && typeof value.im === 'number';\n}\n// EXPORTS //\n$fc6bf7c413c52178$exports = $fc6bf7c413c52178$var$isComplexLike;\n\n\n// EXPORTS //\n$7911d5483bd25b55$exports = $fc6bf7c413c52178$exports;\n\n\nvar $4d1b28d3c34f95aa$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $e646dfe582277534$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Tests if a finite numeric value is an even number.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an even number\n*\n* @example\n* var bool = isEven( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isEven( -2.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( NaN );\n* // returns false\n*/ function $e646dfe582277534$var$isEven(x) {\n    return $009faf297be97aa1$exports(x / 2.0);\n}\n// EXPORTS //\n$e646dfe582277534$exports = $e646dfe582277534$var$isEven;\n\n\n// EXPORTS //\n$4d1b28d3c34f95aa$exports = $e646dfe582277534$exports;\n\n\n\nvar $c9a11eb31d8609bb$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $31f50551f46f6d2c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// VARIABLES //\nvar $31f50551f46f6d2c$var$BYTES_PER_ELEMENT = 8; // 4 bytes per float32 x (1 real + 1 imag component)\n// MAIN //\n/**\n* Returns a boolean indicating if a value is a `Complex64Array`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex64Array`\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var bool = isComplex64Array( new Complex64Array( 10 ) );\n* // returns true\n*\n* bool = isComplex64Array( [] );\n* // returns false\n*/ function $31f50551f46f6d2c$var$isComplex64Array(value) {\n    // Note: the following is not robust and that is intentional. In this case, we are seeking a lower cost way to reasonably determine whether an input value is a `Complex64Array` in order to avoid walking the prototype chain and resolving constructors, which is necessary for robust identification of cross-realm instances. For more robust validation, see `@stdlib/assert/is-complex64array`.\n    return typeof value === 'object' && value !== null && value.constructor.name === 'Complex64Array' && value.BYTES_PER_ELEMENT === $31f50551f46f6d2c$var$BYTES_PER_ELEMENT;\n}\n// EXPORTS //\n$31f50551f46f6d2c$exports = $31f50551f46f6d2c$var$isComplex64Array;\n\n\n// EXPORTS //\n$c9a11eb31d8609bb$exports = $31f50551f46f6d2c$exports;\n\n\nvar $91951cfa87e1b5e1$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $2fa13b68f2ad99a2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// VARIABLES //\nvar $2fa13b68f2ad99a2$var$BYTES_PER_ELEMENT = 16; // 8 bytes per float64 x (1 real + 1 imag component)\n// MAIN //\n/**\n* Returns a boolean indicating if a value is a `Complex128Array`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex128Array`\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var bool = isComplex128Array( new Complex128Array( 10 ) );\n* // returns true\n*\n* bool = isComplex128Array( [] );\n* // returns false\n*/ function $2fa13b68f2ad99a2$var$isComplex128Array(value) {\n    // Note: the following is not robust and that is intentional. In this case, we are seeking a lower cost way to reasonably determine whether an input value is a `Complex128Array` in order to avoid walking the prototype chain and resolving constructors, which is necessary for robust identification of cross-realm instances. For more robust validation, see `@stdlib/assert/is-complex128array`.\n    return typeof value === 'object' && value !== null && value.constructor.name === 'Complex128Array' && value.BYTES_PER_ELEMENT === $2fa13b68f2ad99a2$var$BYTES_PER_ELEMENT;\n}\n// EXPORTS //\n$2fa13b68f2ad99a2$exports = $2fa13b68f2ad99a2$var$isComplex128Array;\n\n\n// EXPORTS //\n$91951cfa87e1b5e1$exports = $2fa13b68f2ad99a2$exports;\n\n\nvar $d1469be5794ac8a0$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $56c4eff70058e371$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n// MAIN //\n/**\n* Tests for native `Symbol.iterator` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol.iterator` support\n*\n* @example\n* var bool = hasIteratorSymbolSupport();\n* // returns <boolean>\n*/ function $56c4eff70058e371$var$hasIteratorSymbolSupport() {\n    return typeof $3d8926390533d7c3$exports === 'function' && typeof $3d8926390533d7c3$exports('foo') === 'symbol' && $5a7912bad9882251$exports($3d8926390533d7c3$exports, 'iterator') && typeof $3d8926390533d7c3$exports.iterator === 'symbol';\n}\n// EXPORTS //\n$56c4eff70058e371$exports = $56c4eff70058e371$var$hasIteratorSymbolSupport;\n\n\n// EXPORTS //\n$d1469be5794ac8a0$exports = $56c4eff70058e371$exports;\n\n\nvar $b1dd39231526b140$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $0f047d7c477bb880$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Iterator symbol.\n*\n* @name IteratorSymbol\n* @constant\n* @type {(symbol|null)}\n*\n* @example\n* function iterator() {\n*     var it;\n*     var i;\n*\n*     i = -1;\n*\n*     it = {};\n*     it.next = next;\n*     it.return = done;\n*\n*     if ( IteratorSymbol ) {\n*         it[ IteratorSymbol ] = iterator;\n*     }\n*     return it;\n*\n*     function next() {\n*         i += 1;\n*         return {\n*             'value': i,\n*             'done': false\n*         };\n*     }\n*\n*     function done( value ) {\n*         if ( arguments.length === 0 ) {\n*             return {\n*                 'done': true\n*             };\n*         }\n*         return {\n*             'value': value,\n*             'done': true\n*         };\n*     }\n* }\n*\n* var obj = iterator();\n*/ var $0f047d7c477bb880$var$IteratorSymbol = $d1469be5794ac8a0$exports() ? Symbol.iterator : null;\n// EXPORTS //\n$0f047d7c477bb880$exports = $0f047d7c477bb880$var$IteratorSymbol;\n\n\n// EXPORTS //\n$b1dd39231526b140$exports = $0f047d7c477bb880$exports;\n\n\n\n\n\n\n\nvar $efb2d5190b246528$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $c301cd259ffcbfc8$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Returns the real component of a single-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} real component\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var re = real( z );\n* // returns 5.0\n*/ function $c301cd259ffcbfc8$var$real(z) {\n    return z.re;\n}\n// EXPORTS //\n$c301cd259ffcbfc8$exports = $c301cd259ffcbfc8$var$real;\n\n\n// EXPORTS //\n$efb2d5190b246528$exports = $c301cd259ffcbfc8$exports;\n\n\nvar $fc26d261a528b8b0$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $f8794b441b652dc9$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Returns the imaginary component of a single-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} imaginary component\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var im = imag( z );\n* // returns 3.0\n*/ function $f8794b441b652dc9$var$imag(z) {\n    return z.im;\n}\n// EXPORTS //\n$f8794b441b652dc9$exports = $f8794b441b652dc9$var$imag;\n\n\n// EXPORTS //\n$fc26d261a528b8b0$exports = $f8794b441b652dc9$exports;\n\n\n\nvar $5d2756b8cde44db9$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $514141df0d7d6f79$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Reinterprets a `Complex64Array` as a `Float32Array`.\n*\n* @param {Complex64Array} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Float32Array} `Float32Array` view\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var x = new Complex64Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float32Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/ function $514141df0d7d6f79$var$reinterpret(x, offset) {\n    return new $26891ca0f6b1a852$exports(x.buffer, x.byteOffset + x.BYTES_PER_ELEMENT * offset, 2 * (x.length - offset)); // eslint-disable-line max-len\n}\n// EXPORTS //\n$514141df0d7d6f79$exports = $514141df0d7d6f79$var$reinterpret;\n\n\n// EXPORTS //\n$5d2756b8cde44db9$exports = $514141df0d7d6f79$exports;\n\n\nvar $88d548af1d36ede9$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $226599221ca0bc5b$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Reinterprets a `Complex128Array` as a `Float64Array`.\n*\n* @param {Complex128Array} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Float64Array} `Float64Array` view\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var x = new Complex128Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float64Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/ function $226599221ca0bc5b$var$reinterpret(x, offset) {\n    return new $688bf0eeb5997346$exports(x.buffer, x.byteOffset + x.BYTES_PER_ELEMENT * offset, 2 * (x.length - offset)); // eslint-disable-line max-len\n}\n// EXPORTS //\n$226599221ca0bc5b$exports = $226599221ca0bc5b$var$reinterpret;\n\n\n// EXPORTS //\n$88d548af1d36ede9$exports = $226599221ca0bc5b$exports;\n\n\n\n\nvar $d3702300d1b0ec4b$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n\n\n\n// MAIN //\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/ function $d3702300d1b0ec4b$var$fromIterator(it) {\n    var out;\n    var v;\n    var z;\n    out = [];\n    while(true){\n        v = it.next();\n        if (v.done) break;\n        z = v.value;\n        if ($121906abae93f5cb$exports(z) && z.length >= 2) out.push(z[0], z[1]);\n        else if ($7911d5483bd25b55$exports(z)) out.push($efb2d5190b246528$exports(z), $fc26d261a528b8b0$exports(z));\n        else return new TypeError($5a5504e40381a222$exports('invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z));\n    }\n    return out;\n}\n// EXPORTS //\n$d3702300d1b0ec4b$exports = $d3702300d1b0ec4b$var$fromIterator;\n\n\nvar $1db2d3f49940dca5$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n\n\n\n// MAIN //\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/ function $1db2d3f49940dca5$var$fromIteratorMap(it, clbk, thisArg) {\n    var out;\n    var v;\n    var z;\n    var i;\n    out = [];\n    i = -1;\n    while(true){\n        v = it.next();\n        if (v.done) break;\n        i += 1;\n        z = clbk.call(thisArg, v.value, i);\n        if ($121906abae93f5cb$exports(z) && z.length >= 2) out.push(z[0], z[1]);\n        else if ($7911d5483bd25b55$exports(z)) out.push($efb2d5190b246528$exports(z), $fc26d261a528b8b0$exports(z));\n        else return new TypeError($5a5504e40381a222$exports('invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z));\n    }\n    return out;\n}\n// EXPORTS //\n$1db2d3f49940dca5$exports = $1db2d3f49940dca5$var$fromIteratorMap;\n\n\nvar $505d21a179225210$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n\n// MAIN //\n/**\n* Returns a strided array of real and imaginary components.\n*\n* @private\n* @param {Float32Array} buf - output array\n* @param {Array} arr - array containing complex numbers\n* @returns {(Float32Array|null)} output array or null\n*/ function $505d21a179225210$var$fromArray(buf, arr) {\n    var len;\n    var v;\n    var i;\n    var j;\n    len = arr.length;\n    j = 0;\n    for(i = 0; i < len; i++){\n        v = arr[i];\n        if (!$7911d5483bd25b55$exports(v)) return null;\n        buf[j] = $efb2d5190b246528$exports(v);\n        buf[j + 1] = $fc26d261a528b8b0$exports(v);\n        j += 2; // stride\n    }\n    return buf;\n}\n// EXPORTS //\n$505d21a179225210$exports = $505d21a179225210$var$fromArray;\n\n\n// VARIABLES //\nvar $ba8711ef40fa4add$var$BYTES_PER_ELEMENT = $26891ca0f6b1a852$exports.BYTES_PER_ELEMENT * 2;\nvar $ba8711ef40fa4add$var$HAS_ITERATOR_SYMBOL = $d1469be5794ac8a0$exports();\n// FUNCTIONS //\n/**\n* Returns a boolean indicating if a value is a complex typed array.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*/ function $ba8711ef40fa4add$var$isComplexArray(value) {\n    return value instanceof $ba8711ef40fa4add$var$Complex64Array || typeof value === 'object' && value !== null && (value.constructor.name === 'Complex64Array' || value.constructor.name === 'Complex128Array') && typeof value._length === 'number' && // eslint-disable-line no-underscore-dangle\n    // NOTE: we don't perform a more rigorous test here for a typed array for performance reasons, as robustly checking for a typed array instance could require walking the prototype tree and performing relatively expensive constructor checks...\n    typeof value._buffer === 'object' // eslint-disable-line no-underscore-dangle\n    ;\n}\n/**\n* Returns a boolean indicating if a value is a complex typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array constructor\n*/ function $ba8711ef40fa4add$var$isComplexArrayConstructor(value) {\n    return value === $ba8711ef40fa4add$var$Complex64Array || // NOTE: weaker test in order to avoid a circular dependency with Complex128Array...\n    value.name === 'Complex128Array';\n}\n/**\n* Retrieves a complex number from a complex number array buffer.\n*\n* @private\n* @param {Float32Array} buf - array buffer\n* @param {NonNegativeInteger} idx - element index\n* @returns {Complex64} complex number\n*/ function $ba8711ef40fa4add$var$getComplex64(buf, idx) {\n    idx *= 2;\n    return new $5d6f97a39db1e2b8$exports(buf[idx], buf[idx + 1]);\n}\n// MAIN //\n/**\n* 64-bit complex number array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or an iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {RangeError} ArrayBuffer byte length must be a multiple of `8`\n* @throws {RangeError} array-like object and typed array input arguments must have a length which is a multiple of two\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} byte offset must be a multiple of `8`\n* @throws {TypeError} view length must be a positive multiple of `8`\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex64Array} complex number array\n*\n* @example\n* var arr = new Complex64Array();\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Complex64Array( 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Complex64Array( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf, 8 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex64Array( buf, 8, 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/ function $ba8711ef40fa4add$var$Complex64Array() {\n    var byteOffset;\n    var nargs;\n    var buf;\n    var len;\n    nargs = arguments.length;\n    if (!(this instanceof $ba8711ef40fa4add$var$Complex64Array)) {\n        if (nargs === 0) return new $ba8711ef40fa4add$var$Complex64Array();\n        if (nargs === 1) return new $ba8711ef40fa4add$var$Complex64Array(arguments[0]);\n        if (nargs === 2) return new $ba8711ef40fa4add$var$Complex64Array(arguments[0], arguments[1]);\n        return new $ba8711ef40fa4add$var$Complex64Array(arguments[0], arguments[1], arguments[2]);\n    }\n    // Create the underlying data buffer...\n    if (nargs === 0) buf = new $26891ca0f6b1a852$exports(0); // backward-compatibility\n    else if (nargs === 1) {\n        if ($ba8711ef40fa4add$require$isNonNegativeInteger(arguments[0])) buf = new $26891ca0f6b1a852$exports(arguments[0] * 2);\n        else if ($b52cee4fbc0f7b72$exports(arguments[0])) {\n            buf = arguments[0];\n            len = buf.length;\n            // If provided a \"generic\" array, peak at the first value, and, if the value is a complex number, try to process as an array of complex numbers, falling back to \"normal\" typed array initialization if we fail and ensuring consistency if the first value had not been a complex number...\n            if (len && $5ebc6df234db68eb$exports(buf) && $7911d5483bd25b55$exports(buf[0])) {\n                buf = $505d21a179225210$exports(new $26891ca0f6b1a852$exports(len * 2), buf);\n                if (buf === null) {\n                    // We failed and we are now forced to allocate a new array :-(\n                    if (!$4d1b28d3c34f95aa$exports(len)) throw new RangeError($5a5504e40381a222$exports('invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', len));\n                    // We failed, so fall back to directly setting values...\n                    buf = new $26891ca0f6b1a852$exports(arguments[0]);\n                }\n            } else {\n                if ($c9a11eb31d8609bb$exports(buf)) buf = $5d2756b8cde44db9$exports(buf, 0);\n                else if ($91951cfa87e1b5e1$exports(buf)) buf = $88d548af1d36ede9$exports(buf, 0);\n                else if (!$4d1b28d3c34f95aa$exports(len)) throw new RangeError($5a5504e40381a222$exports('invalid argument. Array-like object and typed array arguments must have a length which is a multiple of two. Length: `%u`.', len));\n                buf = new $26891ca0f6b1a852$exports(buf);\n            }\n        } else if ($0c6292c314072f8d$exports(arguments[0])) {\n            buf = arguments[0];\n            if (!$009faf297be97aa1$exports(buf.byteLength / $ba8711ef40fa4add$var$BYTES_PER_ELEMENT)) throw new RangeError($5a5504e40381a222$exports('invalid argument. ArrayBuffer byte length must be a multiple of %u. Byte length: `%u`.', $ba8711ef40fa4add$var$BYTES_PER_ELEMENT, buf.byteLength));\n            buf = new $26891ca0f6b1a852$exports(buf);\n        } else if ($01b2bacec2990d67$exports(arguments[0])) {\n            buf = arguments[0];\n            if ($ba8711ef40fa4add$var$HAS_ITERATOR_SYMBOL === false) throw new TypeError($5a5504e40381a222$exports('invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', buf));\n            if (!$39cac8b951c1ded2$exports(buf[$b1dd39231526b140$exports])) throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf));\n            buf = buf[$b1dd39231526b140$exports]();\n            if (!$39cac8b951c1ded2$exports(buf.next)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf)); // FIXME: `buf` is what is returned from above, NOT the original value\n            buf = $d3702300d1b0ec4b$exports(buf);\n            if (buf instanceof Error) throw buf;\n            buf = new $26891ca0f6b1a852$exports(buf);\n        } else throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arguments[0]));\n    } else {\n        buf = arguments[0];\n        if (!$0c6292c314072f8d$exports(buf)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf));\n        byteOffset = arguments[1];\n        if (!$ba8711ef40fa4add$require$isNonNegativeInteger(byteOffset)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset));\n        if (!$009faf297be97aa1$exports(byteOffset / $ba8711ef40fa4add$var$BYTES_PER_ELEMENT)) throw new RangeError($5a5504e40381a222$exports('invalid argument. Byte offset must be a multiple of %u. Value: `%u`.', $ba8711ef40fa4add$var$BYTES_PER_ELEMENT, byteOffset));\n        if (nargs === 2) {\n            len = buf.byteLength - byteOffset;\n            if (!$009faf297be97aa1$exports(len / $ba8711ef40fa4add$var$BYTES_PER_ELEMENT)) throw new RangeError($5a5504e40381a222$exports('invalid arguments. ArrayBuffer view byte length must be a multiple of %u. View byte length: `%u`.', $ba8711ef40fa4add$var$BYTES_PER_ELEMENT, len));\n            buf = new $26891ca0f6b1a852$exports(buf, byteOffset);\n        } else {\n            len = arguments[2];\n            if (!$ba8711ef40fa4add$require$isNonNegativeInteger(len)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Length must be a nonnegative integer. Value: `%s`.', len));\n            if (len * $ba8711ef40fa4add$var$BYTES_PER_ELEMENT > buf.byteLength - byteOffset) throw new RangeError($5a5504e40381a222$exports('invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len * $ba8711ef40fa4add$var$BYTES_PER_ELEMENT));\n            buf = new $26891ca0f6b1a852$exports(buf, byteOffset, len * 2);\n        }\n    }\n    $dfd4cfb9f136c5d5$exports(this, '_buffer', buf);\n    $dfd4cfb9f136c5d5$exports(this, '_length', buf.length / 2);\n    return this;\n}\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64Array\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var nbytes = Complex64Array.BYTES_PER_ELEMENT;\n* // returns 8\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array, 'BYTES_PER_ELEMENT', $ba8711ef40fa4add$var$BYTES_PER_ELEMENT);\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Complex64Array\n* @readonly\n* @type {string}\n* @default 'Complex64Array'\n*\n* @example\n* var str = Complex64Array.name;\n* // returns 'Complex64Array'\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array, 'name', 'Complex64Array');\n/**\n* Creates a new 64-bit complex number array from an array-like object or an iterable.\n*\n* @name from\n* @memberof Complex64Array\n* @type {Function}\n* @param {(Collection|Iterable)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @throws {TypeError} when provided an iterator, a callback must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex64Array} 64-bit complex number array\n*\n* @example\n* var arr = Complex64Array.from( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var arr = Complex64Array.from( [ new Complex64( 1.0, 1.0 ) ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function clbk( v ) {\n*     return new Complex64( realf(v)*2.0, imagf(v)*2.0 );\n* }\n*\n* var arr = Complex64Array.from( [ new Complex64( 1.0, 1.0 ) ], clbk );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array, 'from', function from(src) {\n    var thisArg;\n    var nargs;\n    var clbk;\n    var out;\n    var buf;\n    var tmp;\n    var get;\n    var len;\n    var flg;\n    var v;\n    var i;\n    var j;\n    if (!$39cac8b951c1ded2$exports(this)) throw new TypeError('invalid invocation. `this` context must be a constructor.');\n    if (!$ba8711ef40fa4add$var$isComplexArrayConstructor(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    nargs = arguments.length;\n    if (nargs > 1) {\n        clbk = arguments[1];\n        if (!$39cac8b951c1ded2$exports(clbk)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be a function. Value: `%s`.', clbk));\n        if (nargs > 2) thisArg = arguments[2];\n    }\n    if ($ba8711ef40fa4add$var$isComplexArray(src)) {\n        len = src.length;\n        if (clbk) {\n            out = new this(len);\n            buf = out._buffer; // eslint-disable-line no-underscore-dangle\n            j = 0;\n            for(i = 0; i < len; i++){\n                v = clbk.call(thisArg, src.get(i), i);\n                if ($7911d5483bd25b55$exports(v)) {\n                    buf[j] = $efb2d5190b246528$exports(v);\n                    buf[j + 1] = $fc26d261a528b8b0$exports(v);\n                } else if ($121906abae93f5cb$exports(v) && v.length >= 2) {\n                    buf[j] = v[0];\n                    buf[j + 1] = v[1];\n                } else throw new TypeError($5a5504e40381a222$exports('invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v));\n                j += 2; // stride\n            }\n            return out;\n        }\n        return new this(src);\n    }\n    if ($b52cee4fbc0f7b72$exports(src)) {\n        if (clbk) {\n            // Note: array contents affect how we iterate over a provided data source. If only complex number objects, we can extract real and imaginary components. Otherwise, for non-complex number arrays (e.g., `Float64Array`, etc), we assume a strided array where real and imaginary components are interleaved. In the former case, we expect a callback to return real and imaginary components (possibly as a complex number). In the latter case, we expect a callback to return *either* a real or imaginary component.\n            len = src.length;\n            if (src.get && src.set) get = $dfd66f945cb96da9$exports('default');\n            else get = $88f5ca10627f0cae$exports('default');\n            // Detect whether we've been provided an array which returns complex number objects...\n            for(i = 0; i < len; i++)if (!$7911d5483bd25b55$exports(get(src, i))) {\n                flg = true;\n                break;\n            }\n            // If an array does not contain only complex number objects, then we assume interleaved real and imaginary components...\n            if (flg) {\n                if (!$4d1b28d3c34f95aa$exports(len)) throw new RangeError($5a5504e40381a222$exports('invalid argument. First argument must have a length which is a multiple of %u. Length: `%u`.', 2, len));\n                out = new this(len / 2);\n                buf = out._buffer; // eslint-disable-line no-underscore-dangle\n                for(i = 0; i < len; i++)buf[i] = clbk.call(thisArg, get(src, i), i);\n                return out;\n            }\n            // If an array contains only complex number objects, then we need to extract real and imaginary components...\n            out = new this(len);\n            buf = out._buffer; // eslint-disable-line no-underscore-dangle\n            j = 0;\n            for(i = 0; i < len; i++){\n                v = clbk.call(thisArg, get(src, i), i);\n                if ($7911d5483bd25b55$exports(v)) {\n                    buf[j] = $efb2d5190b246528$exports(v);\n                    buf[j + 1] = $fc26d261a528b8b0$exports(v);\n                } else if ($121906abae93f5cb$exports(v) && v.length >= 2) {\n                    buf[j] = v[0];\n                    buf[j + 1] = v[1];\n                } else throw new TypeError($5a5504e40381a222$exports('invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v));\n                j += 2; // stride\n            }\n            return out;\n        }\n        return new this(src);\n    }\n    if ($01b2bacec2990d67$exports(src) && $ba8711ef40fa4add$var$HAS_ITERATOR_SYMBOL && $39cac8b951c1ded2$exports(src[$b1dd39231526b140$exports])) {\n        buf = src[$b1dd39231526b140$exports]();\n        if (!$39cac8b951c1ded2$exports(buf.next)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src));\n        if (clbk) tmp = $1db2d3f49940dca5$exports(buf, clbk, thisArg);\n        else tmp = $d3702300d1b0ec4b$exports(buf);\n        if (tmp instanceof Error) throw tmp;\n        len = tmp.length / 2;\n        out = new this(len);\n        buf = out._buffer; // eslint-disable-line no-underscore-dangle\n        for(i = 0; i < len; i++)buf[i] = tmp[i];\n        return out;\n    }\n    throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src));\n});\n/**\n* Creates a new 64-bit complex number array from a variable number of arguments.\n*\n* @name of\n* @memberof Complex64Array\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} 64-bit complex number array\n*\n* @example\n* var arr = Complex64Array.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array, 'of', function of() {\n    var args;\n    var i;\n    if (!$39cac8b951c1ded2$exports(this)) throw new TypeError('invalid invocation. `this` context must be a constructor.');\n    if (!$ba8711ef40fa4add$var$isComplexArrayConstructor(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    args = [];\n    for(i = 0; i < arguments.length; i++)args.push(arguments[i]);\n    return new this(args);\n});\n/**\n* Returns an array element with support for both nonnegative and negative integer indices.\n*\n* @name at\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide an integer\n* @returns {(Complex64|void)} array element\n*\n* @example\n* var arr = new Complex64Array( 10 );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var z = arr.at( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 9.0, -9.0 ], 9 );\n*\n* z = arr.at( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*\n* z = arr.at( -1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 9.0\n*\n* im = imagf( z );\n* // returns -9.0\n*\n* z = arr.at( 100 );\n* // returns undefined\n*\n* z = arr.at( -100 );\n* // returns undefined\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'at', function at(idx) {\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$009faf297be97aa1$exports(idx)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide an integer. Value: `%s`.', idx));\n    if (idx < 0) idx += this._length;\n    if (idx < 0 || idx >= this._length) return;\n    return $ba8711ef40fa4add$var$getComplex64(this._buffer, idx);\n});\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/ $a4444f7456e1c73a$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'buffer', function get() {\n    return this._buffer.buffer;\n});\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 80\n*/ $a4444f7456e1c73a$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'byteLength', function get() {\n    return this._buffer.byteLength;\n});\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/ $a4444f7456e1c73a$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'byteOffset', function get() {\n    return this._buffer.byteOffset;\n});\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 8\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'BYTES_PER_ELEMENT', $ba8711ef40fa4add$var$Complex64Array.BYTES_PER_ELEMENT);\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} modified array\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( 4 );\n*\n* // Set the array elements:\n* arr.set( new Complex64( 1.0, 1.0 ), 0 );\n* arr.set( new Complex64( 2.0, 2.0 ), 1 );\n* arr.set( new Complex64( 3.0, 3.0 ), 2 );\n* arr.set( new Complex64( 4.0, 4.0 ), 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* // Get the last array element:\n* var z = arr.get( 3 );\n*\n* var re = realf( z );\n* // returns 2.0\n*\n* var im = imagf( z );\n* // returns 2.0\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'copyWithin', function copyWithin(target, start) {\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    // FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n    if (arguments.length === 2) this._buffer.copyWithin(target * 2, start * 2);\n    else this._buffer.copyWithin(target * 2, start * 2, arguments[2] * 2);\n    return this;\n});\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var arr = [\n*     new Complex64( 1.0, 1.0 ),\n*     new Complex64( 2.0, 2.0 ),\n*     new Complex64( 3.0, 3.0 )\n* ];\n* arr = new Complex64Array( arr );\n*\n* // Create an iterator:\n* var it = arr.entries();\n*\n* // Iterate over the key-value pairs...\n* var v = it.next().value;\n* // returns [ 0, <Complex64> ]\n*\n* v = it.next().value;\n* // returns [ 1, <Complex64> ]\n*\n* v = it.next().value;\n* // returns [ 2, <Complex64> ]\n*\n* var bool = it.next().done;\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'entries', function entries() {\n    var self;\n    var iter;\n    var len;\n    var buf;\n    var FLG;\n    var i;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    self = this;\n    buf = this._buffer;\n    len = this._length;\n    // Initialize an iteration index:\n    i = -1;\n    // Create an iterator protocol-compliant object:\n    iter = {};\n    $dfd4cfb9f136c5d5$exports(iter, 'next', next);\n    $dfd4cfb9f136c5d5$exports(iter, 'return', end);\n    if ($b1dd39231526b140$exports) $dfd4cfb9f136c5d5$exports(iter, $b1dd39231526b140$exports, factory);\n    return iter;\n    /**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function next() {\n        i += 1;\n        if (FLG || i >= len) return {\n            'done': true\n        };\n        return {\n            'value': [\n                i,\n                $ba8711ef40fa4add$var$getComplex64(buf, i)\n            ],\n            'done': false\n        };\n    }\n    /**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function end(value) {\n        FLG = true;\n        if (arguments.length) return {\n            'value': value,\n            'done': true\n        };\n        return {\n            'done': true\n        };\n    }\n    /**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/ function factory() {\n        return self.entries();\n    }\n});\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function.\n*\n* @name every\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var bool = arr.every( predicate );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'every', function every(predicate, thisArg) {\n    var buf;\n    var i;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++){\n        if (!predicate.call(thisArg, $ba8711ef40fa4add$var$getComplex64(buf, i), i, this)) return false;\n    }\n    return true;\n});\n/**\n* Returns a modified typed array filled with a fill value.\n*\n* @name fill\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {ComplexLike} value - fill value\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @throws {TypeError} third argument must be an integer\n* @returns {Complex64Array} modified array\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.fill( new Complex64( 1.0, 1.0 ), 1 );\n*\n* var z = arr.get( 1 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns 1.0\n*\n* z = arr.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns 1.0\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'fill', function fill(value, start, end) {\n    var buf;\n    var len;\n    var idx;\n    var re;\n    var im;\n    var i;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$7911d5483bd25b55$exports(value)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a complex number. Value: `%s`.', value));\n    buf = this._buffer;\n    len = this._length;\n    if (arguments.length > 1) {\n        if (!$009faf297be97aa1$exports(start)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', start));\n        if (start < 0) {\n            start += len;\n            if (start < 0) start = 0;\n        }\n        if (arguments.length > 2) {\n            if (!$009faf297be97aa1$exports(end)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Third argument must be an integer. Value: `%s`.', end));\n            if (end < 0) {\n                end += len;\n                if (end < 0) end = 0;\n            }\n            if (end > len) end = len;\n        } else end = len;\n    } else {\n        start = 0;\n        end = len;\n    }\n    re = $efb2d5190b246528$exports(value);\n    im = $fc26d261a528b8b0$exports(value);\n    for(i = start; i < end; i++){\n        idx = 2 * i;\n        buf[idx] = re;\n        buf[idx + 1] = im;\n    }\n    return this;\n});\n/**\n* Returns a new array containing the elements of an array which pass a test implemented by a predicate function.\n*\n* @name filter\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex64Array} complex number array\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var out = arr.filter( predicate );\n* // returns <Complex64Array>\n*\n* var len = out.length;\n* // returns 1\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 2.0\n*\n* var im = imagf( z );\n* // returns 2.0\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'filter', function filter(predicate, thisArg) {\n    var buf;\n    var out;\n    var i;\n    var z;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    out = [];\n    for(i = 0; i < this._length; i++){\n        z = $ba8711ef40fa4add$var$getComplex64(buf, i);\n        if (predicate.call(thisArg, z, i, this)) out.push(z);\n    }\n    return new this.constructor(out);\n});\n/**\n* Returns the first element in an array for which a predicate function returns a truthy value.\n*\n* @name find\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {(Complex64|void)} array element or undefined\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.find( predicate );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns 1.0\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'find', function find(predicate, thisArg) {\n    var buf;\n    var i;\n    var z;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++){\n        z = $ba8711ef40fa4add$var$getComplex64(buf, i);\n        if (predicate.call(thisArg, z, i, this)) return z;\n    }\n});\n/**\n* Returns the index of the first element in an array for which a predicate function returns a truthy value.\n*\n* @name findIndex\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var idx = arr.findIndex( predicate );\n* // returns 2\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'findIndex', function findIndex(predicate, thisArg) {\n    var buf;\n    var i;\n    var z;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++){\n        z = $ba8711ef40fa4add$var$getComplex64(buf, i);\n        if (predicate.call(thisArg, z, i, this)) return i;\n    }\n    return -1;\n});\n/**\n* Returns the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLast\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {(Complex64|void)} array element or undefined\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.findLast( predicate );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 3.0\n*\n* var im = imagf( z );\n* // returns 3.0\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'findLast', function findLast(predicate, thisArg) {\n    var buf;\n    var i;\n    var z;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = this._length - 1; i >= 0; i--){\n        z = $ba8711ef40fa4add$var$getComplex64(buf, i);\n        if (predicate.call(thisArg, z, i, this)) return z;\n    }\n});\n/**\n* Returns the index of the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLastIndex\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var idx = arr.findLastIndex( predicate );\n* // returns 1\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'findLastIndex', function findLastIndex(predicate, thisArg) {\n    var buf;\n    var i;\n    var z;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = this._length - 1; i >= 0; i--){\n        z = $ba8711ef40fa4add$var$getComplex64(buf, i);\n        if (predicate.call(thisArg, z, i, this)) return i;\n    }\n    return -1;\n});\n/**\n* Invokes a function once for each array element.\n*\n* @name forEach\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - function invocation context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* function log( v, i ) {\n*     console.log( '%s: %s', i, v.toString() );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* arr.forEach( log );\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'forEach', function forEach(fcn, thisArg) {\n    var buf;\n    var i;\n    var z;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(fcn)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', fcn));\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++){\n        z = $ba8711ef40fa4add$var$getComplex64(buf, i);\n        fcn.call(thisArg, z, i, this);\n    }\n});\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(Complex64|void)} array element\n*\n* @example\n* var arr = new Complex64Array( 10 );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var z = arr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*\n* z = arr.get( 100 );\n* // returns undefined\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'get', function get(idx) {\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$ba8711ef40fa4add$require$isNonNegativeInteger(idx)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx));\n    if (idx >= this._length) return;\n    return $ba8711ef40fa4add$var$getComplex64(this._buffer, idx);\n});\n/**\n* Returns a boolean indicating whether an array includes a provided value.\n*\n* @name includes\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - search element\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {boolean} boolean indicating whether an array includes a provided value\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var arr = new Complex64Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var bool = arr.includes( new Complex64( 3.0, -3.0 ) );\n* // returns true\n*\n* bool = arr.includes( new Complex64( 3.0, -3.0 ), 3 );\n* // returns false\n*\n* bool = arr.includes( new Complex64( 4.0, -4.0 ), -3 );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'includes', function includes(searchElement, fromIndex) {\n    var buf;\n    var idx;\n    var re;\n    var im;\n    var i;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$7911d5483bd25b55$exports(searchElement)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a complex number. Value: `%s`.', searchElement));\n    if (arguments.length > 1) {\n        if (!$009faf297be97aa1$exports(fromIndex)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex));\n        if (fromIndex < 0) {\n            fromIndex += this._length;\n            if (fromIndex < 0) fromIndex = 0;\n        }\n    } else fromIndex = 0;\n    re = $efb2d5190b246528$exports(searchElement);\n    im = $fc26d261a528b8b0$exports(searchElement);\n    buf = this._buffer;\n    for(i = fromIndex; i < this._length; i++){\n        idx = 2 * i;\n        if (re === buf[idx] && im === buf[idx + 1]) return true;\n    }\n    return false;\n});\n/**\n* Returns the first index at which a given element can be found.\n*\n* @name indexOf\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - element to find\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var arr = new Complex64Array( 10 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var idx = arr.indexOf( new Complex64( 3.0, -3.0 ) );\n* // returns 2\n*\n* idx = arr.indexOf( new Complex64( 3.0, -3.0 ), 3 );\n* // returns -1\n*\n* idx = arr.indexOf( new Complex64( 4.0, -4.0 ), -3 );\n* // returns -1\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'indexOf', function indexOf(searchElement, fromIndex) {\n    var buf;\n    var idx;\n    var re;\n    var im;\n    var i;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$7911d5483bd25b55$exports(searchElement)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a complex number. Value: `%s`.', searchElement));\n    if (arguments.length > 1) {\n        if (!$009faf297be97aa1$exports(fromIndex)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex));\n        if (fromIndex < 0) {\n            fromIndex += this._length;\n            if (fromIndex < 0) fromIndex = 0;\n        }\n    } else fromIndex = 0;\n    re = $efb2d5190b246528$exports(searchElement);\n    im = $fc26d261a528b8b0$exports(searchElement);\n    buf = this._buffer;\n    for(i = fromIndex; i < this._length; i++){\n        idx = 2 * i;\n        if (re === buf[idx] && im === buf[idx + 1]) return i;\n    }\n    return -1;\n});\n/**\n* Returns a new string by concatenating all array elements.\n*\n* @name join\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {string} [separator=','] - element separator\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a string\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.join();\n* // returns '1 + 1i,2 + 2i'\n*\n* str = arr.join( '/' );\n* // returns '1 + 1i/2 + 2i'\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'join', function join(separator) {\n    var out;\n    var buf;\n    var sep;\n    var i;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (arguments.length === 0) sep = ',';\n    else if ($ba8711ef40fa4add$require$isString(separator)) sep = separator;\n    else throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a string. Value: `%s`.', separator));\n    out = [];\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++)out.push($ba8711ef40fa4add$var$getComplex64(buf, i).toString());\n    return out.join(sep);\n});\n/**\n* Returns an iterator for iterating over each index key in a typed array.\n*\n* @name keys\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var iter = arr.keys();\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* var bool = iter.next().done;\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'keys', function keys() {\n    var self;\n    var iter;\n    var len;\n    var FLG;\n    var i;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    self = this;\n    len = this._length;\n    // Initialize an iteration index:\n    i = -1;\n    // Create an iterator protocol-compliant object:\n    iter = {};\n    $dfd4cfb9f136c5d5$exports(iter, 'next', next);\n    $dfd4cfb9f136c5d5$exports(iter, 'return', end);\n    if ($b1dd39231526b140$exports) $dfd4cfb9f136c5d5$exports(iter, $b1dd39231526b140$exports, factory);\n    return iter;\n    /**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function next() {\n        i += 1;\n        if (FLG || i >= len) return {\n            'done': true\n        };\n        return {\n            'value': i,\n            'done': false\n        };\n    }\n    /**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function end(value) {\n        FLG = true;\n        if (arguments.length) return {\n            'value': value,\n            'done': true\n        };\n        return {\n            'done': true\n        };\n    }\n    /**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/ function factory() {\n        return self.keys();\n    }\n});\n/**\n* Returns the last index at which a given element can be found.\n*\n* @name lastIndexOf\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - element to find\n* @param {integer} [fromIndex] - index at which to start searching backward (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var arr = new Complex64Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 3.0, -3.0 ], 4 );\n*\n* var idx = arr.lastIndexOf( new Complex64( 3.0, -3.0 ) );\n* // returns 4\n*\n* idx = arr.lastIndexOf( new Complex64( 3.0, -3.0 ), 3 );\n* // returns 2\n*\n* idx = arr.lastIndexOf( new Complex64( 5.0, -5.0 ), 3 );\n* // returns -1\n*\n* idx = arr.lastIndexOf( new Complex64( 2.0, -2.0 ), -3 );\n* // returns 1\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'lastIndexOf', function lastIndexOf(searchElement, fromIndex) {\n    var buf;\n    var idx;\n    var re;\n    var im;\n    var i;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$7911d5483bd25b55$exports(searchElement)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a complex number. Value: `%s`.', searchElement));\n    if (arguments.length > 1) {\n        if (!$009faf297be97aa1$exports(fromIndex)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex));\n        if (fromIndex >= this._length) fromIndex = this._length - 1;\n        else if (fromIndex < 0) fromIndex += this._length;\n    } else fromIndex = this._length - 1;\n    re = $efb2d5190b246528$exports(searchElement);\n    im = $fc26d261a528b8b0$exports(searchElement);\n    buf = this._buffer;\n    for(i = fromIndex; i >= 0; i--){\n        idx = 2 * i;\n        if (re === buf[idx] && im === buf[idx + 1]) return i;\n    }\n    return -1;\n});\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/ $a4444f7456e1c73a$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'length', function get() {\n    return this._length;\n});\n/**\n* Returns a new array with each element being the result of a provided callback function.\n*\n* @name map\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} fcn - callback function\n* @param {*} [thisArg] - callback function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex64Array} complex number array\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function scale( v, i ) {\n*     return new Complex64( 2.0*realf( v ), 2.0*imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var out = arr.map( scale );\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 2\n*\n* var im = imagf( z );\n* // returns -2\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'map', function map(fcn, thisArg) {\n    var outbuf;\n    var buf;\n    var out;\n    var i;\n    var v;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(fcn)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', fcn));\n    buf = this._buffer;\n    out = new this.constructor(this._length);\n    outbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n    for(i = 0; i < this._length; i++){\n        v = fcn.call(thisArg, $ba8711ef40fa4add$var$getComplex64(buf, i), i, this);\n        if ($7911d5483bd25b55$exports(v)) {\n            outbuf[2 * i] = $efb2d5190b246528$exports(v);\n            outbuf[2 * i + 1] = $fc26d261a528b8b0$exports(v);\n        } else if ($121906abae93f5cb$exports(v) && v.length === 2) {\n            outbuf[2 * i] = v[0];\n            outbuf[2 * i + 1] = v[1];\n        } else throw new TypeError($5a5504e40381a222$exports('invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v));\n    }\n    return out;\n});\n/**\n* Applies a provided callback function to each element of the array, in order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduce\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var caddf = require( '@stdlib/complex/float32/base/add' );\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.reduce( caddf );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 6.0\n*\n* var im = imagf( z );\n* // returns 6.0\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'reduce', function reduce(reducer, initialValue) {\n    var buf;\n    var acc;\n    var len;\n    var v;\n    var i;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(reducer)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', reducer));\n    buf = this._buffer;\n    len = this._length;\n    if (arguments.length > 1) {\n        acc = initialValue;\n        i = 0;\n    } else {\n        if (len === 0) throw new Error('invalid operation. If not provided an initial value, an array must contain at least one element.');\n        acc = $ba8711ef40fa4add$var$getComplex64(buf, 0);\n        i = 1;\n    }\n    for(; i < len; i++){\n        v = $ba8711ef40fa4add$var$getComplex64(buf, i);\n        acc = reducer(acc, v, i, this);\n    }\n    return acc;\n});\n/**\n* Applies a provided callback function to each element of the array, in reverse order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduceRight\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var caddf = require( '@stdlib/complex/float32/base/add' );\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.reduceRight( caddf );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 6.0\n*\n* var im = imagf( z );\n* // returns 6.0\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'reduceRight', function reduceRight(reducer, initialValue) {\n    var buf;\n    var acc;\n    var len;\n    var v;\n    var i;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(reducer)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', reducer));\n    buf = this._buffer;\n    len = this._length;\n    if (arguments.length > 1) {\n        acc = initialValue;\n        i = len - 1;\n    } else {\n        if (len === 0) throw new Error('invalid operation. If not provided an initial value, an array must contain at least one element.');\n        acc = $ba8711ef40fa4add$var$getComplex64(buf, len - 1);\n        i = len - 2;\n    }\n    for(; i >= 0; i--){\n        v = $ba8711ef40fa4add$var$getComplex64(buf, i);\n        acc = reducer(acc, v, i, this);\n    }\n    return acc;\n});\n/**\n* Reverses an array in-place.\n*\n* @name reverse\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} reversed array\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.reverse();\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 3.0\n*\n* var im = imagf( z );\n* // returns 3.0\n*\n* z = out.get( 1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns 2.0\n*\n* z = out.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns 1.0\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'reverse', function reverse() {\n    var buf;\n    var tmp;\n    var len;\n    var N;\n    var i;\n    var j;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    len = this._length;\n    buf = this._buffer;\n    N = $19a18984922c6b5f$exports(len / 2);\n    for(i = 0; i < N; i++){\n        j = len - i - 1;\n        tmp = buf[2 * i];\n        buf[2 * i] = buf[2 * j];\n        buf[2 * j] = tmp;\n        tmp = buf[2 * i + 1];\n        buf[2 * i + 1] = buf[2 * j + 1];\n        buf[2 * j + 1] = tmp;\n    }\n    return this;\n});\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, real or complex, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values, as intended.\n*\n* @name set\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be either a complex number, an array-like object, or a complex number array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( 10 );\n*\n* var z = arr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'set', function set(value) {\n    /* eslint-disable no-underscore-dangle */ var sbuf;\n    var idx;\n    var buf;\n    var tmp;\n    var flg;\n    var N;\n    var v;\n    var i;\n    var j;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    buf = this._buffer;\n    if (arguments.length > 1) {\n        idx = arguments[1];\n        if (!$ba8711ef40fa4add$require$isNonNegativeInteger(idx)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx));\n    } else idx = 0;\n    if ($7911d5483bd25b55$exports(value)) {\n        if (idx >= this._length) throw new RangeError($5a5504e40381a222$exports('invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx));\n        idx *= 2;\n        buf[idx] = $efb2d5190b246528$exports(value);\n        buf[idx + 1] = $fc26d261a528b8b0$exports(value);\n        return;\n    }\n    if ($ba8711ef40fa4add$var$isComplexArray(value)) {\n        N = value._length;\n        if (idx + N > this._length) throw new RangeError('invalid arguments. Target array lacks sufficient storage to accommodate source values.');\n        sbuf = value._buffer;\n        // Check for overlapping memory...\n        j = buf.byteOffset + idx * $ba8711ef40fa4add$var$BYTES_PER_ELEMENT;\n        if (sbuf.buffer === buf.buffer && sbuf.byteOffset < j && sbuf.byteOffset + sbuf.byteLength > j) {\n            // We need to copy source values...\n            tmp = new $26891ca0f6b1a852$exports(sbuf.length);\n            for(i = 0; i < sbuf.length; i++)tmp[i] = sbuf[i];\n            sbuf = tmp;\n        }\n        idx *= 2;\n        j = 0;\n        for(i = 0; i < N; i++){\n            buf[idx] = sbuf[j];\n            buf[idx + 1] = sbuf[j + 1];\n            idx += 2; // stride\n            j += 2; // stride\n        }\n        return;\n    }\n    if ($b52cee4fbc0f7b72$exports(value)) {\n        // Detect whether we've been provided an array of complex numbers...\n        N = value.length;\n        for(i = 0; i < N; i++)if (!$7911d5483bd25b55$exports(value[i])) {\n            flg = true;\n            break;\n        }\n        // If an array does not contain only complex numbers, then we assume interleaved real and imaginary components...\n        if (flg) {\n            if (!$4d1b28d3c34f95aa$exports(N)) throw new RangeError($5a5504e40381a222$exports('invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', N));\n            if (idx + N / 2 > this._length) throw new RangeError('invalid arguments. Target array lacks sufficient storage to accommodate source values.');\n            sbuf = value;\n            // Check for overlapping memory...\n            j = buf.byteOffset + idx * $ba8711ef40fa4add$var$BYTES_PER_ELEMENT;\n            if (sbuf.buffer === buf.buffer && sbuf.byteOffset < j && sbuf.byteOffset + sbuf.byteLength > j) {\n                // We need to copy source values...\n                tmp = new $26891ca0f6b1a852$exports(N);\n                for(i = 0; i < N; i++)tmp[i] = sbuf[i]; // TODO: handle accessor arrays\n                sbuf = tmp;\n            }\n            idx *= 2;\n            N /= 2;\n            j = 0;\n            for(i = 0; i < N; i++){\n                buf[idx] = sbuf[j];\n                buf[idx + 1] = sbuf[j + 1];\n                idx += 2; // stride\n                j += 2; // stride\n            }\n            return;\n        }\n        // If an array contains only complex numbers, then we need to extract real and imaginary components...\n        if (idx + N > this._length) throw new RangeError('invalid arguments. Target array lacks sufficient storage to accommodate source values.');\n        idx *= 2;\n        for(i = 0; i < N; i++){\n            v = value[i];\n            buf[idx] = $efb2d5190b246528$exports(v);\n            buf[idx + 1] = $fc26d261a528b8b0$exports(v);\n            idx += 2; // stride\n        }\n        return;\n    }\n    throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `%s`.', value));\n/* eslint-enable no-underscore-dangle */ });\n/**\n* Copies a portion of a typed array to a new typed array.\n*\n* @name slice\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {Complex64Array} complex number array\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var out = arr.slice();\n* // returns <Complex64Array>\n*\n* var len = out.length;\n* // returns 5\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns -1.0\n*\n* z = out.get( len-1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 5.0\n*\n* im = imagf( z );\n* // returns -5.0\n*\n* out = arr.slice( 1, -2 );\n* // returns <Complex64Array>\n*\n* len = out.length;\n* // returns 2\n*\n* z = out.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns -2.0\n*\n* z = out.get( len-1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 3.0\n*\n* im = imagf( z );\n* // returns -3.0\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'slice', function slice(start, end) {\n    var outlen;\n    var outbuf;\n    var out;\n    var idx;\n    var buf;\n    var len;\n    var i;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    buf = this._buffer;\n    len = this._length;\n    if (arguments.length === 0) {\n        start = 0;\n        end = len;\n    } else {\n        if (!$009faf297be97aa1$exports(start)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an integer. Value: `%s`.', start));\n        if (start < 0) {\n            start += len;\n            if (start < 0) start = 0;\n        }\n        if (arguments.length === 1) end = len;\n        else {\n            if (!$009faf297be97aa1$exports(end)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', end));\n            if (end < 0) {\n                end += len;\n                if (end < 0) end = 0;\n            } else if (end > len) end = len;\n        }\n    }\n    if (start < end) outlen = end - start;\n    else outlen = 0;\n    out = new this.constructor(outlen);\n    outbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n    for(i = 0; i < outlen; i++){\n        idx = 2 * (i + start);\n        outbuf[2 * i] = buf[idx];\n        outbuf[2 * i + 1] = buf[idx + 1];\n    }\n    return out;\n});\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function.\n*\n* @name some\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var bool = arr.some( predicate );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'some', function some(predicate, thisArg) {\n    var buf;\n    var i;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++){\n        if (predicate.call(thisArg, $ba8711ef40fa4add$var$getComplex64(buf, i), i, this)) return true;\n    }\n    return false;\n});\n/**\n* Sorts an array in-place.\n*\n* @name sort\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} compareFcn - comparison function\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex64Array} sorted array\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function compare( a, b ) {\n*     var re1;\n*     var re2;\n*     var im1;\n*     var im2;\n*     re1 = realf( a );\n*     re2 = realf( b );\n*     if ( re1 < re2 ) {\n*         return -1;\n*     }\n*     if ( re1 > re2 ) {\n*         return 1;\n*     }\n*     im1 = imagf( a );\n*     im2 = imagf( b );\n*     if ( im1 < im2 ) {\n*         return -1;\n*     }\n*     if ( im1 > im2 ) {\n*         return 1;\n*     }\n*     return 0;\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 3.0, -3.0 ], 0 );\n* arr.set( [ 1.0, -1.0 ], 1 );\n* arr.set( [ 2.0, -2.0 ], 2 );\n*\n* var out = arr.sort( compare );\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns -1.0\n*\n* z = out.get( 1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns -2.0\n*\n* z = out.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 3.0\n*\n* im = imagf( z );\n* // returns -3.0\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'sort', function sort(compareFcn) {\n    var tmp;\n    var buf;\n    var len;\n    var i;\n    var j;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(compareFcn)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', compareFcn));\n    buf = this._buffer;\n    len = this._length;\n    tmp = [];\n    for(i = 0; i < len; i++)tmp.push($ba8711ef40fa4add$var$getComplex64(buf, i));\n    tmp.sort(compareFcn);\n    for(i = 0; i < len; i++){\n        j = 2 * i;\n        buf[j] = $efb2d5190b246528$exports(tmp[i]);\n        buf[j + 1] = $fc26d261a528b8b0$exports(tmp[i]);\n    }\n    return this;\n});\n/**\n* Creates a new typed array view over the same underlying `ArrayBuffer` and with the same underlying data type as the host array.\n*\n* @name subarray\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {Complex64Array} subarray\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var subarr = arr.subarray();\n* // returns <Complex64Array>\n*\n* var len = subarr.length;\n* // returns 5\n*\n* var z = subarr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns -1.0\n*\n* z = subarr.get( len-1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 5.0\n*\n* im = imagf( z );\n* // returns -5.0\n*\n* subarr = arr.subarray( 1, -2 );\n* // returns <Complex64Array>\n*\n* len = subarr.length;\n* // returns 2\n*\n* z = subarr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns -2.0\n*\n* z = subarr.get( len-1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 3.0\n*\n* im = imagf( z );\n* // returns -3.0\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'subarray', function subarray(begin, end) {\n    var offset;\n    var buf;\n    var len;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    buf = this._buffer;\n    len = this._length;\n    if (arguments.length === 0) {\n        begin = 0;\n        end = len;\n    } else {\n        if (!$009faf297be97aa1$exports(begin)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an integer. Value: `%s`.', begin));\n        if (begin < 0) {\n            begin += len;\n            if (begin < 0) begin = 0;\n        }\n        if (arguments.length === 1) end = len;\n        else {\n            if (!$009faf297be97aa1$exports(end)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', end));\n            if (end < 0) {\n                end += len;\n                if (end < 0) end = 0;\n            } else if (end > len) end = len;\n        }\n    }\n    if (begin >= len) {\n        len = 0;\n        offset = buf.byteLength;\n    } else if (begin >= end) {\n        len = 0;\n        offset = buf.byteOffset + begin * $ba8711ef40fa4add$var$BYTES_PER_ELEMENT;\n    } else {\n        len = end - begin;\n        offset = buf.byteOffset + begin * $ba8711ef40fa4add$var$BYTES_PER_ELEMENT;\n    }\n    return new this.constructor(buf.buffer, offset, len < 0 ? 0 : len);\n});\n/**\n* Serializes an array as a locale-specific string.\n*\n* @name toLocaleString\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {(string|Array<string>)} [locales] - locale identifier(s)\n* @param {Object} [options] - configuration options\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a string or an array of strings\n* @throws {TypeError} options argument must be an object\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.toLocaleString();\n* // returns '1 + 1i,2 + 2i'\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'toLocaleString', function toLocaleString(locales, options) {\n    var opts;\n    var loc;\n    var out;\n    var buf;\n    var i;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (arguments.length === 0) loc = [];\n    else if ($ba8711ef40fa4add$require$isString(locales) || $ba8711ef40fa4add$require$isStringArray(locales)) loc = locales;\n    else throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a string or an array of strings. Value: `%s`.', locales));\n    if (arguments.length < 2) opts = {};\n    else if ($01b2bacec2990d67$exports(options)) opts = options;\n    else throw new TypeError($5a5504e40381a222$exports('invalid argument. Options argument must be an object. Value: `%s`.', options));\n    buf = this._buffer;\n    out = [];\n    for(i = 0; i < this._length; i++)out.push($ba8711ef40fa4add$var$getComplex64(buf, i).toLocaleString(loc, opts));\n    return out.join(',');\n});\n/**\n* Returns a new typed array containing the elements in reversed order.\n*\n* @name toReversed\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} reversed array\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.toReversed();\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 3.0\n*\n* var im = imagf( z );\n* // returns 3.0\n*\n* z = out.get( 1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns 2.0\n*\n* z = out.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns 1.0\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'toReversed', function toReversed() {\n    var outbuf;\n    var out;\n    var len;\n    var buf;\n    var i;\n    var j;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    len = this._length;\n    out = new this.constructor(len);\n    buf = this._buffer;\n    outbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n    for(i = 0; i < len; i++){\n        j = len - i - 1;\n        outbuf[2 * i] = buf[2 * j];\n        outbuf[2 * i + 1] = buf[2 * j + 1];\n    }\n    return out;\n});\n/**\n* Returns a new typed array containing the elements in sorted order.\n*\n* @name toSorted\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} compareFcn - comparison function\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex64Array} sorted array\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function compare( a, b ) {\n*     var re1;\n*     var re2;\n*     var im1;\n*     var im2;\n*     re1 = realf( a );\n*     re2 = realf( b );\n*     if ( re1 < re2 ) {\n*         return -1;\n*     }\n*     if ( re1 > re2 ) {\n*         return 1;\n*     }\n*     im1 = imagf( a );\n*     im2 = imagf( b );\n*     if ( im1 < im2 ) {\n*         return -1;\n*     }\n*     if ( im1 > im2 ) {\n*         return 1;\n*     }\n*     return 0;\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 3.0, -3.0 ], 0 );\n* arr.set( [ 1.0, -1.0 ], 1 );\n* arr.set( [ 2.0, -2.0 ], 2 );\n*\n* var out = arr.sort( compare );\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns -1.0\n*\n* z = out.get( 1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns -2.0\n*\n* z = out.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 3.0\n*\n* im = imagf( z );\n* // returns -3.0\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'toSorted', function toSorted(compareFcn) {\n    var tmp;\n    var buf;\n    var len;\n    var i;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(compareFcn)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', compareFcn));\n    buf = this._buffer;\n    len = this._length;\n    tmp = [];\n    for(i = 0; i < len; i++)tmp.push($ba8711ef40fa4add$var$getComplex64(buf, i));\n    tmp.sort(compareFcn);\n    return new $ba8711ef40fa4add$var$Complex64Array(tmp);\n});\n/**\n* Serializes an array as a string.\n*\n* @name toString\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.toString();\n* // returns '1 + 1i,2 + 2i'\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'toString', function toString() {\n    var out;\n    var buf;\n    var i;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    out = [];\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++)out.push($ba8711ef40fa4add$var$getComplex64(buf, i).toString());\n    return out.join(',');\n});\n/**\n* Returns an iterator for iterating over each value in a typed array.\n*\n* @name values\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n*\n* var iter = arr.values();\n*\n* var v = iter.next().value;\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 1.0\n*\n* var im = imagf( v );\n* // returns -1.0\n*\n* v = iter.next().value;\n* // returns <Complex64>\n*\n* re = realf( v );\n* // returns 2.0\n*\n* im = imagf( v );\n* // returns -2.0\n*\n* var bool = iter.next().done;\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'values', function values() {\n    var iter;\n    var self;\n    var len;\n    var FLG;\n    var buf;\n    var i;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    self = this;\n    buf = this._buffer;\n    len = this._length;\n    // Initialize an iteration index:\n    i = -1;\n    // Create an iterator protocol-compliant object:\n    iter = {};\n    $dfd4cfb9f136c5d5$exports(iter, 'next', next);\n    $dfd4cfb9f136c5d5$exports(iter, 'return', end);\n    if ($b1dd39231526b140$exports) $dfd4cfb9f136c5d5$exports(iter, $b1dd39231526b140$exports, factory);\n    return iter;\n    /**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function next() {\n        i += 1;\n        if (FLG || i >= len) return {\n            'done': true\n        };\n        return {\n            'value': $ba8711ef40fa4add$var$getComplex64(buf, i),\n            'done': false\n        };\n    }\n    /**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function end(value) {\n        FLG = true;\n        if (arguments.length) return {\n            'value': value,\n            'done': true\n        };\n        return {\n            'done': true\n        };\n    }\n    /**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/ function factory() {\n        return self.values();\n    }\n});\n/**\n* Returns a new typed array with the element at a provided index replaced with a provided value.\n*\n* @name with\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} index - element index\n* @param {ComplexLike} value - new value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {TypeError} second argument must be a complex number\n* @returns {Complex64Array} new typed array\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.with( 0, new Complex64( 4.0, 4.0 ) );\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 4.0\n*\n* var im = imagf( z );\n* // returns 4.0\n*/ $dfd4cfb9f136c5d5$exports($ba8711ef40fa4add$var$Complex64Array.prototype, 'with', function copyWith(index, value) {\n    var buf;\n    var out;\n    var len;\n    if (!$ba8711ef40fa4add$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$009faf297be97aa1$exports(index)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an integer. Value: `%s`.', index));\n    len = this._length;\n    if (index < 0) index += len;\n    if (index < 0 || index >= len) throw new RangeError($5a5504e40381a222$exports('invalid argument. Index argument is out-of-bounds. Value: `%s`.', index));\n    if (!$7911d5483bd25b55$exports(value)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be a complex number. Value: `%s`.', value));\n    out = new this.constructor(this._buffer);\n    buf = out._buffer; // eslint-disable-line no-underscore-dangle\n    buf[2 * index] = $efb2d5190b246528$exports(value);\n    buf[2 * index + 1] = $fc26d261a528b8b0$exports(value);\n    return out;\n});\n// EXPORTS //\n$ba8711ef40fa4add$exports = $ba8711ef40fa4add$var$Complex64Array;\n\n\n// EXPORTS //\n$375b4d44e8b8b01e$exports = $ba8711ef40fa4add$exports;\n\n\nvar $b43bc7a4d963783e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $b5346cacdcd1b519$exports = {};\n/* eslint-disable no-restricted-syntax, max-lines, no-invalid-this */ /**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $b5346cacdcd1b519$require$isNonNegativeInteger = $0bdd74f709a75343$exports.isPrimitive;\n\n\n\n\n\n\nvar $b5346cacdcd1b519$require$isStringArray = $2f257dbaf842ff48$exports.primitives;\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar $75312021f59ef5f6$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $d83d8934e7890411$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Returns the real component of a double-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} real component\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var re = real( z );\n* // returns 5.0\n*/ function $d83d8934e7890411$var$real(z) {\n    return z.re;\n}\n// EXPORTS //\n$d83d8934e7890411$exports = $d83d8934e7890411$var$real;\n\n\n// EXPORTS //\n$75312021f59ef5f6$exports = $d83d8934e7890411$exports;\n\n\nvar $97e9e15ff77fcffa$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $9660ed1d5e23ad8b$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Returns the imaginary component of a double-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} imaginary component\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var im = imag( z );\n* // returns 3.0\n*/ function $9660ed1d5e23ad8b$var$imag(z) {\n    return z.im;\n}\n// EXPORTS //\n$9660ed1d5e23ad8b$exports = $9660ed1d5e23ad8b$var$imag;\n\n\n// EXPORTS //\n$97e9e15ff77fcffa$exports = $9660ed1d5e23ad8b$exports;\n\n\n\n\n\n\n\n\nvar $6680c891bd630776$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n\n\n\n// MAIN //\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/ function $6680c891bd630776$var$fromIterator(it) {\n    var out;\n    var v;\n    var z;\n    out = [];\n    while(true){\n        v = it.next();\n        if (v.done) break;\n        z = v.value;\n        if ($121906abae93f5cb$exports(z) && z.length >= 2) out.push(z[0], z[1]);\n        else if ($7911d5483bd25b55$exports(z)) out.push($75312021f59ef5f6$exports(z), $97e9e15ff77fcffa$exports(z));\n        else return new TypeError($5a5504e40381a222$exports('invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z));\n    }\n    return out;\n}\n// EXPORTS //\n$6680c891bd630776$exports = $6680c891bd630776$var$fromIterator;\n\n\nvar $1290071e1f517cce$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n\n\n\n// MAIN //\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/ function $1290071e1f517cce$var$fromIteratorMap(it, clbk, thisArg) {\n    var out;\n    var v;\n    var z;\n    var i;\n    out = [];\n    i = -1;\n    while(true){\n        v = it.next();\n        if (v.done) break;\n        i += 1;\n        z = clbk.call(thisArg, v.value, i);\n        if ($121906abae93f5cb$exports(z) && z.length >= 2) out.push(z[0], z[1]);\n        else if ($7911d5483bd25b55$exports(z)) out.push($75312021f59ef5f6$exports(z), $97e9e15ff77fcffa$exports(z));\n        else return new TypeError($5a5504e40381a222$exports('invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z));\n    }\n    return out;\n}\n// EXPORTS //\n$1290071e1f517cce$exports = $1290071e1f517cce$var$fromIteratorMap;\n\n\nvar $d572162fe936568a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n\n// MAIN //\n/**\n* Returns a strided array of real and imaginary components.\n*\n* @private\n* @param {Float64Array} buf - output array\n* @param {Array} arr - array containing complex numbers\n* @returns {(Float64Array|null)} output array or null\n*/ function $d572162fe936568a$var$fromArray(buf, arr) {\n    var len;\n    var v;\n    var i;\n    var j;\n    len = arr.length;\n    j = 0;\n    for(i = 0; i < len; i++){\n        v = arr[i];\n        if (!$7911d5483bd25b55$exports(v)) return null;\n        buf[j] = $75312021f59ef5f6$exports(v);\n        buf[j + 1] = $97e9e15ff77fcffa$exports(v);\n        j += 2; // stride\n    }\n    return buf;\n}\n// EXPORTS //\n$d572162fe936568a$exports = $d572162fe936568a$var$fromArray;\n\n\n// VARIABLES //\nvar $b5346cacdcd1b519$var$BYTES_PER_ELEMENT = $688bf0eeb5997346$exports.BYTES_PER_ELEMENT * 2;\nvar $b5346cacdcd1b519$var$HAS_ITERATOR_SYMBOL = $d1469be5794ac8a0$exports();\n// FUNCTIONS //\n/**\n* Returns a boolean indicating if a value is a complex typed array.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*/ function $b5346cacdcd1b519$var$isComplexArray(value) {\n    return value instanceof $b5346cacdcd1b519$var$Complex128Array || typeof value === 'object' && value !== null && (value.constructor.name === 'Complex64Array' || value.constructor.name === 'Complex128Array') && typeof value._length === 'number' && // eslint-disable-line no-underscore-dangle\n    // NOTE: we don't perform a more rigorous test here for a typed array for performance reasons, as robustly checking for a typed array instance could require walking the prototype tree and performing relatively expensive constructor checks...\n    typeof value._buffer === 'object' // eslint-disable-line no-underscore-dangle\n    ;\n}\n/**\n* Returns a boolean indicating if a value is a complex typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array constructor\n*/ function $b5346cacdcd1b519$var$isComplexArrayConstructor(value) {\n    return value === $b5346cacdcd1b519$var$Complex128Array || // NOTE: weaker test in order to avoid a circular dependency with Complex64Array...\n    value.name === 'Complex64Array';\n}\n/**\n* Retrieves a complex number from a complex number array buffer.\n*\n* @private\n* @param {Float64Array} buf - array buffer\n* @param {NonNegativeInteger} idx - element index\n* @returns {Complex128} complex number\n*/ function $b5346cacdcd1b519$var$getComplex128(buf, idx) {\n    idx *= 2;\n    return new $ad35ee0af2f9e50a$exports(buf[idx], buf[idx + 1]);\n}\n// MAIN //\n/**\n* 128-bit complex number array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {RangeError} ArrayBuffer byte length must be a multiple of `16`\n* @throws {RangeError} array-like object and typed array input arguments must have a length which is a multiple of two\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} byte offset must be a multiple of `16`\n* @throws {TypeError} view length must be a positive multiple of `16`\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex128Array} complex number array\n*\n* @example\n* var arr = new Complex128Array();\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Complex128Array( 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Complex128Array( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf, 16 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = new Complex128Array( buf, 16, 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/ function $b5346cacdcd1b519$var$Complex128Array() {\n    var byteOffset;\n    var nargs;\n    var buf;\n    var len;\n    nargs = arguments.length;\n    if (!(this instanceof $b5346cacdcd1b519$var$Complex128Array)) {\n        if (nargs === 0) return new $b5346cacdcd1b519$var$Complex128Array();\n        if (nargs === 1) return new $b5346cacdcd1b519$var$Complex128Array(arguments[0]);\n        if (nargs === 2) return new $b5346cacdcd1b519$var$Complex128Array(arguments[0], arguments[1]);\n        return new $b5346cacdcd1b519$var$Complex128Array(arguments[0], arguments[1], arguments[2]);\n    }\n    // Create the underlying data buffer...\n    if (nargs === 0) buf = new $688bf0eeb5997346$exports(0); // backward-compatibility\n    else if (nargs === 1) {\n        if ($b5346cacdcd1b519$require$isNonNegativeInteger(arguments[0])) buf = new $688bf0eeb5997346$exports(arguments[0] * 2);\n        else if ($b52cee4fbc0f7b72$exports(arguments[0])) {\n            buf = arguments[0];\n            len = buf.length;\n            // If provided a \"generic\" array, peak at the first value, and, if the value is a complex number, try to process as an array of complex numbers, falling back to \"normal\" typed array initialization if we fail and ensuring consistency if the first value had not been a complex number...\n            if (len && $5ebc6df234db68eb$exports(buf) && $7911d5483bd25b55$exports(buf[0])) {\n                buf = $d572162fe936568a$exports(new $688bf0eeb5997346$exports(len * 2), buf);\n                if (buf === null) {\n                    // We failed and we are now forced to allocate a new array :-(\n                    if (!$4d1b28d3c34f95aa$exports(len)) throw new RangeError($5a5504e40381a222$exports('invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', len));\n                    // We failed, so fall back to directly setting values...\n                    buf = new $688bf0eeb5997346$exports(arguments[0]);\n                }\n            } else {\n                if ($c9a11eb31d8609bb$exports(buf)) buf = $5d2756b8cde44db9$exports(buf, 0);\n                else if ($91951cfa87e1b5e1$exports(buf)) buf = $88d548af1d36ede9$exports(buf, 0);\n                else if (!$4d1b28d3c34f95aa$exports(len)) throw new RangeError($5a5504e40381a222$exports('invalid argument. Array-like object and typed array arguments must have a length which is a multiple of two. Length: `%u`.', len));\n                buf = new $688bf0eeb5997346$exports(buf);\n            }\n        } else if ($0c6292c314072f8d$exports(arguments[0])) {\n            buf = arguments[0];\n            if (!$009faf297be97aa1$exports(buf.byteLength / $b5346cacdcd1b519$var$BYTES_PER_ELEMENT)) throw new RangeError($5a5504e40381a222$exports('invalid argument. ArrayBuffer byte length must be a multiple of %u. Byte length: `%u`.', $b5346cacdcd1b519$var$BYTES_PER_ELEMENT, buf.byteLength));\n            buf = new $688bf0eeb5997346$exports(buf);\n        } else if ($01b2bacec2990d67$exports(arguments[0])) {\n            buf = arguments[0];\n            if ($b5346cacdcd1b519$var$HAS_ITERATOR_SYMBOL === false) throw new TypeError($5a5504e40381a222$exports('invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', buf));\n            if (!$39cac8b951c1ded2$exports(buf[$b1dd39231526b140$exports])) throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf));\n            buf = buf[$b1dd39231526b140$exports]();\n            if (!$39cac8b951c1ded2$exports(buf.next)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf));\n            buf = $6680c891bd630776$exports(buf);\n            if (buf instanceof Error) throw buf;\n            buf = new $688bf0eeb5997346$exports(buf);\n        } else throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arguments[0]));\n    } else {\n        buf = arguments[0];\n        if (!$0c6292c314072f8d$exports(buf)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf));\n        byteOffset = arguments[1];\n        if (!$b5346cacdcd1b519$require$isNonNegativeInteger(byteOffset)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset));\n        if (!$009faf297be97aa1$exports(byteOffset / $b5346cacdcd1b519$var$BYTES_PER_ELEMENT)) throw new RangeError($5a5504e40381a222$exports('invalid argument. Byte offset must be a multiple of %u. Value: `%u`.', $b5346cacdcd1b519$var$BYTES_PER_ELEMENT, byteOffset));\n        if (nargs === 2) {\n            len = buf.byteLength - byteOffset;\n            if (!$009faf297be97aa1$exports(len / $b5346cacdcd1b519$var$BYTES_PER_ELEMENT)) throw new RangeError($5a5504e40381a222$exports('invalid arguments. ArrayBuffer view byte length must be a multiple of %u. View byte length: `%u`.', $b5346cacdcd1b519$var$BYTES_PER_ELEMENT, len));\n            buf = new $688bf0eeb5997346$exports(buf, byteOffset);\n        } else {\n            len = arguments[2];\n            if (!$b5346cacdcd1b519$require$isNonNegativeInteger(len)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Length must be a nonnegative integer. Value: `%s`.', len));\n            if (len * $b5346cacdcd1b519$var$BYTES_PER_ELEMENT > buf.byteLength - byteOffset) throw new RangeError($5a5504e40381a222$exports('invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len * $b5346cacdcd1b519$var$BYTES_PER_ELEMENT));\n            buf = new $688bf0eeb5997346$exports(buf, byteOffset, len * 2);\n        }\n    }\n    $dfd4cfb9f136c5d5$exports(this, '_buffer', buf);\n    $dfd4cfb9f136c5d5$exports(this, '_length', buf.length / 2);\n    return this;\n}\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128Array\n* @readonly\n* @type {PositiveInteger}\n* @default 16\n*\n* @example\n* var nbytes = Complex128Array.BYTES_PER_ELEMENT;\n* // returns 16\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array, 'BYTES_PER_ELEMENT', $b5346cacdcd1b519$var$BYTES_PER_ELEMENT);\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Complex128Array\n* @readonly\n* @type {string}\n* @default 'Complex128Array'\n*\n* @example\n* var name = Complex128Array.name;\n* // returns 'Complex128Array'\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array, 'name', 'Complex128Array');\n/**\n* Creates a new 128-bit complex number array from an array-like object or an iterable.\n*\n* @name from\n* @memberof Complex128Array\n* @type {Function}\n* @param {(Collection|Object)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @throws {TypeError} when provided an iterator, a callback must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex128Array} 128-bit complex number array\n*\n* @example\n* var arr = Complex128Array.from( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var arr = Complex128Array.from( [ new Complex128( 1.0, 1.0 ) ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function clbk( v ) {\n*     return new Complex128( real(v)*2.0, imag(v)*2.0 );\n* }\n*\n* var arr = Complex128Array.from( [ new Complex128( 1.0, 1.0 ) ], clbk );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array, 'from', function from(src) {\n    var thisArg;\n    var nargs;\n    var clbk;\n    var out;\n    var buf;\n    var tmp;\n    var get;\n    var len;\n    var flg;\n    var v;\n    var i;\n    var j;\n    if (!$39cac8b951c1ded2$exports(this)) throw new TypeError('invalid invocation. `this` context must be a constructor.');\n    if (!$b5346cacdcd1b519$var$isComplexArrayConstructor(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    nargs = arguments.length;\n    if (nargs > 1) {\n        clbk = arguments[1];\n        if (!$39cac8b951c1ded2$exports(clbk)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be a function. Value: `%s`.', clbk));\n        if (nargs > 2) thisArg = arguments[2];\n    }\n    if ($b5346cacdcd1b519$var$isComplexArray(src)) {\n        len = src.length;\n        if (clbk) {\n            out = new this(len);\n            buf = out._buffer; // eslint-disable-line no-underscore-dangle\n            j = 0;\n            for(i = 0; i < len; i++){\n                v = clbk.call(thisArg, src.get(i), i);\n                if ($7911d5483bd25b55$exports(v)) {\n                    buf[j] = $75312021f59ef5f6$exports(v);\n                    buf[j + 1] = $97e9e15ff77fcffa$exports(v);\n                } else if ($121906abae93f5cb$exports(v) && v.length >= 2) {\n                    buf[j] = v[0];\n                    buf[j + 1] = v[1];\n                } else throw new TypeError($5a5504e40381a222$exports('invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v));\n                j += 2; // stride\n            }\n            return out;\n        }\n        return new this(src);\n    }\n    if ($b52cee4fbc0f7b72$exports(src)) {\n        if (clbk) {\n            // Note: array contents affect how we iterate over a provided data source. If only complex number objects, we can extract real and imaginary components. Otherwise, for non-complex number arrays (e.g., `Float64Array`, etc), we assume a strided array where real and imaginary components are interleaved. In the former case, we expect a callback to return real and imaginary components (possibly as a complex number). In the latter case, we expect a callback to return *either* a real or imaginary component.\n            len = src.length;\n            if (src.get && src.set) get = $dfd66f945cb96da9$exports('default');\n            else get = $88f5ca10627f0cae$exports('default');\n            // Detect whether we've been provided an array which returns complex number objects...\n            for(i = 0; i < len; i++)if (!$7911d5483bd25b55$exports(get(src, i))) {\n                flg = true;\n                break;\n            }\n            // If an array does not contain only complex number objects, then we assume interleaved real and imaginary components...\n            if (flg) {\n                if (!$4d1b28d3c34f95aa$exports(len)) throw new RangeError($5a5504e40381a222$exports('invalid argument. First argument must have a length which is a multiple of two. Length: `%u`.', len));\n                out = new this(len / 2);\n                buf = out._buffer; // eslint-disable-line no-underscore-dangle\n                for(i = 0; i < len; i++)buf[i] = clbk.call(thisArg, get(src, i), i);\n                return out;\n            }\n            // If an array contains only complex number objects, then we need to extract real and imaginary components...\n            out = new this(len);\n            buf = out._buffer; // eslint-disable-line no-underscore-dangle\n            j = 0;\n            for(i = 0; i < len; i++){\n                v = clbk.call(thisArg, get(src, i), i);\n                if ($7911d5483bd25b55$exports(v)) {\n                    buf[j] = $75312021f59ef5f6$exports(v);\n                    buf[j + 1] = $97e9e15ff77fcffa$exports(v);\n                } else if ($121906abae93f5cb$exports(v) && v.length >= 2) {\n                    buf[j] = v[0];\n                    buf[j + 1] = v[1];\n                } else throw new TypeError($5a5504e40381a222$exports('invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v));\n                j += 2; // stride\n            }\n            return out;\n        }\n        return new this(src);\n    }\n    if ($01b2bacec2990d67$exports(src) && $b5346cacdcd1b519$var$HAS_ITERATOR_SYMBOL && $39cac8b951c1ded2$exports(src[$b1dd39231526b140$exports])) {\n        buf = src[$b1dd39231526b140$exports]();\n        if (!$39cac8b951c1ded2$exports(buf.next)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src));\n        if (clbk) tmp = $1290071e1f517cce$exports(buf, clbk, thisArg);\n        else tmp = $6680c891bd630776$exports(buf);\n        if (tmp instanceof Error) throw tmp;\n        len = tmp.length / 2;\n        out = new this(len);\n        buf = out._buffer; // eslint-disable-line no-underscore-dangle\n        for(i = 0; i < len; i++)buf[i] = tmp[i];\n        return out;\n    }\n    throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src));\n});\n/**\n* Creates a new 128-bit complex number array from a variable number of arguments.\n*\n* @name of\n* @memberof Complex128Array\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} 128-bit complex number array\n*\n* @example\n* var arr = Complex128Array.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array, 'of', function of() {\n    var args;\n    var i;\n    if (!$39cac8b951c1ded2$exports(this)) throw new TypeError('invalid invocation. `this` context must be a constructor.');\n    if (!$b5346cacdcd1b519$var$isComplexArrayConstructor(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    args = [];\n    for(i = 0; i < arguments.length; i++)args.push(arguments[i]);\n    return new this(args);\n});\n/**\n* Returns an array element with support for both nonnegative and negative integer indices.\n*\n* @name at\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide an integer\n* @returns {(Complex128|void)} array element\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( 10 );\n*\n* var z = arr.at( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 9.0, -9.0 ], 9 );\n*\n* z = arr.at( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*\n* z = arr.at( -1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 9.0\n*\n* im = imag( z );\n* // returns -9.0\n*\n* z = arr.at( 100 );\n* // returns undefined\n*\n* z = arr.at( -100 );\n* // returns undefined\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'at', function at(idx) {\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$009faf297be97aa1$exports(idx)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide an integer. Value: `%s`.', idx));\n    if (idx < 0) idx += this._length;\n    if (idx < 0 || idx >= this._length) return;\n    return $b5346cacdcd1b519$var$getComplex128(this._buffer, idx);\n});\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/ $a4444f7456e1c73a$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'buffer', function get() {\n    return this._buffer.buffer;\n});\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 160\n*/ $a4444f7456e1c73a$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'byteLength', function get() {\n    return this._buffer.byteLength;\n});\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/ $a4444f7456e1c73a$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'byteOffset', function get() {\n    return this._buffer.byteOffset;\n});\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 16\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 16\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'BYTES_PER_ELEMENT', $b5346cacdcd1b519$var$Complex128Array.BYTES_PER_ELEMENT);\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} modified array\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( 4 );\n*\n* // Set the array elements:\n* arr.set( new Complex128( 1.0, 1.0 ), 0 );\n* arr.set( new Complex128( 2.0, 2.0 ), 1 );\n* arr.set( new Complex128( 3.0, 3.0 ), 2 );\n* arr.set( new Complex128( 4.0, 4.0 ), 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* // Get the last array element:\n* var z = arr.get( 3 );\n*\n* var re = real( z );\n* // returns 2.0\n*\n* var im = imag( z );\n* // returns 2.0\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'copyWithin', function copyWithin(target, start) {\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    // FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n    if (arguments.length === 2) this._buffer.copyWithin(target * 2, start * 2);\n    else this._buffer.copyWithin(target * 2, start * 2, arguments[2] * 2);\n    return this;\n});\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var arr = [\n*     new Complex128( 1.0, 1.0 ),\n*     new Complex128( 2.0, 2.0 ),\n*     new Complex128( 3.0, 3.0 )\n* ];\n* arr = new Complex128Array( arr );\n*\n* // Create an iterator:\n* var it = arr.entries();\n*\n* // Iterate over the key-value pairs...\n* var v = it.next().value;\n* // returns [ 0, <Complex128> ]\n*\n* v = it.next().value;\n* // returns [ 1, <Complex128> ]\n*\n* v = it.next().value;\n* // returns [ 2, <Complex128> ]\n*\n* var bool = it.next().done;\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'entries', function entries() {\n    var buffer;\n    var self;\n    var iter;\n    var len;\n    var FLG;\n    var i;\n    var j;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    self = this;\n    buffer = this._buffer;\n    len = this._length;\n    // Initialize the iteration indices:\n    i = -1;\n    j = -2;\n    // Create an iterator protocol-compliant object:\n    iter = {};\n    $dfd4cfb9f136c5d5$exports(iter, 'next', next);\n    $dfd4cfb9f136c5d5$exports(iter, 'return', end);\n    if ($b1dd39231526b140$exports) $dfd4cfb9f136c5d5$exports(iter, $b1dd39231526b140$exports, factory);\n    return iter;\n    /**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function next() {\n        var z;\n        i += 1;\n        if (FLG || i >= len) return {\n            'done': true\n        };\n        j += 2;\n        z = new $ad35ee0af2f9e50a$exports(buffer[j], buffer[j + 1]);\n        return {\n            'value': [\n                i,\n                z\n            ],\n            'done': false\n        };\n    }\n    /**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function end(value) {\n        FLG = true;\n        if (arguments.length) return {\n            'value': value,\n            'done': true\n        };\n        return {\n            'done': true\n        };\n    }\n    /**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/ function factory() {\n        return self.entries();\n    }\n});\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function.\n*\n* @name every\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var bool = arr.every( predicate );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'every', function every(predicate, thisArg) {\n    var buf;\n    var i;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++){\n        if (!predicate.call(thisArg, $b5346cacdcd1b519$var$getComplex128(buf, i), i, this)) return false;\n    }\n    return true;\n});\n/**\n* Returns a modified typed array filled with a fill value.\n*\n* @name fill\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {ComplexLike} value - fill value\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @throws {TypeError} third argument must be an integer\n* @returns {Complex128Array} modified array\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.fill( new Complex128( 1.0, 1.0 ), 1 );\n*\n* var z = arr.get( 1 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns 1.0\n*\n* z = arr.get( 2 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns 1.0\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'fill', function fill(value, start, end) {\n    var buf;\n    var len;\n    var idx;\n    var re;\n    var im;\n    var i;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$7911d5483bd25b55$exports(value)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a complex number. Value: `%s`.', value));\n    buf = this._buffer;\n    len = this._length;\n    if (arguments.length > 1) {\n        if (!$009faf297be97aa1$exports(start)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', start));\n        if (start < 0) {\n            start += len;\n            if (start < 0) start = 0;\n        }\n        if (arguments.length > 2) {\n            if (!$009faf297be97aa1$exports(end)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Third argument must be an integer. Value: `%s`.', end));\n            if (end < 0) {\n                end += len;\n                if (end < 0) end = 0;\n            }\n            if (end > len) end = len;\n        } else end = len;\n    } else {\n        start = 0;\n        end = len;\n    }\n    re = $75312021f59ef5f6$exports(value);\n    im = $97e9e15ff77fcffa$exports(value);\n    for(i = start; i < end; i++){\n        idx = 2 * i;\n        buf[idx] = re;\n        buf[idx + 1] = im;\n    }\n    return this;\n});\n/**\n* Returns a new array containing the elements of an array which pass a test implemented by a predicate function.\n*\n* @name filter\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex128Array} complex number array\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var out = arr.filter( predicate );\n* // returns <Complex128Array>\n*\n* var len = out.length;\n* // returns 1\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 2.0\n*\n* var im = imag( z );\n* // returns 2.0\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'filter', function filter(predicate, thisArg) {\n    var buf;\n    var out;\n    var i;\n    var z;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    out = [];\n    for(i = 0; i < this._length; i++){\n        z = $b5346cacdcd1b519$var$getComplex128(buf, i);\n        if (predicate.call(thisArg, z, i, this)) out.push(z);\n    }\n    return new this.constructor(out);\n});\n/**\n* Returns the first element in an array for which a predicate function returns a truthy value.\n*\n* @name find\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {(Complex128|void)} array element or undefined\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.find( predicate );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns 1.0\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'find', function find(predicate, thisArg) {\n    var buf;\n    var i;\n    var z;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++){\n        z = $b5346cacdcd1b519$var$getComplex128(buf, i);\n        if (predicate.call(thisArg, z, i, this)) return z;\n    }\n});\n/**\n* Returns the index of the first element in an array for which a predicate function returns a truthy value.\n*\n* @name findIndex\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var idx = arr.findIndex( predicate );\n* // returns 2\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'findIndex', function findIndex(predicate, thisArg) {\n    var buf;\n    var i;\n    var z;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++){\n        z = $b5346cacdcd1b519$var$getComplex128(buf, i);\n        if (predicate.call(thisArg, z, i, this)) return i;\n    }\n    return -1;\n});\n/**\n* Returns the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLast\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {(Complex128|void)} array element or undefined\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.findLast( predicate );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 3.0\n*\n* var im = imag( z );\n* // returns 3.0\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'findLast', function findLast(predicate, thisArg) {\n    var buf;\n    var i;\n    var z;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = this._length - 1; i >= 0; i--){\n        z = $b5346cacdcd1b519$var$getComplex128(buf, i);\n        if (predicate.call(thisArg, z, i, this)) return z;\n    }\n});\n/**\n* Returns the index of the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLastIndex\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var idx = arr.findLastIndex( predicate );\n* // returns 1\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'findLastIndex', function findLastIndex(predicate, thisArg) {\n    var buf;\n    var i;\n    var z;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = this._length - 1; i >= 0; i--){\n        z = $b5346cacdcd1b519$var$getComplex128(buf, i);\n        if (predicate.call(thisArg, z, i, this)) return i;\n    }\n    return -1;\n});\n/**\n* Invokes a function once for each array element.\n*\n* @name forEach\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - function invocation context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* function log( v, i ) {\n*     console.log( '%s: %s', i, v.toString() );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* arr.forEach( log );\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'forEach', function forEach(fcn, thisArg) {\n    var buf;\n    var i;\n    var z;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(fcn)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', fcn));\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++){\n        z = $b5346cacdcd1b519$var$getComplex128(buf, i);\n        fcn.call(thisArg, z, i, this);\n    }\n});\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(Complex128|void)} array element\n*\n* @example\n* var arr = new Complex128Array( 10 );\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var z = arr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*\n* z = arr.get( 100 );\n* // returns undefined\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'get', function get(idx) {\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$b5346cacdcd1b519$require$isNonNegativeInteger(idx)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx));\n    if (idx >= this._length) return;\n    return $b5346cacdcd1b519$var$getComplex128(this._buffer, idx);\n});\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/ $a4444f7456e1c73a$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'length', function get() {\n    return this._length;\n});\n/**\n* Returns a boolean indicating whether an array includes a provided value.\n*\n* @name includes\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - search element\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {boolean} boolean indicating whether an array includes a provided value\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var bool = arr.includes( new Complex128( 3.0, -3.0 ) );\n* // returns true\n*\n* bool = arr.includes( new Complex128( 3.0, -3.0 ), 3 );\n* // returns false\n*\n* bool = arr.includes( new Complex128( 4.0, -4.0 ), -3 );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'includes', function includes(searchElement, fromIndex) {\n    var buf;\n    var idx;\n    var re;\n    var im;\n    var i;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$7911d5483bd25b55$exports(searchElement)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a complex number. Value: `%s`.', searchElement));\n    if (arguments.length > 1) {\n        if (!$009faf297be97aa1$exports(fromIndex)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex));\n        if (fromIndex < 0) {\n            fromIndex += this._length;\n            if (fromIndex < 0) fromIndex = 0;\n        }\n    } else fromIndex = 0;\n    re = $75312021f59ef5f6$exports(searchElement);\n    im = $97e9e15ff77fcffa$exports(searchElement);\n    buf = this._buffer;\n    for(i = fromIndex; i < this._length; i++){\n        idx = 2 * i;\n        if (re === buf[idx] && im === buf[idx + 1]) return true;\n    }\n    return false;\n});\n/**\n* Returns the first index at which a given element can be found.\n*\n* @name indexOf\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - element to find\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var idx = arr.indexOf( new Complex128( 3.0, -3.0 ) );\n* // returns 2\n*\n* idx = arr.indexOf( new Complex128( 3.0, -3.0 ), 3 );\n* // returns -1\n*\n* idx = arr.indexOf( new Complex128( 4.0, -4.0 ), -3 );\n* // returns 3\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'indexOf', function indexOf(searchElement, fromIndex) {\n    var buf;\n    var idx;\n    var re;\n    var im;\n    var i;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$7911d5483bd25b55$exports(searchElement)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a complex number. Value: `%s`.', searchElement));\n    if (arguments.length > 1) {\n        if (!$009faf297be97aa1$exports(fromIndex)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex));\n        if (fromIndex < 0) {\n            fromIndex += this._length;\n            if (fromIndex < 0) fromIndex = 0;\n        }\n    } else fromIndex = 0;\n    re = $75312021f59ef5f6$exports(searchElement);\n    im = $97e9e15ff77fcffa$exports(searchElement);\n    buf = this._buffer;\n    for(i = fromIndex; i < this._length; i++){\n        idx = 2 * i;\n        if (re === buf[idx] && im === buf[idx + 1]) return i;\n    }\n    return -1;\n});\n/**\n* Returns a new string by concatenating all array elements.\n*\n* @name join\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {string} [separator=','] - element separator\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a string\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.join();\n* // returns '1 + 1i,2 + 2i'\n*\n* str = arr.join( '/' );\n* // returns '1 + 1i/2 + 2i'\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'join', function join(separator) {\n    var out;\n    var buf;\n    var sep;\n    var i;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (arguments.length === 0) sep = ',';\n    else if ($2a5f909076b7a477$exports(separator)) sep = separator;\n    else throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a string. Value: `%s`.', separator));\n    out = [];\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++)out.push($b5346cacdcd1b519$var$getComplex128(buf, i).toString());\n    return out.join(sep);\n});\n/**\n* Returns an iterator for iterating over each index key in a typed array.\n*\n* @name keys\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var iter = arr.keys();\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* var bool = iter.next().done;\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'keys', function keys() {\n    var self;\n    var iter;\n    var len;\n    var FLG;\n    var i;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    self = this;\n    len = this._length;\n    // Initialize an iteration index:\n    i = -1;\n    // Create an iterator protocol-compliant object:\n    iter = {};\n    $dfd4cfb9f136c5d5$exports(iter, 'next', next);\n    $dfd4cfb9f136c5d5$exports(iter, 'return', end);\n    if ($b1dd39231526b140$exports) $dfd4cfb9f136c5d5$exports(iter, $b1dd39231526b140$exports, factory);\n    return iter;\n    /**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function next() {\n        i += 1;\n        if (FLG || i >= len) return {\n            'done': true\n        };\n        return {\n            'value': i,\n            'done': false\n        };\n    }\n    /**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function end(value) {\n        FLG = true;\n        if (arguments.length) return {\n            'value': value,\n            'done': true\n        };\n        return {\n            'done': true\n        };\n    }\n    /**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/ function factory() {\n        return self.keys();\n    }\n});\n/**\n* Returns the last index at which a given element can be found.\n*\n* @name lastIndexOf\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - element to find\n* @param {integer} [fromIndex] - index at which to start searching backward (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 3.0, -3.0 ], 4 );\n*\n* var idx = arr.lastIndexOf( new Complex128( 3.0, -3.0 ) );\n* // returns 4\n*\n* idx = arr.lastIndexOf( new Complex128( 3.0, -3.0 ), 3 );\n* // returns 2\n*\n* idx = arr.lastIndexOf( new Complex128( 5.0, -5.0 ), 3 );\n* // returns -1\n*\n* idx = arr.lastIndexOf( new Complex128( 2.0, -2.0 ), -3 );\n* // returns 1\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'lastIndexOf', function lastIndexOf(searchElement, fromIndex) {\n    var buf;\n    var idx;\n    var re;\n    var im;\n    var i;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$7911d5483bd25b55$exports(searchElement)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a complex number. Value: `%s`.', searchElement));\n    if (arguments.length > 1) {\n        if (!$009faf297be97aa1$exports(fromIndex)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex));\n        if (fromIndex >= this._length) fromIndex = this._length - 1;\n        else if (fromIndex < 0) fromIndex += this._length;\n    } else fromIndex = this._length - 1;\n    re = $75312021f59ef5f6$exports(searchElement);\n    im = $97e9e15ff77fcffa$exports(searchElement);\n    buf = this._buffer;\n    for(i = fromIndex; i >= 0; i--){\n        idx = 2 * i;\n        if (re === buf[idx] && im === buf[idx + 1]) return i;\n    }\n    return -1;\n});\n/**\n* Returns a new array with each element being the result of a provided callback function.\n*\n* @name map\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} fcn - callback function\n* @param {*} [thisArg] - callback function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex128Array} complex number array\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function scale( v, i ) {\n*     return new Complex128( 2.0*real( v ), 2.0*imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var out = arr.map( scale );\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 2.0\n*\n* var im = imag( z );\n* // returns -2.0\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'map', function map(fcn, thisArg) {\n    var outbuf;\n    var buf;\n    var out;\n    var i;\n    var v;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(fcn)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', fcn));\n    buf = this._buffer;\n    out = new this.constructor(this._length);\n    outbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n    for(i = 0; i < this._length; i++){\n        v = fcn.call(thisArg, $b5346cacdcd1b519$var$getComplex128(buf, i), i, this);\n        if ($7911d5483bd25b55$exports(v)) {\n            outbuf[2 * i] = $75312021f59ef5f6$exports(v);\n            outbuf[2 * i + 1] = $97e9e15ff77fcffa$exports(v);\n        } else if ($121906abae93f5cb$exports(v) && v.length === 2) {\n            outbuf[2 * i] = v[0];\n            outbuf[2 * i + 1] = v[1];\n        } else throw new TypeError($5a5504e40381a222$exports('invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v));\n    }\n    return out;\n});\n/**\n* Applies a provided callback function to each element of the array, in order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduce\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n* var cadd = require( '@stdlib/complex/float64/base/add' );\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.reduce( cadd );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 6.0\n*\n* var im = imag( z );\n* // returns 6.0\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'reduce', function reduce(reducer, initialValue) {\n    var buf;\n    var acc;\n    var len;\n    var v;\n    var i;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(reducer)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', reducer));\n    buf = this._buffer;\n    len = this._length;\n    if (arguments.length > 1) {\n        acc = initialValue;\n        i = 0;\n    } else {\n        if (len === 0) throw new Error('invalid operation. If not provided an initial value, an array must contain at least one element.');\n        acc = $b5346cacdcd1b519$var$getComplex128(buf, 0);\n        i = 1;\n    }\n    for(; i < len; i++){\n        v = $b5346cacdcd1b519$var$getComplex128(buf, i);\n        acc = reducer(acc, v, i, this);\n    }\n    return acc;\n});\n/**\n* Applies a provided callback function to each element of the array, in reverse order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduceRight\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n* var cadd = require( '@stdlib/complex/float64/base/add' );\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.reduceRight( cadd );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 6.0\n*\n* var im = imag( z );\n* // returns 6.0\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'reduceRight', function reduceRight(reducer, initialValue) {\n    var buf;\n    var acc;\n    var len;\n    var v;\n    var i;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(reducer)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', reducer));\n    buf = this._buffer;\n    len = this._length;\n    if (arguments.length > 1) {\n        acc = initialValue;\n        i = len - 1;\n    } else {\n        if (len === 0) throw new Error('invalid operation. If not provided an initial value, an array must contain at least one element.');\n        acc = $b5346cacdcd1b519$var$getComplex128(buf, len - 1);\n        i = len - 2;\n    }\n    for(; i >= 0; i--){\n        v = $b5346cacdcd1b519$var$getComplex128(buf, i);\n        acc = reducer(acc, v, i, this);\n    }\n    return acc;\n});\n/**\n* Reverses an array in-place.\n*\n* @name reverse\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} reversed array\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.reverse();\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 3.0\n*\n* var im = imag( z );\n* // returns 3.0\n*\n* z = out.get( 1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns 2.0\n*\n* z = out.get( 2 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns 1.0\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'reverse', function reverse() {\n    var buf;\n    var tmp;\n    var len;\n    var N;\n    var i;\n    var j;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    len = this._length;\n    buf = this._buffer;\n    N = $19a18984922c6b5f$exports(len / 2);\n    for(i = 0; i < N; i++){\n        j = len - i - 1;\n        tmp = buf[2 * i];\n        buf[2 * i] = buf[2 * j];\n        buf[2 * j] = tmp;\n        tmp = buf[2 * i + 1];\n        buf[2 * i + 1] = buf[2 * j + 1];\n        buf[2 * j + 1] = tmp;\n    }\n    return this;\n});\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, real or complex, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values as intended.\n*\n* @name set\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be either a complex number, an array-like object, or a complex number array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( 10 );\n*\n* var z = arr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'set', function set(value) {\n    /* eslint-disable no-underscore-dangle */ var sbuf;\n    var idx;\n    var buf;\n    var tmp;\n    var flg;\n    var N;\n    var v;\n    var i;\n    var j;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    buf = this._buffer;\n    if (arguments.length > 1) {\n        idx = arguments[1];\n        if (!$b5346cacdcd1b519$require$isNonNegativeInteger(idx)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx));\n    } else idx = 0;\n    if ($7911d5483bd25b55$exports(value)) {\n        if (idx >= this._length) throw new RangeError($5a5504e40381a222$exports('invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx));\n        idx *= 2;\n        buf[idx] = $75312021f59ef5f6$exports(value);\n        buf[idx + 1] = $97e9e15ff77fcffa$exports(value);\n        return;\n    }\n    if ($b5346cacdcd1b519$var$isComplexArray(value)) {\n        N = value._length;\n        if (idx + N > this._length) throw new RangeError('invalid arguments. Target array lacks sufficient storage to accommodate source values.');\n        sbuf = value._buffer;\n        // Check for overlapping memory...\n        j = buf.byteOffset + idx * $b5346cacdcd1b519$var$BYTES_PER_ELEMENT;\n        if (sbuf.buffer === buf.buffer && sbuf.byteOffset < j && sbuf.byteOffset + sbuf.byteLength > j) {\n            // We need to copy source values...\n            tmp = new $688bf0eeb5997346$exports(sbuf.length);\n            for(i = 0; i < sbuf.length; i++)tmp[i] = sbuf[i];\n            sbuf = tmp;\n        }\n        idx *= 2;\n        j = 0;\n        for(i = 0; i < N; i++){\n            buf[idx] = sbuf[j];\n            buf[idx + 1] = sbuf[j + 1];\n            idx += 2; // stride\n            j += 2; // stride\n        }\n        return;\n    }\n    if ($b52cee4fbc0f7b72$exports(value)) {\n        // Detect whether we've been provided an array of complex numbers...\n        N = value.length;\n        for(i = 0; i < N; i++)if (!$7911d5483bd25b55$exports(value[i])) {\n            flg = true;\n            break;\n        }\n        // If an array does not contain only complex numbers, then we assume interleaved real and imaginary components...\n        if (flg) {\n            if (!$4d1b28d3c34f95aa$exports(N)) throw new RangeError($5a5504e40381a222$exports('invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', N));\n            if (idx + N / 2 > this._length) throw new RangeError('invalid arguments. Target array lacks sufficient storage to accommodate source values.');\n            sbuf = value;\n            // Check for overlapping memory...\n            j = buf.byteOffset + idx * $b5346cacdcd1b519$var$BYTES_PER_ELEMENT;\n            if (sbuf.buffer === buf.buffer && sbuf.byteOffset < j && sbuf.byteOffset + sbuf.byteLength > j) {\n                // We need to copy source values...\n                tmp = new $688bf0eeb5997346$exports(N);\n                for(i = 0; i < N; i++)tmp[i] = sbuf[i];\n                sbuf = tmp;\n            }\n            idx *= 2;\n            N /= 2;\n            j = 0;\n            for(i = 0; i < N; i++){\n                buf[idx] = sbuf[j];\n                buf[idx + 1] = sbuf[j + 1];\n                idx += 2; // stride\n                j += 2; // stride\n            }\n            return;\n        }\n        // If an array contains only complex numbers, then we need to extract real and imaginary components...\n        if (idx + N > this._length) throw new RangeError('invalid arguments. Target array lacks sufficient storage to accommodate source values.');\n        idx *= 2;\n        for(i = 0; i < N; i++){\n            v = value[i];\n            buf[idx] = $75312021f59ef5f6$exports(v);\n            buf[idx + 1] = $97e9e15ff77fcffa$exports(v);\n            idx += 2; // stride\n        }\n        return;\n    }\n    throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `%s`.', value));\n/* eslint-enable no-underscore-dangle */ });\n/**\n* Copies a portion of a typed array to a new typed array.\n*\n* @name slice\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {Complex128Array} complex number array\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var out = arr.slice();\n* // returns <Complex128Array>\n*\n* var len = out.length;\n* // returns 5\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns -1.0\n*\n* z = out.get( len-1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 5.0\n*\n* im = imag( z );\n* // returns -5.0\n*\n* out = arr.slice( 1, -2 );\n* // returns <Complex128Array>\n*\n* len = out.length;\n* // returns 2\n*\n* z = out.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns -2.0\n*\n* z = out.get( len-1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 3.0\n*\n* im = imag( z );\n* // returns -3.0\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'slice', function slice(start, end) {\n    var outlen;\n    var outbuf;\n    var out;\n    var idx;\n    var buf;\n    var len;\n    var i;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    buf = this._buffer;\n    len = this._length;\n    if (arguments.length === 0) {\n        start = 0;\n        end = len;\n    } else {\n        if (!$009faf297be97aa1$exports(start)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an integer. Value: `%s`.', start));\n        if (start < 0) {\n            start += len;\n            if (start < 0) start = 0;\n        }\n        if (arguments.length === 1) end = len;\n        else {\n            if (!$009faf297be97aa1$exports(end)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', end));\n            if (end < 0) {\n                end += len;\n                if (end < 0) end = 0;\n            } else if (end > len) end = len;\n        }\n    }\n    if (start < end) outlen = end - start;\n    else outlen = 0;\n    out = new this.constructor(outlen);\n    outbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n    for(i = 0; i < outlen; i++){\n        idx = 2 * (i + start);\n        outbuf[2 * i] = buf[idx];\n        outbuf[2 * i + 1] = buf[idx + 1];\n    }\n    return out;\n});\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function.\n*\n* @name some\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var bool = arr.some( predicate );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'some', function some(predicate, thisArg) {\n    var buf;\n    var i;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++){\n        if (predicate.call(thisArg, $b5346cacdcd1b519$var$getComplex128(buf, i), i, this)) return true;\n    }\n    return false;\n});\n/**\n* Sorts an array in-place.\n*\n* @name sort\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} compareFcn - comparison function\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex128Array} sorted array\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function compare( a, b ) {\n*     var re1;\n*     var re2;\n*     var im1;\n*     var im2;\n*     re1 = real( a );\n*     re2 = real( b );\n*     if ( re1 < re2 ) {\n*         return -1;\n*     }\n*     if ( re1 > re2 ) {\n*         return 1;\n*     }\n*     im1 = imag( a );\n*     im2 = imag( b );\n*     if ( im1 < im2 ) {\n*         return -1;\n*     }\n*     if ( im1 > im2 ) {\n*         return 1;\n*     }\n*     return 0;\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 3.0, -3.0 ], 0 );\n* arr.set( [ 1.0, -1.0 ], 1 );\n* arr.set( [ 2.0, -2.0 ], 2 );\n*\n* var out = arr.sort( compare );\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns -1.0\n*\n* z = out.get( 1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns -2.0\n*\n* z = out.get( 2 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 3.0\n*\n* im = imag( z );\n* // returns -3.0\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'sort', function sort(compareFcn) {\n    var tmp;\n    var buf;\n    var len;\n    var i;\n    var j;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(compareFcn)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', compareFcn));\n    buf = this._buffer;\n    len = this._length;\n    tmp = [];\n    for(i = 0; i < len; i++)tmp.push($b5346cacdcd1b519$var$getComplex128(buf, i));\n    tmp.sort(compareFcn);\n    for(i = 0; i < len; i++){\n        j = 2 * i;\n        buf[j] = $75312021f59ef5f6$exports(tmp[i]);\n        buf[j + 1] = $97e9e15ff77fcffa$exports(tmp[i]);\n    }\n    return this;\n});\n/**\n* Creates a new typed array view over the same underlying `ArrayBuffer` and with the same underlying data type as the host array.\n*\n* @name subarray\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {Complex64Array} subarray\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var subarr = arr.subarray();\n* // returns <Complex128Array>\n*\n* var len = subarr.length;\n* // returns 5\n*\n* var z = subarr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns -1.0\n*\n* z = subarr.get( len-1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 5.0\n*\n* im = imag( z );\n* // returns -5.0\n*\n* subarr = arr.subarray( 1, -2 );\n* // returns <Complex128Array>\n*\n* len = subarr.length;\n* // returns 2\n*\n* z = subarr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns -2.0\n*\n* z = subarr.get( len-1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 3.0\n*\n* im = imag( z );\n* // returns -3.0\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'subarray', function subarray(begin, end) {\n    var offset;\n    var buf;\n    var len;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    buf = this._buffer;\n    len = this._length;\n    if (arguments.length === 0) {\n        begin = 0;\n        end = len;\n    } else {\n        if (!$009faf297be97aa1$exports(begin)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an integer. Value: `%s`.', begin));\n        if (begin < 0) {\n            begin += len;\n            if (begin < 0) begin = 0;\n        }\n        if (arguments.length === 1) end = len;\n        else {\n            if (!$009faf297be97aa1$exports(end)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', end));\n            if (end < 0) {\n                end += len;\n                if (end < 0) end = 0;\n            } else if (end > len) end = len;\n        }\n    }\n    if (begin >= len) {\n        len = 0;\n        offset = buf.byteLength;\n    } else if (begin >= end) {\n        len = 0;\n        offset = buf.byteOffset + begin * $b5346cacdcd1b519$var$BYTES_PER_ELEMENT;\n    } else {\n        len = end - begin;\n        offset = buf.byteOffset + begin * $b5346cacdcd1b519$var$BYTES_PER_ELEMENT;\n    }\n    return new this.constructor(buf.buffer, offset, len < 0 ? 0 : len);\n});\n/**\n* Serializes an array as a locale-specific string.\n*\n* @name toLocaleString\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {(string|Array<string>)} [locales] - locale identifier(s)\n* @param {Object} [options] - configuration options\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a string or an array of strings\n* @throws {TypeError} options argument must be an object\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.toLocaleString();\n* // returns '1 + 1i,2 + 2i'\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'toLocaleString', function toLocaleString(locales, options) {\n    var opts;\n    var loc;\n    var out;\n    var buf;\n    var i;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (arguments.length === 0) loc = [];\n    else if ($2a5f909076b7a477$exports(locales) || $b5346cacdcd1b519$require$isStringArray(locales)) loc = locales;\n    else throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a string or an array of strings. Value: `%s`.', locales));\n    if (arguments.length < 2) opts = {};\n    else if ($01b2bacec2990d67$exports(options)) opts = options;\n    else throw new TypeError($5a5504e40381a222$exports('invalid argument. Options argument must be an object. Value: `%s`.', options));\n    buf = this._buffer;\n    out = [];\n    for(i = 0; i < this._length; i++)out.push($b5346cacdcd1b519$var$getComplex128(buf, i).toLocaleString(loc, opts));\n    return out.join(',');\n});\n/**\n* Returns a new typed array containing the elements in reversed order.\n*\n* @name toReversed\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} reversed array\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.toReversed();\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 3.0\n*\n* var im = imag( z );\n* // returns 3.0\n*\n* z = out.get( 1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns 2.0\n*\n* z = out.get( 2 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns 1.0\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'toReversed', function toReversed() {\n    var outbuf;\n    var out;\n    var len;\n    var buf;\n    var i;\n    var j;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    len = this._length;\n    out = new this.constructor(len);\n    buf = this._buffer;\n    outbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n    for(i = 0; i < len; i++){\n        j = len - i - 1;\n        outbuf[2 * i] = buf[2 * j];\n        outbuf[2 * i + 1] = buf[2 * j + 1];\n    }\n    return out;\n});\n/**\n* Returns a new typed array containing the elements in sorted order.\n*\n* @name toSorted\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} compareFcn - comparison function\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex128Array} sorted array\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function compare( a, b ) {\n*     var re1;\n*     var re2;\n*     var im1;\n*     var im2;\n*     re1 = real( a );\n*     re2 = real( b );\n*     if ( re1 < re2 ) {\n*         return -1;\n*     }\n*     if ( re1 > re2 ) {\n*         return 1;\n*     }\n*     im1 = imag( a );\n*     im2 = imag( b );\n*     if ( im1 < im2 ) {\n*         return -1;\n*     }\n*     if ( im1 > im2 ) {\n*         return 1;\n*     }\n*     return 0;\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 3.0, -3.0 ], 0 );\n* arr.set( [ 1.0, -1.0 ], 1 );\n* arr.set( [ 2.0, -2.0 ], 2 );\n*\n* var out = arr.sort( compare );\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns -1.0\n*\n* z = out.get( 1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns -2.0\n*\n* z = out.get( 2 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 3.0\n*\n* im = imag( z );\n* // returns -3.0\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'toSorted', function toSorted(compareFcn) {\n    var tmp;\n    var buf;\n    var len;\n    var i;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$39cac8b951c1ded2$exports(compareFcn)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', compareFcn));\n    buf = this._buffer;\n    len = this._length;\n    tmp = [];\n    for(i = 0; i < len; i++)tmp.push($b5346cacdcd1b519$var$getComplex128(buf, i));\n    tmp.sort(compareFcn);\n    return new $b5346cacdcd1b519$var$Complex128Array(tmp);\n});\n/**\n* Serializes an array as a string.\n*\n* @name toString\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.toString();\n* // returns '1 + 1i,2 + 2i'\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'toString', function toString() {\n    var out;\n    var buf;\n    var i;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    out = [];\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++)out.push($b5346cacdcd1b519$var$getComplex128(buf, i).toString());\n    return out.join(',');\n});\n/**\n* Returns an iterator for iterating over each value in a typed array.\n*\n* @name values\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n*\n* var iter = arr.values();\n*\n* var v = iter.next().value;\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 1.0\n*\n* var im = imag( v );\n* // returns -1.0\n*\n* v = iter.next().value;\n* // returns <Complex128>\n*\n* re = real( v );\n* // returns 2.0\n*\n* im = imag( v );\n* // returns -2.0\n*\n* var bool = iter.next().done;\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'values', function values() {\n    var iter;\n    var self;\n    var len;\n    var FLG;\n    var buf;\n    var i;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    self = this;\n    buf = this._buffer;\n    len = this._length;\n    // Initialize an iteration index:\n    i = -1;\n    // Create an iterator protocol-compliant object:\n    iter = {};\n    $dfd4cfb9f136c5d5$exports(iter, 'next', next);\n    $dfd4cfb9f136c5d5$exports(iter, 'return', end);\n    if ($b1dd39231526b140$exports) $dfd4cfb9f136c5d5$exports(iter, $b1dd39231526b140$exports, factory);\n    return iter;\n    /**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function next() {\n        i += 1;\n        if (FLG || i >= len) return {\n            'done': true\n        };\n        return {\n            'value': $b5346cacdcd1b519$var$getComplex128(buf, i),\n            'done': false\n        };\n    }\n    /**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function end(value) {\n        FLG = true;\n        if (arguments.length) return {\n            'value': value,\n            'done': true\n        };\n        return {\n            'done': true\n        };\n    }\n    /**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/ function factory() {\n        return self.values();\n    }\n});\n/**\n* Returns a new typed array with the element at a provided index replaced with a provided value.\n*\n* @name with\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} index - element index\n* @param {ComplexLike} value - new value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {TypeError} second argument must be a complex number\n* @returns {Complex128Array} new typed array\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.with( 0, new Complex128( 4.0, 4.0 ) );\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 4.0\n*\n* var im = imag( z );\n* // returns 4.0\n*/ $dfd4cfb9f136c5d5$exports($b5346cacdcd1b519$var$Complex128Array.prototype, 'with', function copyWith(index, value) {\n    var buf;\n    var out;\n    var len;\n    if (!$b5346cacdcd1b519$var$isComplexArray(this)) throw new TypeError('invalid invocation. `this` is not a complex number array.');\n    if (!$009faf297be97aa1$exports(index)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an integer. Value: `%s`.', index));\n    len = this._length;\n    if (index < 0) index += len;\n    if (index < 0 || index >= len) throw new RangeError($5a5504e40381a222$exports('invalid argument. Index argument is out-of-bounds. Value: `%s`.', index));\n    if (!$7911d5483bd25b55$exports(value)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be a complex number. Value: `%s`.', value));\n    out = new this.constructor(this._buffer);\n    buf = out._buffer; // eslint-disable-line no-underscore-dangle\n    buf[2 * index] = $75312021f59ef5f6$exports(value);\n    buf[2 * index + 1] = $97e9e15ff77fcffa$exports(value);\n    return out;\n});\n// EXPORTS //\n$b5346cacdcd1b519$exports = $b5346cacdcd1b519$var$Complex128Array;\n\n\n// EXPORTS //\n$b43bc7a4d963783e$exports = $b5346cacdcd1b519$exports;\n\n\nvar $12973d080ce9e731$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $56183b3879b1a53c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ /* eslint-disable no-restricted-syntax, no-invalid-this */ 'use strict';\n\nvar $56183b3879b1a53c$require$isNonNegativeInteger = $0bdd74f709a75343$exports.isPrimitive;\n\n\n\n\n\nvar $56183b3879b1a53c$require$isBoolean = $195eb9bd8e34a246$exports.isPrimitive;\n\nvar $56183b3879b1a53c$require$isInteger = $0654f579c472fc00$exports.isPrimitive;\n\nvar $56183b3879b1a53c$require$isString = $2a5f909076b7a477$exports.isPrimitive;\n\nvar $56183b3879b1a53c$require$isStringArray = $2f257dbaf842ff48$exports.primitives;\n\n\n\n\n\n\n\n\n\n\nvar $60ee89e662acbb14$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {Array} output array\n*/ function $60ee89e662acbb14$var$fromIterator(it) {\n    var out;\n    var v;\n    out = [];\n    while(true){\n        v = it.next();\n        if (v.done) break;\n        out.push($7ddb66cb80aa5581$exports(v.value));\n    }\n    return out;\n}\n// EXPORTS //\n$60ee89e662acbb14$exports = $60ee89e662acbb14$var$fromIterator;\n\n\nvar $e2dd71999b31ec27$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {Array} output array\n*/ function $e2dd71999b31ec27$var$fromIteratorMap(it, clbk, thisArg) {\n    var out;\n    var v;\n    var i;\n    out = [];\n    i = -1;\n    while(true){\n        v = it.next();\n        if (v.done) break;\n        i += 1;\n        out.push($7ddb66cb80aa5581$exports(clbk.call(thisArg, v.value, i)));\n    }\n    return out;\n}\n// EXPORTS //\n$e2dd71999b31ec27$exports = $e2dd71999b31ec27$var$fromIteratorMap;\n\n\nvar $7270a14dd0e96177$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Fills an output array with \"boolean\" values.\n*\n* @private\n* @param {Uint8Array} buf - output array\n* @param {Array} arr - input array\n* @returns {Uint8Array} output array\n*/ function $7270a14dd0e96177$var$fromArray(buf, arr) {\n    var len;\n    var i;\n    len = arr.length;\n    for(i = 0; i < len; i++)buf[i] = $7ddb66cb80aa5581$exports(arr[i]);\n    return buf;\n}\n// EXPORTS //\n$7270a14dd0e96177$exports = $7270a14dd0e96177$var$fromArray;\n\n\n// VARIABLES //\nvar $56183b3879b1a53c$var$BYTES_PER_ELEMENT = $b1ee90e09bc85e12$exports.BYTES_PER_ELEMENT;\nvar $56183b3879b1a53c$var$HAS_ITERATOR_SYMBOL = $d1469be5794ac8a0$exports();\n// FUNCTIONS //\n/**\n* Returns a boolean indicating if a value is a `BooleanArray`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `BooleanArray`\n*/ function $56183b3879b1a53c$var$isBooleanArray(value) {\n    return typeof value === 'object' && value !== null && value.constructor.name === 'BooleanArray' && value.BYTES_PER_ELEMENT === $56183b3879b1a53c$var$BYTES_PER_ELEMENT;\n}\n/**\n* Returns a boolean indicating if a value is a boolean typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean typed array constructor\n*/ function $56183b3879b1a53c$var$isBooleanArrayConstructor(value) {\n    return value === $56183b3879b1a53c$var$BooleanArray;\n}\n// MAIN //\n/**\n* Boolean array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or an iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @returns {BooleanArray} boolean array\n*\n* @example\n* var arr = new BooleanArray();\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new BooleanArray( 2 );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new BooleanArray( [ true, false ] );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new BooleanArray( buf );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 16\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new BooleanArray( buf, 8 );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 8\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new BooleanArray( buf, 8, 2 );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*/ function $56183b3879b1a53c$var$BooleanArray() {\n    var byteOffset;\n    var nargs;\n    var buf;\n    var len;\n    var arg;\n    nargs = arguments.length;\n    if (!(this instanceof $56183b3879b1a53c$var$BooleanArray)) {\n        if (nargs === 0) return new $56183b3879b1a53c$var$BooleanArray();\n        if (nargs === 1) return new $56183b3879b1a53c$var$BooleanArray(arguments[0]);\n        if (nargs === 2) return new $56183b3879b1a53c$var$BooleanArray(arguments[0], arguments[1]);\n        return new $56183b3879b1a53c$var$BooleanArray(arguments[0], arguments[1], arguments[2]);\n    }\n    // Create the underlying data buffer...\n    if (nargs === 0) buf = new $b1ee90e09bc85e12$exports(0); // backward-compatibility\n    else if (nargs === 1) {\n        arg = arguments[0];\n        if ($56183b3879b1a53c$require$isNonNegativeInteger(arg)) buf = new $b1ee90e09bc85e12$exports(arg);\n        else if ($b52cee4fbc0f7b72$exports(arg)) buf = $7270a14dd0e96177$exports(new $b1ee90e09bc85e12$exports(arg.length), arg);\n        else if ($0c6292c314072f8d$exports(arg)) buf = new $b1ee90e09bc85e12$exports(arg);\n        else if ($01b2bacec2990d67$exports(arg)) {\n            if ($56183b3879b1a53c$var$HAS_ITERATOR_SYMBOL === false) throw new TypeError($5a5504e40381a222$exports('invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', arg));\n            if (!$39cac8b951c1ded2$exports(arg[$b1dd39231526b140$exports])) throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arg));\n            buf = arg[$b1dd39231526b140$exports]();\n            if (!$39cac8b951c1ded2$exports(buf.next)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arg));\n            buf = new $b1ee90e09bc85e12$exports($60ee89e662acbb14$exports(buf));\n        } else throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arg));\n    } else {\n        buf = arguments[0];\n        if (!$0c6292c314072f8d$exports(buf)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf));\n        byteOffset = arguments[1];\n        if (!$56183b3879b1a53c$require$isNonNegativeInteger(byteOffset)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset));\n        if (nargs === 2) buf = new $b1ee90e09bc85e12$exports(buf, byteOffset);\n        else {\n            len = arguments[2];\n            if (!$56183b3879b1a53c$require$isNonNegativeInteger(len)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Length must be a nonnegative integer. Value: `%s`.', len));\n            if (len * $56183b3879b1a53c$var$BYTES_PER_ELEMENT > buf.byteLength - byteOffset) throw new RangeError($5a5504e40381a222$exports('invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len * $56183b3879b1a53c$var$BYTES_PER_ELEMENT));\n            buf = new $b1ee90e09bc85e12$exports(buf, byteOffset, len);\n        }\n    }\n    $dfd4cfb9f136c5d5$exports(this, '_buffer', buf);\n    $dfd4cfb9f136c5d5$exports(this, '_length', buf.length);\n    return this;\n}\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof BooleanArray\n* @readonly\n* @type {PositiveInteger}\n* @default 1\n*\n* @example\n* var nbytes = BooleanArray.BYTES_PER_ELEMENT;\n* // returns 1\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray, 'BYTES_PER_ELEMENT', $56183b3879b1a53c$var$BYTES_PER_ELEMENT);\n/**\n* Constructor name.\n*\n* @name name\n* @memberof BooleanArray\n* @readonly\n* @type {string}\n* @default 'BooleanArray'\n*\n* @example\n* var str = BooleanArray.name;\n* // returns 'BooleanArray'\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray, 'name', 'BooleanArray');\n/**\n* Creates a new boolean array from an array-like object or an iterable.\n*\n* @name from\n* @memberof BooleanArray\n* @type {Function}\n* @param {(Collection|Iterable)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @returns {BooleanArray} boolean array\n*\n* @example\n* var arr = BooleanArray.from( [ true, false ] );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* function clbk( v ) {\n*     return !v;\n* }\n*\n* var arr = BooleanArray.from( [ true, false ], clbk );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray, 'from', function from(src) {\n    var thisArg;\n    var nargs;\n    var clbk;\n    var out;\n    var buf;\n    var tmp;\n    var get;\n    var len;\n    var i;\n    if (!$39cac8b951c1ded2$exports(this)) throw new TypeError('invalid invocation. `this` context must be a constructor.');\n    if (!$56183b3879b1a53c$var$isBooleanArrayConstructor(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    nargs = arguments.length;\n    if (nargs > 1) {\n        clbk = arguments[1];\n        if (!$39cac8b951c1ded2$exports(clbk)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be a function. Value: `%s`.', clbk));\n        if (nargs > 2) thisArg = arguments[2];\n    }\n    if ($b52cee4fbc0f7b72$exports(src)) {\n        if (clbk) {\n            len = src.length;\n            if (src.get && src.set) get = $dfd66f945cb96da9$exports('default');\n            else get = $88f5ca10627f0cae$exports('default');\n            out = new this(len);\n            buf = out._buffer; // eslint-disable-line no-underscore-dangle\n            for(i = 0; i < len; i++)buf[i] = $7ddb66cb80aa5581$exports(clbk.call(thisArg, get(src, i), i));\n            return out;\n        }\n        return new this(src);\n    }\n    if ($01b2bacec2990d67$exports(src) && $56183b3879b1a53c$var$HAS_ITERATOR_SYMBOL && $39cac8b951c1ded2$exports(src[$b1dd39231526b140$exports])) {\n        buf = src[$b1dd39231526b140$exports]();\n        if (!$39cac8b951c1ded2$exports(buf.next)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src));\n        if (clbk) tmp = $e2dd71999b31ec27$exports(buf, clbk, thisArg);\n        else tmp = $60ee89e662acbb14$exports(buf);\n        len = tmp.length;\n        out = new this(len);\n        buf = out._buffer; // eslint-disable-line no-underscore-dangle\n        for(i = 0; i < len; i++)buf[i] = tmp[i];\n        return out;\n    }\n    throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src));\n});\n/**\n* Creates a new boolean array from a variable number of arguments.\n*\n* @name of\n* @memberof BooleanArray\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a boolean array\n* @returns {BooleanArray} boolean array\n*\n* @example\n* var arr = BooleanArray.of( true, true, true, true );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 4\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray, 'of', function of() {\n    var args;\n    var i;\n    if (!$39cac8b951c1ded2$exports(this)) throw new TypeError('invalid invocation. `this` context must be a constructor.');\n    if (!$56183b3879b1a53c$var$isBooleanArrayConstructor(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    args = [];\n    for(i = 0; i < arguments.length; i++)args.push(arguments[i]);\n    return new this(args);\n});\n/**\n* Returns an array element located at integer position (index) `i`, with support for both nonnegative and negative integer indices.\n*\n* @name at\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {integer} idx - element index\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} must provide an integer\n* @returns {(boolean|void)} array element\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var v = arr.at( 0 );\n* // returns true\n*\n* v = arr.at( -1 );\n* // returns true\n*\n* v = arr.at( 100 );\n* // returns undefined\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'at', function at(idx) {\n    var buf;\n    var len;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$56183b3879b1a53c$require$isInteger(idx)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide an integer. Value: `%s`.', idx));\n    len = this._length;\n    buf = this._buffer;\n    if (idx < 0) idx += len;\n    if (idx < 0 || idx >= len) return;\n    return $7ddb66cb80aa5581$exports(buf[idx]);\n});\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof BooleanArray.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/ $a4444f7456e1c73a$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'buffer', function get() {\n    return this._buffer.buffer;\n});\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof BooleanArray.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 10\n*/ $a4444f7456e1c73a$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'byteLength', function get() {\n    return this._buffer.byteLength;\n});\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof BooleanArray.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/ $a4444f7456e1c73a$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'byteOffset', function get() {\n    return this._buffer.byteOffset;\n});\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof BooleanArray.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 1\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 1\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'BYTES_PER_ELEMENT', $56183b3879b1a53c$var$BooleanArray.BYTES_PER_ELEMENT);\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a boolean array\n* @returns {BooleanArray} modified array\n*\n* @example\n* var arr = new BooleanArray( 4 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( false, 2 );\n* arr.set( true, 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* var v = arr.get( 2 );\n* // returns true\n*\n* v = arr.get( 3 );\n* // returns false\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'copyWithin', function copyWithin(target, start) {\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    // FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n    if (arguments.length === 2) this._buffer.copyWithin(target, start);\n    else this._buffer.copyWithin(target, start, arguments[2]);\n    return this;\n});\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {Iterator} iterator\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var it = arr.entries();\n*\n* var v = it.next().value;\n* // returns [ 0, true ]\n*\n* v = it.next().value;\n* // returns [ 1, false ]\n*\n* v = it.next().value;\n* // returns [ 2, true ]\n*\n* var bool = it.next().done;\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'entries', function entries() {\n    var self;\n    var iter;\n    var len;\n    var buf;\n    var FLG;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    self = this;\n    buf = this._buffer;\n    len = this._length;\n    // Initialize an iteration index:\n    i = -1;\n    // Create an iterator protocol-compliant object:\n    iter = {};\n    $dfd4cfb9f136c5d5$exports(iter, 'next', next);\n    $dfd4cfb9f136c5d5$exports(iter, 'return', end);\n    if ($b1dd39231526b140$exports) $dfd4cfb9f136c5d5$exports(iter, $b1dd39231526b140$exports, factory);\n    return iter;\n    /**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function next() {\n        i += 1;\n        if (FLG || i >= len) return {\n            'done': true\n        };\n        return {\n            'value': [\n                i,\n                $7ddb66cb80aa5581$exports(buf[i])\n            ],\n            'done': false\n        };\n    }\n    /**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function end(value) {\n        FLG = true;\n        if (arguments.length) return {\n            'value': value,\n            'done': true\n        };\n        return {\n            'done': true\n        };\n    }\n    /**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/ function factory() {\n        return self.entries();\n    }\n});\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function.\n*\n* @name every\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( true, 1 );\n* arr.set( true, 2 );\n*\n* var bool = arr.every( predicate );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'every', function every(predicate, thisArg) {\n    var buf;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++){\n        if (!predicate.call(thisArg, $7ddb66cb80aa5581$exports(buf[i]), i, this)) return false;\n    }\n    return true;\n});\n/**\n* Returns a modified typed array filled with a fill value.\n*\n* @name fill\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {boolean} value - fill value\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a boolean\n* @throws {TypeError} second argument must be an integer\n* @throws {TypeError} third argument must be an integer\n* @returns {BooleanArray} modified array\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.fill( true, 1 );\n*\n* var v = arr.get( 0 );\n* // returns false\n*\n* v = arr.get( 1 );\n* // returns true\n*\n* v = arr.get( 2 );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'fill', function fill(value, start, end) {\n    var buf;\n    var len;\n    var val;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$56183b3879b1a53c$require$isBoolean(value)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a boolean. Value: `%s`.', value));\n    buf = this._buffer;\n    len = this._length;\n    if (arguments.length > 1) {\n        if (!$56183b3879b1a53c$require$isInteger(start)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', start));\n        if (start < 0) {\n            start += len;\n            if (start < 0) start = 0;\n        }\n        if (arguments.length > 2) {\n            if (!$56183b3879b1a53c$require$isInteger(end)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Third argument must be an integer. Value: `%s`.', end));\n            if (end < 0) {\n                end += len;\n                if (end < 0) end = 0;\n            }\n            if (end > len) end = len;\n        } else end = len;\n    } else {\n        start = 0;\n        end = len;\n    }\n    if (value) val = 1;\n    else val = 0;\n    for(i = start; i < end; i++)buf[i] = val;\n    return this;\n});\n/**\n* Returns a new array containing the elements of an array which pass a test implemented by a predicate function.\n*\n* @name filter\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {BooleanArray} boolean array\n*\n* @example\n* function predicate( v ) {\n*     return ( v === true );\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.filter( predicate );\n* // returns <BooleanArray>\n*\n* var len = out.length;\n* // returns 2\n*\n* var v = out.get( 0 );\n* // returns true\n*\n* v = out.get( 1 );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'filter', function filter(predicate, thisArg) {\n    var buf;\n    var out;\n    var i;\n    var v;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    out = [];\n    for(i = 0; i < this._length; i++){\n        v = $7ddb66cb80aa5581$exports(buf[i]);\n        if (predicate.call(thisArg, v, i, this)) out.push(v);\n    }\n    return new this.constructor(out);\n});\n/**\n* Returns the first element in an array for which a predicate function returns a truthy value.\n*\n* @name find\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {(boolean|void)} array element or undefined\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var v = arr.find( predicate );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'find', function find(predicate, thisArg) {\n    var buf;\n    var v;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++){\n        v = $7ddb66cb80aa5581$exports(buf[i]);\n        if (predicate.call(thisArg, v, i, this)) return v;\n    }\n});\n/**\n* Returns the index of the first element in an array for which a predicate function returns a truthy value.\n*\n* @name findIndex\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var v = arr.findIndex( predicate );\n* // returns 0\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'findIndex', function findIndex(predicate, thisArg) {\n    var buf;\n    var v;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++){\n        v = $7ddb66cb80aa5581$exports(buf[i]);\n        if (predicate.call(thisArg, v, i, this)) return i;\n    }\n    return -1;\n});\n/**\n* Returns the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLast\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {(boolean|void)} array element or undefined\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var v = arr.findLast( predicate );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'findLast', function findLast(predicate, thisArg) {\n    var buf;\n    var v;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = this._length - 1; i >= 0; i--){\n        v = $7ddb66cb80aa5581$exports(buf[i]);\n        if (predicate.call(thisArg, v, i, this)) return v;\n    }\n});\n/**\n* Returns the index of the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLastIndex\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var v = arr.findLastIndex( predicate );\n* // returns 2\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'findLastIndex', function findLastIndex(predicate, thisArg) {\n    var buf;\n    var v;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = this._length - 1; i >= 0; i--){\n        v = $7ddb66cb80aa5581$exports(buf[i]);\n        if (predicate.call(thisArg, v, i, this)) return i;\n    }\n    return -1;\n});\n/**\n* Invokes a function once for each array element.\n*\n* @name forEach\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - function invocation context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n*\n* @example\n* function log( v, i ) {\n*     console.log( '%s: %s', i, v.toString() );\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* arr.forEach( log );\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'forEach', function forEach(fcn, thisArg) {\n    var buf;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$39cac8b951c1ded2$exports(fcn)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', fcn));\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++)fcn.call(thisArg, $7ddb66cb80aa5581$exports(buf[i]), i, this);\n});\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(boolean|void)} array element\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var v = arr.get( 0 );\n* // returns false\n*\n* arr.set( [ true, false ], 0 );\n*\n* v = arr.get( 0 );\n* // returns true\n*\n* v = arr.get( 100 );\n* // returns undefined\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'get', function get(idx) {\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$56183b3879b1a53c$require$isNonNegativeInteger(idx)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx));\n    if (idx >= this._length) return;\n    return $7ddb66cb80aa5581$exports(this._buffer[idx]);\n});\n/**\n* Returns a boolean indicating whether an array includes a provided value.\n*\n* @name includes\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {boolean} searchElement - search element\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a boolean value\n* @throws {TypeError} second argument must be an integer\n* @returns {boolean} boolean indicating whether an array includes a value\n*\n* @example\n* var arr = new BooleanArray( 5 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n* arr.set( true, 3 );\n* arr.set( true, 4 );\n*\n* var bool = arr.includes( true );\n* // returns true\n*\n* bool = arr.includes( false, 2 );\n* // returns false\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'includes', function includes(searchElement, fromIndex) {\n    var buf;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$56183b3879b1a53c$require$isBoolean(searchElement)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a boolean. Value: `%s`.', searchElement));\n    if (arguments.length > 1) {\n        if (!$56183b3879b1a53c$require$isInteger(fromIndex)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex));\n        if (fromIndex < 0) {\n            fromIndex += this._length;\n            if (fromIndex < 0) fromIndex = 0;\n        }\n    } else fromIndex = 0;\n    buf = this._buffer;\n    for(i = fromIndex; i < this._length; i++){\n        if (searchElement === $7ddb66cb80aa5581$exports(buf[i])) return true;\n    }\n    return false;\n});\n/**\n* Returns the first index at which a given element can be found.\n*\n* @name indexOf\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {boolean} searchElement - element to find\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a boolean value\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var arr = new BooleanArray( 5 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n* arr.set( true, 3 );\n* arr.set( true, 4 );\n*\n* var idx = arr.indexOf( true );\n* // returns 0\n*\n* idx = arr.indexOf( false, 2 );\n* // returns -1\n*\n* idx = arr.indexOf( false, -3 );\n* // returns -1\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'indexOf', function indexOf(searchElement, fromIndex) {\n    var buf;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$56183b3879b1a53c$require$isBoolean(searchElement)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a boolean. Value: `%s`.', searchElement));\n    if (arguments.length > 1) {\n        if (!$56183b3879b1a53c$require$isInteger(fromIndex)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex));\n        if (fromIndex < 0) {\n            fromIndex += this._length;\n            if (fromIndex < 0) fromIndex = 0;\n        }\n    } else fromIndex = 0;\n    buf = this._buffer;\n    for(i = fromIndex; i < this._length; i++){\n        if (searchElement === $7ddb66cb80aa5581$exports(buf[i])) return i;\n    }\n    return -1;\n});\n/**\n* Returns a new string by concatenating all array elements.\n*\n* @name join\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {string} [separator=','] - element separator\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a string\n* @returns {string} string representation\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var str = arr.join();\n* // returns 'true,false,true'\n*\n* str = arr.join( '|' );\n* // returns 'true|false|true'\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'join', function join(separator) {\n    var buf;\n    var out;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (arguments.length > 0) {\n        if (!$56183b3879b1a53c$require$isString(separator)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a string. Value: `%s`.', separator));\n    } else separator = ',';\n    buf = this._buffer;\n    out = [];\n    for(i = 0; i < this._length; i++)if (buf[i]) out.push('true');\n    else out.push('false');\n    return out.join(separator);\n});\n/**\n* Returns an iterator for iterating over each index key in a typed array.\n*\n* @name keys\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {Iterator} iterator\n*\n* @example\n* var arr = new BooleanArray( 2 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n*\n* var iter = arr.keys();\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* var bool = iter.next().done;\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'keys', function keys() {\n    var self;\n    var iter;\n    var len;\n    var FLG;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    self = this;\n    len = this._length;\n    // Initialize an iteration index:\n    i = -1;\n    // Create an iterator protocol-compliant object:\n    iter = {};\n    $dfd4cfb9f136c5d5$exports(iter, 'next', next);\n    $dfd4cfb9f136c5d5$exports(iter, 'return', end);\n    if ($b1dd39231526b140$exports) $dfd4cfb9f136c5d5$exports(iter, $b1dd39231526b140$exports, factory);\n    return iter;\n    /**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function next() {\n        i += 1;\n        if (FLG || i >= len) return {\n            'done': true\n        };\n        return {\n            'value': i,\n            'done': false\n        };\n    }\n    /**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function end(value) {\n        FLG = true;\n        if (arguments.length) return {\n            'value': value,\n            'done': true\n        };\n        return {\n            'done': true\n        };\n    }\n    /**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/ function factory() {\n        return self.keys();\n    }\n});\n/**\n* Returns the last index at which a given element can be found.\n*\n* @name lastIndexOf\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {boolean} searchElement - element to find\n* @param {integer} [fromIndex] - starting index (inclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a boolean value\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var arr = new BooleanArray( 5 );\n*\n* arr.set( true, 0 );\n* arr.set( true, 1 );\n* arr.set( true, 2 );\n* arr.set( false, 3 );\n* arr.set( true, 4 );\n*\n* var idx = arr.lastIndexOf( true );\n* // returns 4\n*\n* idx = arr.lastIndexOf( false, 2 );\n* // returns -1\n*\n* idx = arr.lastIndexOf( false, -3 );\n* // returns -1\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'lastIndexOf', function lastIndexOf(searchElement, fromIndex) {\n    var buf;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$56183b3879b1a53c$require$isBoolean(searchElement)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a boolean. Value: `%s`.', searchElement));\n    if (arguments.length > 1) {\n        if (!$56183b3879b1a53c$require$isInteger(fromIndex)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex));\n        if (fromIndex >= this._length) fromIndex = this._length - 1;\n        else if (fromIndex < 0) fromIndex += this._length;\n    } else fromIndex = this._length - 1;\n    buf = this._buffer;\n    for(i = fromIndex; i >= 0; i--){\n        if (searchElement === $7ddb66cb80aa5581$exports(buf[i])) return i;\n    }\n    return -1;\n});\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof BooleanArray.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/ $a4444f7456e1c73a$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'length', function get() {\n    return this._length;\n});\n/**\n* Returns a new array with each element being the result of a provided callback function.\n*\n* @name map\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} fcn - callback function\n* @param {*} [thisArg] - callback function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {BooleanArray} new boolean array\n*\n* @example\n* function invert( v ) {\n*     return !v;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.map( invert );\n* // returns <BooleanArray>\n*\n* var z = out.get( 0 );\n* // returns false\n*\n* z = out.get( 1 );\n* // returns true\n*\n* z = out.get( 2 );\n* // returns false\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'map', function map(fcn, thisArg) {\n    var outbuf;\n    var out;\n    var buf;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$39cac8b951c1ded2$exports(fcn)) throw new TypeError('invalid argument. First argument must be a function. Value: `%s`.', fcn);\n    buf = this._buffer;\n    out = new this.constructor(this._length);\n    outbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n    for(i = 0; i < this._length; i++)outbuf[i] = $7ddb66cb80aa5581$exports(fcn.call(thisArg, $7ddb66cb80aa5581$exports(buf[i]), i, this));\n    return out;\n});\n/**\n* Applies a provided callback function to each element of the array, in order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduce\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a boolean array\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* function reducer( acc, v ) {\n*     if ( v ) {\n*          return acc + 1;\n*     }\n*     return acc;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.reduce( reducer, 0 );\n* // returns 2\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'reduce', function reduce(reducer, initialValue) {\n    var buf;\n    var len;\n    var acc;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$39cac8b951c1ded2$exports(reducer)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', reducer));\n    buf = this._buffer;\n    len = this._length;\n    if (arguments.length > 1) {\n        acc = initialValue;\n        i = 0;\n    } else {\n        if (len === 0) throw new Error('invalid operation. If not provided an initial value, an array must contain at least one element.');\n        acc = $7ddb66cb80aa5581$exports(buf[0]);\n        i = 1;\n    }\n    for(; i < len; i++)acc = reducer(acc, $7ddb66cb80aa5581$exports(buf[i]), i, this);\n    return acc;\n});\n/**\n* Applies a provided callback function to each element of the array, in reverse order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduceRight\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a boolean array\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* function reducer( acc, v ) {\n*     if ( v ) {\n*          return acc + 1;\n*     }\n*     return acc;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.reduceRight( reducer, 0 );\n* // returns 2\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'reduceRight', function reduceRight(reducer, initialValue) {\n    var buf;\n    var len;\n    var acc;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$39cac8b951c1ded2$exports(reducer)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', reducer));\n    buf = this._buffer;\n    len = this._length;\n    if (arguments.length > 1) {\n        acc = initialValue;\n        i = len - 1;\n    } else {\n        if (len === 0) throw new Error('invalid operation. If not provided an initial value, an array must contain at least one element.');\n        acc = $7ddb66cb80aa5581$exports(buf[len - 1]);\n        i = len - 2;\n    }\n    for(; i >= 0; i--)acc = reducer(acc, $7ddb66cb80aa5581$exports(buf[i]), i, this);\n    return acc;\n});\n/**\n* Reverses an array in-place.\n*\n* @name reverse\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {BooleanArray} reversed array\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( false, 2 );\n*\n* var out = arr.reverse();\n* // returns <BooleanArray>\n*\n* var v = out.get( 0 );\n* // returns false\n*\n* v = out.get( 1 );\n* // returns false\n*\n* v = out.get( 2 );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'reverse', function reverse() {\n    var buf;\n    var tmp;\n    var len;\n    var N;\n    var i;\n    var j;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    buf = this._buffer;\n    len = this._length;\n    N = $19a18984922c6b5f$exports(len / 2);\n    for(i = 0; i < N; i++){\n        j = len - i - 1;\n        tmp = buf[i];\n        buf[i] = buf[j];\n        buf[j] = tmp;\n    }\n    return this;\n});\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values, as intended.\n*\n* @name set\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {(Collection|BooleanArray|*)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var v = arr.get( 0 );\n* // returns false\n*\n* arr.set( [ true, false ], 0 );\n*\n* v = arr.get( 0 );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'set', function set(value) {\n    var sbuf;\n    var idx;\n    var buf;\n    var tmp;\n    var N;\n    var i;\n    var j;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    buf = this._buffer;\n    if (arguments.length > 1) {\n        idx = arguments[1];\n        if (!$56183b3879b1a53c$require$isNonNegativeInteger(idx)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx));\n    } else idx = 0;\n    if ($b52cee4fbc0f7b72$exports(value)) {\n        N = value.length;\n        if (idx + N > this._length) throw new RangeError('invalid arguments. Target array lacks sufficient storage to accommodate source values.');\n        if ($56183b3879b1a53c$var$isBooleanArray(value)) sbuf = value._buffer; // eslint-disable-line no-underscore-dangle\n        else sbuf = value;\n        // Check for overlapping memory...\n        j = buf.byteOffset + idx * $56183b3879b1a53c$var$BYTES_PER_ELEMENT;\n        if (sbuf.buffer === buf.buffer && sbuf.byteOffset < j && sbuf.byteOffset + sbuf.byteLength > j) {\n            // We need to copy source values...\n            tmp = new $b1ee90e09bc85e12$exports(sbuf.length);\n            for(i = 0; i < sbuf.length; i++)tmp[i] = sbuf[i]; // TODO: handle accessor arrays\n            sbuf = tmp;\n        }\n        for(i = 0; i < N; idx++, i++)buf[idx] = sbuf[i] ? 1 : 0;\n        return;\n    }\n    if (idx >= this._length) throw new RangeError($5a5504e40381a222$exports('invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx));\n    buf[idx] = value ? 1 : 0;\n});\n/**\n* Copies a portion of a typed array to a new typed array.\n*\n* @name slice\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {integer} [begin] - start index (inclusive)\n* @param {integer} [end] - end index (exclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be integer\n* @throws {TypeError} second argument must be integer\n* @returns {BooleanArray} boolean array\n*\n* @example\n* var arr = new BooleanArray( 5 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n* arr.set( false, 3 );\n* arr.set( true, 4 );\n*\n* var out = arr.slice();\n* // returns <BooleanArray>\n*\n* var len = out.length;\n* // returns 5\n*\n* var bool = out.get( 0 );\n* // returns true\n*\n* bool = out.get( len-1 );\n* // returns true\n*\n* out = arr.slice( 1, -2 );\n* // returns <BooleanArray>\n*\n* len = out.length;\n* // returns 2\n*\n* bool = out.get( 0 );\n* // returns false\n*\n* bool = out.get( len-1 );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'slice', function slice(begin, end) {\n    var outlen;\n    var outbuf;\n    var out;\n    var buf;\n    var len;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    buf = this._buffer;\n    len = this._length;\n    if (arguments.length === 0) {\n        begin = 0;\n        end = len;\n    } else {\n        if (!$56183b3879b1a53c$require$isInteger(begin)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an integer. Value: `%s`.', begin));\n        if (begin < 0) {\n            begin += len;\n            if (begin < 0) begin = 0;\n        }\n        if (arguments.length === 1) end = len;\n        else {\n            if (!$56183b3879b1a53c$require$isInteger(end)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', end));\n            if (end < 0) {\n                end += len;\n                if (end < 0) end = 0;\n            } else if (end > len) end = len;\n        }\n    }\n    if (begin < end) outlen = end - begin;\n    else outlen = 0;\n    out = new this.constructor(outlen);\n    outbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n    for(i = 0; i < outlen; i++)outbuf[i] = buf[i + begin];\n    return out;\n});\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function.\n*\n* @name some\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( false, 0 );\n* arr.set( true, 1 );\n* arr.set( false, 2 );\n*\n* var bool = arr.some( predicate );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'some', function some(predicate, thisArg) {\n    var buf;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$39cac8b951c1ded2$exports(predicate)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', predicate));\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++){\n        if (predicate.call(thisArg, $7ddb66cb80aa5581$exports(buf[i]), i, this)) return true;\n    }\n    return false;\n});\n/**\n* Sorts an array in-place.\n*\n* @name sort\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} [compareFcn] - comparison function\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {BooleanArray} sorted array\n*\n* @example\n* function compare( a, b ) {\n*    if ( a === false ) {\n*        if ( b === false ) {\n*            return 0;\n*        }\n*        return 1;\n*    }\n*    if ( b === true ) {\n*        return 0;\n*    }\n*    return -1;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* arr.sort( compare );\n*\n* var v = arr.get( 0 );\n* // returns true\n*\n* v = arr.get( 1 );\n* // returns true\n*\n* v = arr.get( 2 );\n* // returns false\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'sort', function sort(compareFcn) {\n    var buf;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    buf = this._buffer;\n    if (arguments.length === 0) {\n        buf.sort();\n        return this;\n    }\n    if (!$39cac8b951c1ded2$exports(compareFcn)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', compareFcn));\n    buf.sort(compare);\n    return this;\n    /**\n\t* Comparison function for sorting.\n\t*\n\t* @private\n\t* @param {boolean} a - first boolean value for comparison\n\t* @param {boolean} b - second boolean value for comparison\n\t* @returns {number} comparison result\n\t*/ function compare(a, b) {\n        return compareFcn($7ddb66cb80aa5581$exports(a), $7ddb66cb80aa5581$exports(b));\n    }\n});\n/**\n* Creates a new typed array view over the same underlying `ArrayBuffer` and with the same underlying data type as the host array.\n*\n* @name subarray\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {integer} [begin] - start index (inclusive)\n* @param {integer} [end] - end index (exclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {BooleanArray} subarray\n*\n* @example\n* var arr = new BooleanArray( 5 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n* arr.set( false, 3 );\n* arr.set( true, 4 );\n*\n* var subarr = arr.subarray();\n* // returns <BooleanArray>\n*\n* var len = subarr.length;\n* // returns 5\n*\n* var bool = subarr.get( 0 );\n* // returns true\n*\n* bool = subarr.get( len-1 );\n* // returns true\n*\n* subarr = arr.subarray( 1, -2 );\n* // returns <BooleanArray>\n*\n* len = subarr.length;\n* // returns 2\n*\n* bool = subarr.get( 0 );\n* // returns false\n*\n* bool = subarr.get( len-1 );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'subarray', function subarray(begin, end) {\n    var offset;\n    var buf;\n    var len;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    buf = this._buffer;\n    len = this._length;\n    if (arguments.length === 0) {\n        begin = 0;\n        end = len;\n    } else {\n        if (!$56183b3879b1a53c$require$isInteger(begin)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an integer. Value: `%s`.', begin));\n        if (begin < 0) {\n            begin += len;\n            if (begin < 0) begin = 0;\n        }\n        if (arguments.length === 1) end = len;\n        else {\n            if (!$56183b3879b1a53c$require$isInteger(end)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be an integer. Value: `%s`.', end));\n            if (end < 0) {\n                end += len;\n                if (end < 0) end = 0;\n            } else if (end > len) end = len;\n        }\n    }\n    if (begin >= len) {\n        len = 0;\n        offset = buf.byteLength;\n    } else if (begin >= end) {\n        len = 0;\n        offset = buf.byteOffset + begin * $56183b3879b1a53c$var$BYTES_PER_ELEMENT;\n    } else {\n        len = end - begin;\n        offset = buf.byteOffset + begin * $56183b3879b1a53c$var$BYTES_PER_ELEMENT;\n    }\n    return new this.constructor(buf.buffer, offset, len < 0 ? 0 : len);\n});\n/**\n* Serializes an array as a locale-specific string.\n*\n* @name toLocaleString\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {(string|Array<string>)} [locales] - locale identifier(s)\n* @param {Object} [options] - configuration options\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a string or an array of strings\n* @throws {TypeError} options argument must be an object\n* @returns {string} string representation\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var str = arr.toLocaleString();\n* // returns 'true,false,true'\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'toLocaleString', function toLocaleString(locales, options) {\n    var opts;\n    var loc;\n    var out;\n    var buf;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (arguments.length === 0) loc = [];\n    else if ($56183b3879b1a53c$require$isString(locales) || $56183b3879b1a53c$require$isStringArray(locales)) loc = locales;\n    else throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a string or an array of strings. Value: `%s`.', locales));\n    if (arguments.length < 2) opts = {};\n    else if ($01b2bacec2990d67$exports(options)) opts = options;\n    else throw new TypeError($5a5504e40381a222$exports('invalid argument. Options argument must be an object. Value: `%s`.', options));\n    buf = this._buffer;\n    out = [];\n    for(i = 0; i < this._length; i++)out.push($7ddb66cb80aa5581$exports(buf[i]).toLocaleString(loc, opts));\n    return out.join(',');\n});\n/**\n* Returns a new typed array containing the elements in reversed order.\n*\n* @name toReversed\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {BooleanArray} reversed array\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( false, 2 );\n*\n* var out = arr.toReversed();\n* // returns <BooleanArray>\n*\n* var v = out.get( 0 );\n* // returns false\n*\n* v = out.get( 1 );\n* // returns false\n*\n* v = out.get( 2 );\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'toReversed', function toReversed() {\n    var outbuf;\n    var out;\n    var len;\n    var buf;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    len = this._length;\n    out = new this.constructor(len);\n    buf = this._buffer;\n    outbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n    for(i = 0; i < len; i++)outbuf[i] = buf[len - i - 1];\n    return out;\n});\n/**\n* Returns a new typed array containing the elements in sorted order.\n*\n* @name toSorted\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} [compareFcn] - comparison function\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {BooleanArray} sorted array\n*\n* @example\n* function compare( a, b ) {\n*    if ( a === false ) {\n*        if ( b === false ) {\n*            return 0;\n*        }\n*        return 1;\n*    }\n*    if ( b === true ) {\n*        return 0;\n*    }\n*    return -1;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.sort( compare );\n* // returns <BooleanArray>\n*\n* var v = out.get( 0 );\n* // returns true\n*\n* v = out.get( 1 );\n* // returns true\n*\n* v = out.get( 2 );\n* // returns false\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'toSorted', function toSorted(compareFcn) {\n    var outbuf;\n    var out;\n    var len;\n    var buf;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    len = this._length;\n    out = new this.constructor(len);\n    buf = this._buffer;\n    outbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n    for(i = 0; i < len; i++)outbuf[i] = buf[i];\n    if (arguments.length === 0) {\n        outbuf.sort();\n        return out;\n    }\n    if (!$39cac8b951c1ded2$exports(compareFcn)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a function. Value: `%s`.', compareFcn));\n    outbuf.sort(compare);\n    return out;\n    /**\n\t* Comparison function for sorting.\n\t*\n\t* @private\n\t* @param {boolean} a - first boolean value for comparison\n\t* @param {boolean} b - second boolean value for comparison\n\t* @returns {number} comparison result\n\t*/ function compare(a, b) {\n        return compareFcn($7ddb66cb80aa5581$exports(a), $7ddb66cb80aa5581$exports(b));\n    }\n});\n/**\n* Serializes an array as a string.\n*\n* @name toString\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {string} string representation\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var str = arr.toString();\n* // returns 'true,false,true'\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'toString', function toString() {\n    var out;\n    var buf;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    out = [];\n    buf = this._buffer;\n    for(i = 0; i < this._length; i++)if (buf[i]) out.push('true');\n    else out.push('false');\n    return out.join(',');\n});\n/**\n* Returns an iterator for iterating over each value in a typed array.\n*\n* @name values\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {Iterator} iterator\n*\n* @example\n* var arr = new BooleanArray( 2 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n*\n* var iter = arr.values();\n*\n* var v = iter.next().value;\n* // returns true\n*\n* v = iter.next().value;\n* // returns false\n*\n* var bool = iter.next().done;\n* // returns true\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'values', function values() {\n    var iter;\n    var self;\n    var len;\n    var FLG;\n    var buf;\n    var i;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    self = this;\n    buf = this._buffer;\n    len = this._length;\n    // Initialize an iteration index:\n    i = -1;\n    // Create an iterator protocol-compliant object:\n    iter = {};\n    $dfd4cfb9f136c5d5$exports(iter, 'next', next);\n    $dfd4cfb9f136c5d5$exports(iter, 'return', end);\n    if ($b1dd39231526b140$exports) $dfd4cfb9f136c5d5$exports(iter, $b1dd39231526b140$exports, factory);\n    return iter;\n    /**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function next() {\n        i += 1;\n        if (FLG || i >= len) return {\n            'done': true\n        };\n        return {\n            'value': $7ddb66cb80aa5581$exports(buf[i]),\n            'done': false\n        };\n    }\n    /**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/ function end(value) {\n        FLG = true;\n        if (arguments.length) return {\n            'value': value,\n            'done': true\n        };\n        return {\n            'done': true\n        };\n    }\n    /**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/ function factory() {\n        return self.values();\n    }\n});\n/**\n* Returns a new typed array with the element at a provided index replaced with a provided value.\n*\n* @name with\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {integer} index - element index\n* @param {boolean} value - new value\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be an integer\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {TypeError} second argument must be a boolean\n* @returns {BooleanArray} new typed array\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.with( 0, false );\n* // returns <BooleanArray>\n*\n* var v = out.get( 0 );\n* // returns false\n*/ $dfd4cfb9f136c5d5$exports($56183b3879b1a53c$var$BooleanArray.prototype, 'with', function copyWith(index, value) {\n    var buf;\n    var out;\n    var len;\n    if (!$56183b3879b1a53c$var$isBooleanArray(this)) throw new TypeError('invalid invocation. `this` is not a boolean array.');\n    if (!$56183b3879b1a53c$require$isInteger(index)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be an integer. Value: `%s`.', index));\n    len = this._length;\n    if (index < 0) index += len;\n    if (index < 0 || index >= len) throw new RangeError($5a5504e40381a222$exports('invalid argument. Index argument is out-of-bounds. Value: `%s`.', index));\n    if (!$56183b3879b1a53c$require$isBoolean(value)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be a boolean. Value: `%s`.', value));\n    out = new this.constructor(this._buffer);\n    buf = out._buffer; // eslint-disable-line no-underscore-dangle\n    if (value) buf[index] = 1;\n    else buf[index] = 0;\n    return out;\n});\n// EXPORTS //\n$56183b3879b1a53c$exports = $56183b3879b1a53c$var$BooleanArray;\n\n\n// EXPORTS //\n$12973d080ce9e731$exports = $56183b3879b1a53c$exports;\n\n\n// MAIN //\n// Note: order should match `dtypes` order\nvar $3ad6a1cfb43d8878$var$CTORS = [\n    $688bf0eeb5997346$exports,\n    $26891ca0f6b1a852$exports,\n    $25d2454a59275c01$exports,\n    $2ffeb30574781963$exports,\n    $8e8697281bde0b47$exports,\n    $d41d9d0c25adca97$exports,\n    $08d0b88cbc0edb01$exports,\n    $b1ee90e09bc85e12$exports,\n    $6a9e0856aadec59b$exports,\n    $375b4d44e8b8b01e$exports,\n    $b43bc7a4d963783e$exports,\n    $12973d080ce9e731$exports\n];\n// EXPORTS //\n$3ad6a1cfb43d8878$exports = $3ad6a1cfb43d8878$var$CTORS;\n\n\nvar $95cafa856eb4e27d$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\n// Note: order should match `ctors` order\nvar $95cafa856eb4e27d$var$DTYPES = [\n    'float64',\n    'float32',\n    'int32',\n    'uint32',\n    'int16',\n    'uint16',\n    'int8',\n    'uint8',\n    'uint8c',\n    'complex64',\n    'complex128',\n    'bool'\n];\n// EXPORTS //\n$95cafa856eb4e27d$exports = $95cafa856eb4e27d$var$DTYPES;\n\n\n// VARIABLES //\nvar $ae2895751c8f79c8$var$NTYPES = $95cafa856eb4e27d$exports.length;\n// MAIN //\n/**\n* Returns the data type of an array.\n*\n* @param {*} value - input value\n* @returns {(string|null)} data type\n*\n* @example\n* var dt = dtype( [ 1, 2, 3 ] );\n* // returns 'generic'\n*\n* var dt = dtype( 'beep' );\n* // returns null\n*/ function $ae2895751c8f79c8$var$dtype(value) {\n    var i;\n    if ($5ebc6df234db68eb$exports(value)) return 'generic';\n    if ($195b16e791542a7f$exports(value)) return null;\n    for(i = 0; i < $ae2895751c8f79c8$var$NTYPES; i++){\n        if (value instanceof $3ad6a1cfb43d8878$exports[i]) return $95cafa856eb4e27d$exports[i];\n    }\n    // If the above failed, fall back to a more robust (and significantly slower) means for resolving underlying data types:\n    return $1cea0019130bbe15$exports[$094cb60ccc73a674$exports(value)] || null;\n}\n// EXPORTS //\n$ae2895751c8f79c8$exports = $ae2895751c8f79c8$var$dtype;\n\n\n// EXPORTS //\n$197ea0f3ce9f037b$exports = $ae2895751c8f79c8$exports;\n\n\n// MAIN //\n/**\n* Converts an array-like to an object likely to have the same \"shape\".\n*\n* ## Notes\n*\n* -   This function is intended as a potential performance optimization. In V8, for example, even if two objects share common properties, if those properties were added in different orders or if one object has additional properties not shared by the other object, then those objects will have different \"hidden\" classes. If a function is provided many objects having different \"shapes\", some JavaScript VMs (e.g., V8) will consider the function \"megamorphic\" and fail to perform various runtime optimizations. Accordingly, the intent of this function is to standardize the \"shape\" of the object holding array meta data to ensure that internal functions operating on arrays are provided consistent argument \"shapes\".\n*\n* -   The returned object has the following properties:\n*\n*     -   **data**: reference to the input array.\n*     -   **dtype**: array data type.\n*     -   **accessorProtocol**: `boolean` indicating whether the input array uses accessors for getting and setting elements.\n*     -   **accessors**: a two-element array whose first element is an accessor for retrieving an array element and whose second element is an accessor for setting an array element.\n*\n* @param {Collection} x - array-like object\n* @returns {Object} object containing array meta data\n*\n* @example\n* var obj = arraylike2object( [ 1, 2, 3, 4 ] );\n* // returns {...}\n*/ function $9c2cd5987f1f9b27$var$arraylike2object(x) {\n    var dt = $197ea0f3ce9f037b$exports(x);\n    if ($114d21ecee832746$exports(x)) return {\n        'data': x,\n        'dtype': dt,\n        'accessorProtocol': true,\n        'accessors': [\n            $dfd66f945cb96da9$exports(dt),\n            $7a65e941626c3146$exports(dt)\n        ]\n    };\n    return {\n        'data': x,\n        'dtype': dt,\n        'accessorProtocol': false,\n        'accessors': [\n            $88f5ca10627f0cae$exports(dt),\n            $c5348a68ff530f9c$exports(dt)\n        ]\n    };\n}\n// EXPORTS //\n$9c2cd5987f1f9b27$exports = $9c2cd5987f1f9b27$var$arraylike2object;\n\n\n// EXPORTS //\n$6a02809187fe3c4a$exports = $9c2cd5987f1f9b27$exports;\n\n\nvar $83931cbda3c45bcd$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\n/**\n* Copies values from `x` into `y`.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Object} y - output array object\n* @param {Collection} y.data - output array data\n* @param {Array<Function>} y.accessors - array element accessors\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @returns {Object} output array object\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\n*\n* function setter( data, idx, value ) {\n*     data.set( value, idx );\n* }\n*\n* function getter( data, idx ) {\n*     return data.get( idx );\n* }\n*\n* var x = {\n*     'data': new Complex64Array( [ 1.0, 2.0, 3.0, 4.0 ] ),\n*     'accessors': [ getter, setter ]\n* };\n*\n* var y = {\n*     'data': new Complex64Array( [ 5.0, 6.0, 7.0, 8.0 ] ),\n*     'accessors': [ getter, setter ]\n* };\n*\n* gcopy( x.data.length, x, 1, 0, y, 1, 0 );\n*\n* var view = reinterpret64( y.data, 0 );\n* // view => <Float32Array>[ 1.0, 2.0, 3.0, 4.0 ]\n*/ function $83931cbda3c45bcd$var$gcopy(N, x, strideX, offsetX, y, strideY, offsetY) {\n    var xbuf;\n    var ybuf;\n    var set;\n    var get;\n    var ix;\n    var iy;\n    var i;\n    // Cache references to array data:\n    xbuf = x.data;\n    ybuf = y.data;\n    // Cache a reference to the element accessors:\n    get = x.accessors[0];\n    set = y.accessors[1];\n    ix = offsetX;\n    iy = offsetY;\n    for(i = 0; i < N; i++){\n        set(ybuf, iy, get(xbuf, ix));\n        ix += strideX;\n        iy += strideY;\n    }\n    return x;\n}\n// EXPORTS //\n$83931cbda3c45bcd$exports = $83931cbda3c45bcd$var$gcopy;\n\n\n// VARIABLES //\nvar $63bf1be7a391376a$var$M = 8;\n// MAIN //\n/**\n* Copies values from `x` into `y`.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Collection} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Collection} y - output array\n* @param {integer} strideY - `y` stride length\n* @returns {Collection} output array\n*\n* @example\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy( x.length, x, 1, y, 1 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/ function $63bf1be7a391376a$var$gcopy(N, x, strideX, y, strideY) {\n    var ix;\n    var iy;\n    var ox;\n    var oy;\n    var m;\n    var i;\n    if (N <= 0) return y;\n    ox = $6a02809187fe3c4a$exports(x);\n    oy = $6a02809187fe3c4a$exports(y);\n    if (ox.accessorProtocol || oy.accessorProtocol) {\n        if (strideX < 0) ix = (1 - N) * strideX;\n        else ix = 0;\n        if (strideY < 0) iy = (1 - N) * strideY;\n        else iy = 0;\n        $83931cbda3c45bcd$exports(N, ox, strideX, ix, oy, strideY, iy);\n        return oy.data;\n    }\n    // Use unrolled loops if both strides are equal to `1`...\n    if (strideX === 1 && strideY === 1) {\n        m = N % $63bf1be7a391376a$var$M;\n        // If we have a remainder, run a clean-up loop...\n        if (m > 0) for(i = 0; i < m; i++)y[i] = x[i];\n        if (N < $63bf1be7a391376a$var$M) return y;\n        for(i = m; i < N; i += $63bf1be7a391376a$var$M){\n            y[i] = x[i];\n            y[i + 1] = x[i + 1];\n            y[i + 2] = x[i + 2];\n            y[i + 3] = x[i + 3];\n            y[i + 4] = x[i + 4];\n            y[i + 5] = x[i + 5];\n            y[i + 6] = x[i + 6];\n            y[i + 7] = x[i + 7];\n        }\n        return y;\n    }\n    if (strideX < 0) ix = (1 - N) * strideX;\n    else ix = 0;\n    if (strideY < 0) iy = (1 - N) * strideY;\n    else iy = 0;\n    for(i = 0; i < N; i++){\n        y[iy] = x[ix];\n        ix += strideX;\n        iy += strideY;\n    }\n    return y;\n}\n// EXPORTS //\n$63bf1be7a391376a$exports = $63bf1be7a391376a$var$gcopy;\n\n\nvar $772bd7a728f48153$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n// VARIABLES //\nvar $772bd7a728f48153$var$M = 8;\n// MAIN //\n/**\n* Copies values from `x` into `y`.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Collection} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Collection} y - output array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @returns {Collection} output array\n*\n* @example\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy( x.length, x, 1, 0, y, 1, 0 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/ function $772bd7a728f48153$var$gcopy(N, x, strideX, offsetX, y, strideY, offsetY) {\n    var ix;\n    var iy;\n    var ox;\n    var oy;\n    var m;\n    var i;\n    if (N <= 0) return y;\n    ox = $6a02809187fe3c4a$exports(x);\n    oy = $6a02809187fe3c4a$exports(y);\n    if (ox.accessorProtocol || oy.accessorProtocol) {\n        $83931cbda3c45bcd$exports(N, ox, strideX, offsetX, oy, strideY, offsetY);\n        return oy.data;\n    }\n    ix = offsetX;\n    iy = offsetY;\n    // Use unrolled loops if both strides are equal to `1`...\n    if (strideX === 1 && strideY === 1) {\n        m = N % $772bd7a728f48153$var$M;\n        // If we have a remainder, run a clean-up loop...\n        if (m > 0) for(i = 0; i < m; i++){\n            y[iy] = x[ix];\n            ix += strideX;\n            iy += strideY;\n        }\n        if (N < $772bd7a728f48153$var$M) return y;\n        for(i = m; i < N; i += $772bd7a728f48153$var$M){\n            y[iy] = x[ix];\n            y[iy + 1] = x[ix + 1];\n            y[iy + 2] = x[ix + 2];\n            y[iy + 3] = x[ix + 3];\n            y[iy + 4] = x[ix + 4];\n            y[iy + 5] = x[ix + 5];\n            y[iy + 6] = x[ix + 6];\n            y[iy + 7] = x[ix + 7];\n            ix += $772bd7a728f48153$var$M;\n            iy += $772bd7a728f48153$var$M;\n        }\n        return y;\n    }\n    for(i = 0; i < N; i++){\n        y[iy] = x[ix];\n        ix += strideX;\n        iy += strideY;\n    }\n    return y;\n}\n// EXPORTS //\n$772bd7a728f48153$exports = $772bd7a728f48153$var$gcopy;\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($63bf1be7a391376a$exports, 'ndarray', $772bd7a728f48153$exports);\n// EXPORTS //\n$5c6324161692e0ec$exports = $63bf1be7a391376a$exports;\n\n\nvar $46c75d6fadb33a0e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $2506763e932268bf$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $87ab65900a1f386d$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $02b3d4138e395ebb$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $de0f1020be252b85$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $c2f433b5f5f60a9e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $6a4f90a371ecf427$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $a5c669b27f023413$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $7c214c1da250c1b6$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Dummy function.\n*\n* @private\n*/ function $7c214c1da250c1b6$var$foo() {\n// No-op...\n}\n// EXPORTS //\n$7c214c1da250c1b6$exports = $7c214c1da250c1b6$var$foo;\n\n\n// MAIN //\n/**\n* Tests for native function `name` support.\n*\n* @returns {boolean} boolean indicating if an environment has function `name` support\n*\n* @example\n* var bool = hasFunctionNameSupport();\n* // returns <boolean>\n*/ function $a5c669b27f023413$var$hasFunctionNameSupport() {\n    return $7c214c1da250c1b6$exports.name === 'foo';\n}\n// EXPORTS //\n$a5c669b27f023413$exports = $a5c669b27f023413$var$hasFunctionNameSupport;\n\n\n// EXPORTS //\n$6a4f90a371ecf427$exports = $a5c669b27f023413$exports;\n\n\n\n\nvar $c2f433b5f5f60a9e$require$RE = $06003f96259ab889$exports.REGEXP;\n// VARIABLES //\nvar $c2f433b5f5f60a9e$var$isFunctionNameSupported = $6a4f90a371ecf427$exports();\n// MAIN //\n/**\n* Returns the name of a function.\n*\n* @param {Function} fcn - input function\n* @throws {TypeError} must provide a function\n* @returns {string} function name\n*\n* @example\n* var v = functionName( Math.sqrt );\n* // returns 'sqrt'\n*\n* @example\n* var v = functionName( function foo(){} );\n* // returns 'foo'\n*\n* @example\n* var v = functionName( function(){} );\n* // returns '' || 'anonymous'\n*\n* @example\n* var v = functionName( String );\n* // returns 'String'\n*/ function $c2f433b5f5f60a9e$var$functionName(fcn) {\n    // TODO: add support for generator functions?\n    if ($39cac8b951c1ded2$exports(fcn) === false) throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a function. Value: `%s`.', fcn));\n    if ($c2f433b5f5f60a9e$var$isFunctionNameSupported) return fcn.name;\n    return $c2f433b5f5f60a9e$require$RE.exec(fcn.toString())[1];\n}\n// EXPORTS //\n$c2f433b5f5f60a9e$exports = $c2f433b5f5f60a9e$var$functionName;\n\n\n// EXPORTS //\n$de0f1020be252b85$exports = $c2f433b5f5f60a9e$exports;\n\n\n\n\n\nvar $256312899d9acb9e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n\n\n\n\n\n\n\n// MAIN //\nvar $256312899d9acb9e$var$CTORS = [\n    $688bf0eeb5997346$exports,\n    $26891ca0f6b1a852$exports,\n    $25d2454a59275c01$exports,\n    $2ffeb30574781963$exports,\n    $8e8697281bde0b47$exports,\n    $d41d9d0c25adca97$exports,\n    $08d0b88cbc0edb01$exports,\n    $b1ee90e09bc85e12$exports,\n    $6a9e0856aadec59b$exports\n];\n// EXPORTS //\n$256312899d9acb9e$exports = $256312899d9acb9e$var$CTORS;\n\n\nvar $4485bda1a1b28a15$exports = {};\n$4485bda1a1b28a15$exports = JSON.parse(\"[\\\"Int8Array\\\",\\\"Uint8Array\\\",\\\"Uint8ClampedArray\\\",\\\"Int16Array\\\",\\\"Uint16Array\\\",\\\"Int32Array\\\",\\\"Uint32Array\\\",\\\"Float32Array\\\",\\\"Float64Array\\\"]\");\n\n\n// VARIABLES //\n// Abstract `TypedArray` class:\nvar $02b3d4138e395ebb$var$TypedArray = $f51c88c88382236d$exports() ? $d5bb7e750799db60$exports($688bf0eeb5997346$exports) : $02b3d4138e395ebb$var$Dummy; // eslint-disable-line max-len\n// Ensure abstract typed array class has expected name:\n$02b3d4138e395ebb$var$TypedArray = $de0f1020be252b85$exports($02b3d4138e395ebb$var$TypedArray) === 'TypedArray' ? $02b3d4138e395ebb$var$TypedArray : $02b3d4138e395ebb$var$Dummy;\n// FUNCTIONS //\n/**\n* Dummy constructor.\n*\n* @private\n*/ function $02b3d4138e395ebb$var$Dummy() {} // eslint-disable-line no-empty-function\n// MAIN //\n/**\n* Tests if a value is a typed array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a typed array\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n*\n* var bool = isTypedArray( new Int8Array( 10 ) );\n* // returns true\n*/ function $02b3d4138e395ebb$var$isTypedArray(value) {\n    var v;\n    var i;\n    if (typeof value !== 'object' || value === null) return false;\n    // Check for the abstract class...\n    if (value instanceof $02b3d4138e395ebb$var$TypedArray) return true;\n    // Check for typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n    for(i = 0; i < $256312899d9acb9e$exports.length; i++){\n        if (value instanceof $256312899d9acb9e$exports[i]) return true;\n    }\n    // Walk the prototype tree until we find an object having a desired class...\n    while(value){\n        v = $094cb60ccc73a674$exports(value);\n        for(i = 0; i < $4485bda1a1b28a15$exports.length; i++){\n            if ($4485bda1a1b28a15$exports[i] === v) return true;\n        }\n        value = $d5bb7e750799db60$exports(value);\n    }\n    return false;\n}\n// EXPORTS //\n$02b3d4138e395ebb$exports = $02b3d4138e395ebb$var$isTypedArray;\n\n\n// EXPORTS //\n$87ab65900a1f386d$exports = $02b3d4138e395ebb$exports;\n\n\nvar $bcdc764731c4e02b$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $962cab2299084f79$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\nvar $5c4b6adbe13f580a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n// MAIN //\nvar $5c4b6adbe13f580a$var$CTORS = [\n    $b43bc7a4d963783e$exports,\n    $375b4d44e8b8b01e$exports\n];\n// EXPORTS //\n$5c4b6adbe13f580a$exports = $5c4b6adbe13f580a$var$CTORS;\n\n\nvar $af0d66d2ecee3d3c$exports = {};\n$af0d66d2ecee3d3c$exports = JSON.parse(\"[\\\"Complex64Array\\\",\\\"Complex128Array\\\"]\");\n\n\n// MAIN //\n/**\n* Tests if a value is a complex typed array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var bool = isComplexTypedArray( new Complex128Array( 10 ) );\n* // returns true\n*/ function $962cab2299084f79$var$isComplexTypedArray(value) {\n    var v;\n    var i;\n    if (typeof value !== 'object' || value === null) return false;\n    // Check for complex typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n    for(i = 0; i < $5c4b6adbe13f580a$exports.length; i++){\n        if (value instanceof $5c4b6adbe13f580a$exports[i]) return true;\n    }\n    // Walk the prototype tree until we find an object having a desired class...\n    while(value){\n        v = $094cb60ccc73a674$exports(value);\n        for(i = 0; i < $af0d66d2ecee3d3c$exports.length; i++){\n            if ($af0d66d2ecee3d3c$exports[i] === v) return true;\n        }\n        value = $d5bb7e750799db60$exports(value);\n    }\n    return false;\n}\n// EXPORTS //\n$962cab2299084f79$exports = $962cab2299084f79$var$isComplexTypedArray;\n\n\n// EXPORTS //\n$bcdc764731c4e02b$exports = $962cab2299084f79$exports;\n\n\nvar $71be7141b4c5fb9a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $cffa11d0f25cce41$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n// MAIN //\n/**\n* Tests if a value is a Complex64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a BooleanArray\n*\n* @example\n* var BooleanArray = require( '@stdlib/array/bool' );\n*\n* var bool = isBooleanArray( new BooleanArray( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isBooleanArray( [] );\n* // returns false\n*/ function $cffa11d0f25cce41$var$isBooleanArray(value) {\n    return value instanceof $12973d080ce9e731$exports || $094cb60ccc73a674$exports(value) === 'BooleanArray';\n}\n// EXPORTS //\n$cffa11d0f25cce41$exports = $cffa11d0f25cce41$var$isBooleanArray;\n\n\n// EXPORTS //\n$71be7141b4c5fb9a$exports = $cffa11d0f25cce41$exports;\n\n\n\n\nvar $a6e1691e7348d703$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $c070d48e65024d57$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Reinterprets a `BooleanArray` as a `Uint8Array`.\n*\n* @param {BooleanArray} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Uint8Array} `Uint8Array` view\n*\n* @example\n* var BooleanArray = require( '@stdlib/array/bool' );\n*\n* var x = new BooleanArray( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Uint8Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/ function $c070d48e65024d57$var$reinterpret(x, offset) {\n    return new $b1ee90e09bc85e12$exports(x.buffer, x.byteOffset + x.BYTES_PER_ELEMENT * offset, x.length - offset); // eslint-disable-line max-len\n}\n// EXPORTS //\n$c070d48e65024d57$exports = $c070d48e65024d57$var$reinterpret;\n\n\n// EXPORTS //\n$a6e1691e7348d703$exports = $c070d48e65024d57$exports;\n\n\n\nvar $40fb1c7473819646$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $374565f5f188571c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $eeddcdba1a0c6161$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Tests whether a value has in its prototype chain a specified constructor as a prototype property.\n*\n* @param {*} value - value to test\n* @param {Function} constructor - constructor to test against\n* @throws {TypeError} constructor must be callable\n* @returns {boolean} boolean indicating whether a value is an instance of a provided constructor\n*\n* @example\n* var bool = instanceOf( [], Array );\n* // returns true\n*\n* @example\n* var bool = instanceOf( {}, Object ); // exception\n* // returns true\n*\n* @example\n* var bool = instanceOf( 'beep', String );\n* // returns false\n*\n* @example\n* var bool = instanceOf( null, Object );\n* // returns false\n*\n* @example\n* var bool = instanceOf( 5, Object );\n* // returns false\n*/ function $eeddcdba1a0c6161$var$instanceOf(value, constructor) {\n    // TODO: replace with `isCallable` check\n    if (typeof constructor !== 'function') throw new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be callable. Value: `%s`.', constructor));\n    return value instanceof constructor;\n}\n// EXPORTS //\n$eeddcdba1a0c6161$exports = $eeddcdba1a0c6161$var$instanceOf;\n\n\n// EXPORTS //\n$374565f5f188571c$exports = $eeddcdba1a0c6161$exports;\n\n\n\n\nvar $3df0ee3a2965cbae$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n\n\n\n\n\n\n\n\n\n\n// MAIN //\nvar $3df0ee3a2965cbae$var$CTORS = [\n    [\n        $688bf0eeb5997346$exports,\n        'Float64Array'\n    ],\n    [\n        $26891ca0f6b1a852$exports,\n        'Float32Array'\n    ],\n    [\n        $25d2454a59275c01$exports,\n        'Int32Array'\n    ],\n    [\n        $2ffeb30574781963$exports,\n        'Uint32Array'\n    ],\n    [\n        $8e8697281bde0b47$exports,\n        'Int16Array'\n    ],\n    [\n        $d41d9d0c25adca97$exports,\n        'Uint16Array'\n    ],\n    [\n        $08d0b88cbc0edb01$exports,\n        'Int8Array'\n    ],\n    [\n        $b1ee90e09bc85e12$exports,\n        'Uint8Array'\n    ],\n    [\n        $6a9e0856aadec59b$exports,\n        'Uint8ClampedArray'\n    ],\n    [\n        $375b4d44e8b8b01e$exports,\n        'Complex64Array'\n    ],\n    [\n        $b43bc7a4d963783e$exports,\n        'Complex128Array'\n    ],\n    [\n        $12973d080ce9e731$exports,\n        'BooleanArray'\n    ]\n];\n// EXPORTS //\n$3df0ee3a2965cbae$exports = $3df0ee3a2965cbae$var$CTORS;\n\n\n// MAIN //\n/**\n* Returns the typed array type.\n*\n* @private\n* @param {TypedArray} arr - typed array\n* @returns {(string|void)} typed array type\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( 5 );\n* var str = typeName( arr );\n* // returns 'Float64Array'\n*/ function $40fb1c7473819646$var$typeName(arr) {\n    var v;\n    var i;\n    // Check for typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n    for(i = 0; i < $3df0ee3a2965cbae$exports.length; i++){\n        if ($374565f5f188571c$exports(arr, $3df0ee3a2965cbae$exports[i][0])) return $3df0ee3a2965cbae$exports[i][1];\n    }\n    // Walk the prototype tree until we find an object having a desired native class...\n    while(arr){\n        v = $094cb60ccc73a674$exports(arr);\n        for(i = 0; i < $3df0ee3a2965cbae$exports.length; i++){\n            if (v === $3df0ee3a2965cbae$exports[i][1]) return $3df0ee3a2965cbae$exports[i][1];\n        }\n        arr = $d5bb7e750799db60$exports(arr);\n    }\n}\n// EXPORTS //\n$40fb1c7473819646$exports = $40fb1c7473819646$var$typeName;\n\n\n// MAIN //\n/**\n* Returns a JSON representation of a typed array.\n*\n* ## Notes\n*\n* -   We build a JSON object representing a typed array similar to how Node.js `Buffer` objects are represented. See [Buffer][1].\n*\n* [1]: https://nodejs.org/api/buffer.html#buffer_buf_tojson\n*\n* @param {TypedArray} arr - typed array to serialize\n* @throws {TypeError} first argument must be a typed array\n* @returns {Object} JSON representation\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( [ 5.0, 3.0 ] );\n* var json = typedarray2json( arr );\n* // returns { 'type': 'Float64Array', 'data': [ 5.0, 3.0 ] }\n*/ function $2506763e932268bf$var$typedarray2json(arr) {\n    var data;\n    var out;\n    var i;\n    if ($87ab65900a1f386d$exports(arr)) data = arr;\n    else if ($bcdc764731c4e02b$exports(arr)) {\n        if (arr.BYTES_PER_ELEMENT === 8) data = $5d2756b8cde44db9$exports(arr, 0);\n        else data = $88d548af1d36ede9$exports(arr, 0);\n    } else if ($71be7141b4c5fb9a$exports(arr)) data = $a6e1691e7348d703$exports(arr, 0);\n    else throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a typed array. Value: `%s`.', arr));\n    out = {\n        'type': $40fb1c7473819646$exports(arr),\n        'data': []\n    };\n    for(i = 0; i < data.length; i++)out.data.push(data[i]);\n    return out;\n}\n// EXPORTS //\n$2506763e932268bf$exports = $2506763e932268bf$var$typedarray2json;\n\n\n// EXPORTS //\n$46c75d6fadb33a0e$exports = $2506763e932268bf$exports;\n\n\n\nvar $a1390ae0787b71de$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n// VARIABLES //\nvar $a1390ae0787b71de$var$MAX = $a5069161f8233194$exports - 1;\n// MAIN //\n/**\n* Returns a pseudorandom integer on the interval \\\\( [1, 2^{32}-1) \\\\).\n*\n* @private\n* @returns {PositiveInteger} pseudorandom integer\n*\n* @example\n* var v = randuint32();\n* // returns <number>\n*/ function $a1390ae0787b71de$var$randuint32() {\n    var v = $19a18984922c6b5f$exports(1.0 + $a1390ae0787b71de$var$MAX * Math.random()); // eslint-disable-line stdlib/no-builtin-math\n    return v >>> 0; // asm type annotation\n}\n// EXPORTS //\n$a1390ae0787b71de$exports = $a1390ae0787b71de$var$randuint32;\n\n\n// VARIABLES //\n// Define the size of the state array (see refs):\nvar $3b344fcd5166f627$var$N = 624;\n// Define a (magic) constant used for indexing into the state array:\nvar $3b344fcd5166f627$var$M = 397;\n// Define the maximum seed: 11111111111111111111111111111111\nvar $3b344fcd5166f627$var$MAX_SEED = $a5069161f8233194$exports >>> 0; // asm type annotation\n// For seed arrays, define an initial state (magic) constant: 19650218 => 00000001001010111101011010101010\nvar $3b344fcd5166f627$var$SEED_ARRAY_INIT_STATE = 19650218; // asm type annotation\n// Define a mask for the most significant `w-r` bits, where `w` is the word size (32 bits) and `r` is the separation point of one word (see refs): 2147483648 => 0x80000000 => 10000000000000000000000000000000\nvar $3b344fcd5166f627$var$UPPER_MASK = 2147483648; // asm type annotation\n// Define a mask for the least significant `r` bits (see refs): 2147483647 => 0x7fffffff => 01111111111111111111111111111111\nvar $3b344fcd5166f627$var$LOWER_MASK = 2147483647; // asm type annotation\n// Define a multiplier (see Knuth TAOCP Vol2. 3rd Ed. P.106): 1812433253 => 01101100000001111000100101100101\nvar $3b344fcd5166f627$var$KNUTH_MULTIPLIER = 1812433253; // asm type annotation\n// Define a (magic) multiplier: 1664525 => 00000000000110010110011000001101\nvar $3b344fcd5166f627$var$MAGIC_MULTIPLIER_1 = 1664525; // asm type annotation\n// Define a (magic) multiplier: 1566083941 => 01011101010110001000101101100101\nvar $3b344fcd5166f627$var$MAGIC_MULTIPLIER_2 = 1566083941; // asm type annotation\n// Define a tempering coefficient: 2636928640 => 0x9d2c5680 => 10011101001011000101011010000000\nvar $3b344fcd5166f627$var$TEMPERING_COEFFICIENT_1 = 2636928640; // asm type annotation\n// Define a tempering coefficient: 4022730752 => 0xefc60000 => 11101111110001100000000000000000\nvar $3b344fcd5166f627$var$TEMPERING_COEFFICIENT_2 = 4022730752; // asm type annotation\n// Define a constant vector `a` (see refs): 2567483615 => 0x9908b0df => 10011001000010001011000011011111\nvar $3b344fcd5166f627$var$MATRIX_A = 2567483615; // asm type annotation\n// MAG01[x] = x * MATRIX_A; for x = {0,1}\nvar $3b344fcd5166f627$var$MAG01 = [\n    0,\n    $3b344fcd5166f627$var$MATRIX_A >>> 0\n]; // asm type annotation\n// Define a normalization constant when generating double-precision floating-point numbers: 2^53 => 9007199254740992\nvar $3b344fcd5166f627$var$FLOAT64_NORMALIZATION_CONSTANT = 1.0 / ($1c9ea135448a31a9$exports + 1.0); // eslint-disable-line id-length\n// 2^26: 67108864\nvar $3b344fcd5166f627$var$TWO_26 = 67108864; // asm type annotation\n// 2^32: 2147483648 => 0x80000000 => 10000000000000000000000000000000\nvar $3b344fcd5166f627$var$TWO_32 = 2147483648; // asm type annotation\n// 1 (as a 32-bit unsigned integer): 1 => 0x1 => 00000000000000000000000000000001\nvar $3b344fcd5166f627$var$ONE = 1; // asm type annotation\n// Define the maximum normalized pseudorandom double-precision floating-point number: ( (((2^32-1)>>>5)*2^26)+( (2^32-1)>>>6) ) / 2^53\nvar $3b344fcd5166f627$var$MAX_NORMALIZED = $1c9ea135448a31a9$exports * $3b344fcd5166f627$var$FLOAT64_NORMALIZATION_CONSTANT;\n// Define the state array schema version:\nvar $3b344fcd5166f627$var$STATE_ARRAY_VERSION = 1; // NOTE: anytime the state array schema changes, this value should be incremented!!!\n// Define the number of sections in the state array:\nvar $3b344fcd5166f627$var$NUM_STATE_SECTIONS = 3; // state, other, seed\n// Define the index offset of the \"state\" section in the state array:\nvar $3b344fcd5166f627$var$STATE_SECTION_OFFSET = 2; // | version | num_sections | state_length | ...state | other_length | state_index | seed_length | ...seed |\n// Define the index offset of the \"other\" section in the state array:\nvar $3b344fcd5166f627$var$OTHER_SECTION_OFFSET = $3b344fcd5166f627$var$N + 3; // | version | num_sections | state_length | ...state | other_length | state_index | seed_length | ...seed |\n// Define the index offset of the seed section in the state array:\nvar $3b344fcd5166f627$var$SEED_SECTION_OFFSET = $3b344fcd5166f627$var$N + 5; // | version | num_sections | state_length | ...state | other_length | state_index | seed_length | ...seed |\n// Define the length of the \"fixed\" length portion of the state array:\nvar $3b344fcd5166f627$var$STATE_FIXED_LENGTH = $3b344fcd5166f627$var$N + 6; // 1 (version) + 1 (num_sections) + 1 (state_length) + N (state) + 1 (other_length) + 1 (state_index) + 1 (seed_length)\n// FUNCTIONS //\n/**\n* Verifies state array integrity.\n*\n* @private\n* @param {Uint32Array} state - state array\n* @param {boolean} FLG - flag indicating whether the state array was provided as an option (true) or an argument (false)\n* @returns {(Error|null)} an error or `null`\n*/ function $3b344fcd5166f627$var$verifyState(state, FLG) {\n    var s1;\n    if (FLG) s1 = 'option';\n    else s1 = 'argument';\n    // The state array must have a minimum length...\n    if (state.length < $3b344fcd5166f627$var$STATE_FIXED_LENGTH + 1) return new RangeError($5a5504e40381a222$exports('invalid %s. `state` array has insufficient length.', s1));\n    // The first element of the state array must equal the supported state array schema version...\n    if (state[0] !== $3b344fcd5166f627$var$STATE_ARRAY_VERSION) return new RangeError($5a5504e40381a222$exports('invalid %s. `state` array has an incompatible schema version. Expected: `%s`. Actual: `%s.`', s1, $3b344fcd5166f627$var$STATE_ARRAY_VERSION, state[0]));\n    // The second element of the state array must contain the number of sections...\n    if (state[1] !== $3b344fcd5166f627$var$NUM_STATE_SECTIONS) return new RangeError($5a5504e40381a222$exports('invalid %s. `state` array has an incompatible number of sections. Expected: `%s`. Actual: `%s`.', s1, $3b344fcd5166f627$var$NUM_STATE_SECTIONS, state[1]));\n    // The length of the \"state\" section must equal `N`...\n    if (state[$3b344fcd5166f627$var$STATE_SECTION_OFFSET] !== $3b344fcd5166f627$var$N) return new RangeError($5a5504e40381a222$exports('invalid %s. `state` array has an incompatible state length. Expected: `%u`. Actual: `%u`.', s1, $3b344fcd5166f627$var$N, state[$3b344fcd5166f627$var$STATE_SECTION_OFFSET]));\n    // The length of the \"other\" section must equal `1`...\n    if (state[$3b344fcd5166f627$var$OTHER_SECTION_OFFSET] !== 1) return new RangeError($5a5504e40381a222$exports('invalid %s. `state` array has an incompatible section length. Expected: `%u`. Actual: `%u`.', s1, 1, state[$3b344fcd5166f627$var$OTHER_SECTION_OFFSET]));\n    // The length of the \"seed\" section much match the empirical length...\n    if (state[$3b344fcd5166f627$var$SEED_SECTION_OFFSET] !== state.length - $3b344fcd5166f627$var$STATE_FIXED_LENGTH) return new RangeError($5a5504e40381a222$exports('invalid %s. `state` array length is incompatible with seed section length. Expected: `%u`. Actual: `%u`.', s1, state.length - $3b344fcd5166f627$var$STATE_FIXED_LENGTH, state[$3b344fcd5166f627$var$SEED_SECTION_OFFSET]));\n    return null;\n}\n/**\n* Returns an initial PRNG state.\n*\n* @private\n* @param {Uint32Array} state - state array\n* @param {PositiveInteger} N - state size\n* @param {uinteger32} s - seed\n* @returns {Uint32Array} state array\n*/ function $3b344fcd5166f627$var$createState(state, N, s) {\n    var i;\n    // Set the first element of the state array to the provided seed:\n    state[0] = s >>> 0; // equivalent to `s & 0xffffffffUL` in original C implementation\n    // Initialize the remaining state array elements:\n    for(i = 1; i < N; i++){\n        /*\n\t\t* In the original C implementation (see `init_genrand()`),\n\t\t*\n\t\t* ```c\n\t\t* mt[i] = (KNUTH_MULTIPLIER * (mt[i-1] ^ (mt[i-1] >> 30)) + i)\n\t\t* ```\n\t\t*\n\t\t* In order to replicate this in JavaScript, we must emulate C-like multiplication of unsigned 32-bit integers.\n\t\t*/ s = state[i - 1] >>> 0; // asm type annotation\n        s = (s ^ s >>> 30) >>> 0; // asm type annotation\n        state[i] = $66f874ac6fdc70e7$exports(s, $3b344fcd5166f627$var$KNUTH_MULTIPLIER) + i >>> 0; // asm type annotation\n    }\n    return state;\n}\n/**\n* Initializes a PRNG state array according to a seed array.\n*\n* @private\n* @param {Uint32Array} state - state array\n* @param {NonNegativeInteger} N - state array length\n* @param {Collection} seed - seed array\n* @param {NonNegativeInteger} M - seed array length\n* @returns {Uint32Array} state array\n*/ function $3b344fcd5166f627$var$initState(state, N, seed, M) {\n    var s;\n    var i;\n    var j;\n    var k;\n    i = 1;\n    j = 0;\n    for(k = $c60bed3c04bd9984$exports(N, M); k > 0; k--){\n        /*\n\t\t* In the original C implementation (see `init_by_array()`),\n\t\t*\n\t\t* ```c\n\t\t* mt[i] = (mt[i]^((mt[i-1]^(mt[i-1]>>30))*1664525UL)) + seed[j] + j;\n\t\t* ```\n\t\t*\n\t\t* In order to replicate this in JavaScript, we must emulate C-like multiplication of unsigned 32-bit integers.\n\t\t*/ s = state[i - 1] >>> 0; // asm type annotation\n        s = (s ^ s >>> 30) >>> 0; // asm type annotation\n        s = $66f874ac6fdc70e7$exports(s, $3b344fcd5166f627$var$MAGIC_MULTIPLIER_1) >>> 0; // asm type annotation\n        state[i] = (state[i] >>> 0 ^ s) + seed[j] + j >>> 0; /* non-linear */  // asm type annotation\n        i += 1;\n        j += 1;\n        if (i >= N) {\n            state[0] = state[N - 1];\n            i = 1;\n        }\n        if (j >= M) j = 0;\n    }\n    for(k = N - 1; k > 0; k--){\n        /*\n\t\t* In the original C implementation (see `init_by_array()`),\n\t\t*\n\t\t* ```c\n\t\t* mt[i] = (mt[i]^((mt[i-1]^(mt[i-1]>>30))*1566083941UL)) - i;\n\t\t* ```\n\t\t*\n\t\t* In order to replicate this in JavaScript, we must emulate C-like multiplication of unsigned 32-bit integers.\n\t\t*/ s = state[i - 1] >>> 0; // asm type annotation\n        s = (s ^ s >>> 30) >>> 0; // asm type annotation\n        s = $66f874ac6fdc70e7$exports(s, $3b344fcd5166f627$var$MAGIC_MULTIPLIER_2) >>> 0; // asm type annotation\n        state[i] = (state[i] >>> 0 ^ s) - i >>> 0; /* non-linear */  // asm type annotation\n        i += 1;\n        if (i >= N) {\n            state[0] = state[N - 1];\n            i = 1;\n        }\n    }\n    // Ensure a non-zero initial state array:\n    state[0] = $3b344fcd5166f627$var$TWO_32; // MSB (most significant bit) is 1\n    return state;\n}\n/**\n* Updates a PRNG's internal state by generating the next `N` words.\n*\n* @private\n* @param {Uint32Array} state - state array\n* @returns {Uint32Array} state array\n*/ function $3b344fcd5166f627$var$twist(state) {\n    var w;\n    var i;\n    var j;\n    var k;\n    k = $3b344fcd5166f627$var$N - $3b344fcd5166f627$var$M;\n    for(i = 0; i < k; i++){\n        w = state[i] & $3b344fcd5166f627$var$UPPER_MASK | state[i + 1] & $3b344fcd5166f627$var$LOWER_MASK;\n        state[i] = state[i + $3b344fcd5166f627$var$M] ^ w >>> 1 ^ $3b344fcd5166f627$var$MAG01[w & $3b344fcd5166f627$var$ONE];\n    }\n    j = $3b344fcd5166f627$var$N - 1;\n    for(; i < j; i++){\n        w = state[i] & $3b344fcd5166f627$var$UPPER_MASK | state[i + 1] & $3b344fcd5166f627$var$LOWER_MASK;\n        state[i] = state[i - k] ^ w >>> 1 ^ $3b344fcd5166f627$var$MAG01[w & $3b344fcd5166f627$var$ONE];\n    }\n    w = state[j] & $3b344fcd5166f627$var$UPPER_MASK | state[0] & $3b344fcd5166f627$var$LOWER_MASK;\n    state[j] = state[$3b344fcd5166f627$var$M - 1] ^ w >>> 1 ^ $3b344fcd5166f627$var$MAG01[w & $3b344fcd5166f627$var$ONE];\n    return state;\n}\n// MAIN //\n/**\n* Returns a 32-bit Mersenne Twister pseudorandom number generator.\n*\n* ## Notes\n*\n* -   In contrast to the original C implementation, array seeds of length `1` are considered integer seeds. This ensures that the seed `[ 1234 ]` generates the same output as the seed `1234`. In the original C implementation, the two seeds would yield different output, which is **not** obvious from a user perspective.\n*\n* @param {Options} [options] - options\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} a seed must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integers less than or equal to the maximum unsigned 32-bit integer\n* @throws {RangeError} a numeric seed must be a positive integer less than or equal to the maximum unsigned 32-bit integer\n* @throws {TypeError} state must be a `Uint32Array`\n* @throws {Error} must provide a valid state\n* @throws {TypeError} `copy` option must be a boolean\n* @returns {PRNG} Mersenne Twister PRNG\n*\n* @example\n* var mt19937 = factory();\n*\n* var v = mt19937();\n* // returns <number>\n*\n* @example\n* // Return a seeded Mersenne Twister PRNG:\n* var mt19937 = factory({\n*     'seed': 1234\n* });\n*\n* var v = mt19937();\n* // returns 822569775\n*/ function $3b344fcd5166f627$var$factory(options) {\n    var STATE;\n    var state;\n    var opts;\n    var seed;\n    var slen;\n    var err;\n    opts = {};\n    if (arguments.length) {\n        if (!$c8f9ba5bc2a81d34$exports(options)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Options argument must be an object. Value: `%s`.', options));\n        if ($5a7912bad9882251$exports(options, 'copy')) {\n            opts.copy = options.copy;\n            if (!$3b344fcd5166f627$require$isBoolean(options.copy)) throw new TypeError($5a5504e40381a222$exports('invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', options.copy));\n        }\n        if ($5a7912bad9882251$exports(options, 'state')) {\n            state = options.state;\n            opts.state = true;\n            if (!$a3146ba2bb56d8f0$exports(state)) throw new TypeError($5a5504e40381a222$exports('invalid option. `%s` option must be a Uint32Array. Option: `%s`.', 'state', state));\n            err = $3b344fcd5166f627$var$verifyState(state, true);\n            if (err) throw err;\n            if (opts.copy === false) STATE = state;\n            else {\n                STATE = new $2ffeb30574781963$exports(state.length);\n                $5c6324161692e0ec$exports(state.length, state, 1, STATE, 1);\n            }\n            // Create a state \"view\":\n            state = new $2ffeb30574781963$exports(STATE.buffer, STATE.byteOffset + ($3b344fcd5166f627$var$STATE_SECTION_OFFSET + 1) * STATE.BYTES_PER_ELEMENT, $3b344fcd5166f627$var$N);\n            // Create a seed \"view\":\n            seed = new $2ffeb30574781963$exports(STATE.buffer, STATE.byteOffset + ($3b344fcd5166f627$var$SEED_SECTION_OFFSET + 1) * STATE.BYTES_PER_ELEMENT, state[$3b344fcd5166f627$var$SEED_SECTION_OFFSET]);\n        }\n        // If provided a PRNG state, we ignore the `seed` option...\n        if (seed === void 0) {\n            if ($5a7912bad9882251$exports(options, 'seed')) {\n                seed = options.seed;\n                opts.seed = true;\n                if ($3b344fcd5166f627$require$isPositiveInteger(seed)) {\n                    if (seed > $3b344fcd5166f627$var$MAX_SEED) throw new RangeError($5a5504e40381a222$exports('invalid option. `%s` option must be a positive integer less than or equal to the maximum unsigned 32-bit integer. Option: `%u`.', 'seed', seed));\n                    seed >>>= 0; // asm type annotation\n                } else if ($b52cee4fbc0f7b72$exports(seed) === false || seed.length < 1) throw new TypeError($5a5504e40381a222$exports('invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%s`.', 'seed', seed));\n                else if (seed.length === 1) {\n                    seed = seed[0];\n                    if (!$3b344fcd5166f627$require$isPositiveInteger(seed)) throw new TypeError($5a5504e40381a222$exports('invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%s`.', 'seed', seed));\n                    if (seed > $3b344fcd5166f627$var$MAX_SEED) throw new RangeError($5a5504e40381a222$exports('invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%u`.', 'seed', seed));\n                    seed >>>= 0; // asm type annotation\n                } else {\n                    slen = seed.length;\n                    STATE = new $2ffeb30574781963$exports($3b344fcd5166f627$var$STATE_FIXED_LENGTH + slen);\n                    // Initialize sections:\n                    STATE[0] = $3b344fcd5166f627$var$STATE_ARRAY_VERSION;\n                    STATE[1] = $3b344fcd5166f627$var$NUM_STATE_SECTIONS;\n                    STATE[$3b344fcd5166f627$var$STATE_SECTION_OFFSET] = $3b344fcd5166f627$var$N;\n                    STATE[$3b344fcd5166f627$var$OTHER_SECTION_OFFSET] = 1;\n                    STATE[$3b344fcd5166f627$var$OTHER_SECTION_OFFSET + 1] = $3b344fcd5166f627$var$N; // state index\n                    STATE[$3b344fcd5166f627$var$SEED_SECTION_OFFSET] = slen;\n                    // Copy the provided seed array to prevent external mutation, as mutation would lead to an inability to reproduce PRNG values according to the PRNG's stated seed:\n                    $5c6324161692e0ec$exports.ndarray(slen, seed, 1, 0, STATE, 1, $3b344fcd5166f627$var$SEED_SECTION_OFFSET + 1);\n                    // Create a state \"view\":\n                    state = new $2ffeb30574781963$exports(STATE.buffer, STATE.byteOffset + ($3b344fcd5166f627$var$STATE_SECTION_OFFSET + 1) * STATE.BYTES_PER_ELEMENT, $3b344fcd5166f627$var$N);\n                    // Create a seed \"view\":\n                    seed = new $2ffeb30574781963$exports(STATE.buffer, STATE.byteOffset + ($3b344fcd5166f627$var$SEED_SECTION_OFFSET + 1) * STATE.BYTES_PER_ELEMENT, slen);\n                    // Initialize the internal PRNG state:\n                    state = $3b344fcd5166f627$var$createState(state, $3b344fcd5166f627$var$N, $3b344fcd5166f627$var$SEED_ARRAY_INIT_STATE);\n                    state = $3b344fcd5166f627$var$initState(state, $3b344fcd5166f627$var$N, seed, slen);\n                }\n            } else seed = $a1390ae0787b71de$exports() >>> 0; // asm type annotation\n        }\n    } else seed = $a1390ae0787b71de$exports() >>> 0; // asm type annotation\n    if (state === void 0) {\n        STATE = new $2ffeb30574781963$exports($3b344fcd5166f627$var$STATE_FIXED_LENGTH + 1);\n        // Initialize sections:\n        STATE[0] = $3b344fcd5166f627$var$STATE_ARRAY_VERSION;\n        STATE[1] = $3b344fcd5166f627$var$NUM_STATE_SECTIONS;\n        STATE[$3b344fcd5166f627$var$STATE_SECTION_OFFSET] = $3b344fcd5166f627$var$N;\n        STATE[$3b344fcd5166f627$var$OTHER_SECTION_OFFSET] = 1;\n        STATE[$3b344fcd5166f627$var$OTHER_SECTION_OFFSET + 1] = $3b344fcd5166f627$var$N; // state index\n        STATE[$3b344fcd5166f627$var$SEED_SECTION_OFFSET] = 1;\n        STATE[$3b344fcd5166f627$var$SEED_SECTION_OFFSET + 1] = seed;\n        // Create a state \"view\":\n        state = new $2ffeb30574781963$exports(STATE.buffer, STATE.byteOffset + ($3b344fcd5166f627$var$STATE_SECTION_OFFSET + 1) * STATE.BYTES_PER_ELEMENT, $3b344fcd5166f627$var$N);\n        // Create a seed \"view\":\n        seed = new $2ffeb30574781963$exports(STATE.buffer, STATE.byteOffset + ($3b344fcd5166f627$var$SEED_SECTION_OFFSET + 1) * STATE.BYTES_PER_ELEMENT, 1);\n        // Initialize the internal PRNG state:\n        state = $3b344fcd5166f627$var$createState(state, $3b344fcd5166f627$var$N, seed);\n    }\n    // Note: property order matters in order to maintain consistency of PRNG \"shape\" (hidden classes).\n    $dfd4cfb9f136c5d5$exports(mt19937, 'NAME', 'mt19937');\n    $a4444f7456e1c73a$exports(mt19937, 'seed', getSeed);\n    $a4444f7456e1c73a$exports(mt19937, 'seedLength', getSeedLength);\n    $c1b2e538264ff4b7$exports(mt19937, 'state', getState, setState);\n    $a4444f7456e1c73a$exports(mt19937, 'stateLength', getStateLength);\n    $a4444f7456e1c73a$exports(mt19937, 'byteLength', getStateSize);\n    $dfd4cfb9f136c5d5$exports(mt19937, 'toJSON', toJSON);\n    $dfd4cfb9f136c5d5$exports(mt19937, 'MIN', 0);\n    $dfd4cfb9f136c5d5$exports(mt19937, 'MAX', $a5069161f8233194$exports);\n    $dfd4cfb9f136c5d5$exports(mt19937, 'normalized', normalized);\n    $dfd4cfb9f136c5d5$exports(normalized, 'NAME', mt19937.NAME);\n    $a4444f7456e1c73a$exports(normalized, 'seed', getSeed);\n    $a4444f7456e1c73a$exports(normalized, 'seedLength', getSeedLength);\n    $c1b2e538264ff4b7$exports(normalized, 'state', getState, setState);\n    $a4444f7456e1c73a$exports(normalized, 'stateLength', getStateLength);\n    $a4444f7456e1c73a$exports(normalized, 'byteLength', getStateSize);\n    $dfd4cfb9f136c5d5$exports(normalized, 'toJSON', toJSON);\n    $dfd4cfb9f136c5d5$exports(normalized, 'MIN', 0.0);\n    $dfd4cfb9f136c5d5$exports(normalized, 'MAX', $3b344fcd5166f627$var$MAX_NORMALIZED);\n    return mt19937;\n    /**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMT19937} seed\n\t*/ function getSeed() {\n        var len = STATE[$3b344fcd5166f627$var$SEED_SECTION_OFFSET];\n        return $5c6324161692e0ec$exports(len, seed, 1, new $2ffeb30574781963$exports(len), 1);\n    }\n    /**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/ function getSeedLength() {\n        return STATE[$3b344fcd5166f627$var$SEED_SECTION_OFFSET];\n    }\n    /**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/ function getStateLength() {\n        return STATE.length;\n    }\n    /**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/ function getStateSize() {\n        return STATE.byteLength;\n    }\n    /**\n\t* Returns the current PRNG state.\n\t*\n\t* ## Notes\n\t*\n\t* -   The PRNG state array is comprised of a preamble followed by `3` sections:\n\t*\n\t*     0.  preamble (version + number of sections)\n\t*     1.  internal PRNG state\n\t*     2.  auxiliary state information\n\t*     3.  PRNG seed\n\t*\n\t* -   The first element of the PRNG state array preamble is the state array schema version.\n\t*\n\t* -   The second element of the PRNG state array preamble is the number of state array sections (i.e., `3`).\n\t*\n\t* -   The first element of each section following the preamble specifies the section length. The remaining section elements comprise the section contents.\n\t*\n\t* @private\n\t* @returns {PRNGStateMT19937} current state\n\t*/ function getState() {\n        var len = STATE.length;\n        return $5c6324161692e0ec$exports(len, STATE, 1, new $2ffeb30574781963$exports(len), 1);\n    }\n    /**\n\t* Sets the PRNG state.\n\t*\n\t* ## Notes\n\t*\n\t* -   If PRNG state is \"shared\" (meaning a state array was provided during PRNG creation and **not** copied) and one sets the generator state to a state array having a different length, the PRNG does **not** update the existing shared state and, instead, points to the newly provided state array. In order to synchronize PRNG output according to the new shared state array, the state array for **each** relevant PRNG must be **explicitly** set.\n\t* -   If PRNG state is \"shared\" and one sets the generator state to a state array of the same length, the PRNG state is updated (along with the state of all other PRNGs sharing the PRNG's state array).\n\t*\n\t* @private\n\t* @param {PRNGStateMT19937} s - generator state\n\t* @throws {TypeError} must provide a `Uint32Array`\n\t* @throws {Error} must provide a valid state\n\t*/ function setState(s) {\n        var err;\n        if (!$a3146ba2bb56d8f0$exports(s)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide a Uint32Array. Value: `%s`.', s));\n        err = $3b344fcd5166f627$var$verifyState(s, false);\n        if (err) throw err;\n        if (opts.copy === false) {\n            if (opts.state && s.length === STATE.length) $5c6324161692e0ec$exports(s.length, s, 1, STATE, 1); // update current shared state\n            else {\n                STATE = s; // point to new shared state\n                opts.state = true; // setting this flag allows updating a shared state even if a state array was not provided at PRNG creation\n            }\n        } else {\n            // Check if we can reuse allocated memory...\n            if (s.length !== STATE.length) STATE = new $2ffeb30574781963$exports(s.length); // reallocate\n            $5c6324161692e0ec$exports(s.length, s, 1, STATE, 1);\n        }\n        // Create a new state \"view\":\n        state = new $2ffeb30574781963$exports(STATE.buffer, STATE.byteOffset + ($3b344fcd5166f627$var$STATE_SECTION_OFFSET + 1) * STATE.BYTES_PER_ELEMENT, $3b344fcd5166f627$var$N);\n        // Create a new seed \"view\":\n        seed = new $2ffeb30574781963$exports(STATE.buffer, STATE.byteOffset + ($3b344fcd5166f627$var$SEED_SECTION_OFFSET + 1) * STATE.BYTES_PER_ELEMENT, STATE[$3b344fcd5166f627$var$SEED_SECTION_OFFSET]);\n    }\n    /**\n\t* Serializes the pseudorandom number generator as a JSON object.\n\t*\n\t* ## Notes\n\t*\n\t* -   `JSON.stringify()` implicitly calls this method when stringifying a PRNG.\n\t*\n\t* @private\n\t* @returns {Object} JSON representation\n\t*/ function toJSON() {\n        var out = {};\n        out.type = 'PRNG';\n        out.name = mt19937.NAME;\n        out.state = $46c75d6fadb33a0e$exports(STATE);\n        out.params = [];\n        return out;\n    }\n    /**\n\t* Generates a pseudorandom integer on the interval \\\\( [0, 2^{32}) \\\\).\n\t*\n\t* @private\n\t* @returns {uinteger32} pseudorandom integer\n\t*\n\t* @example\n\t* var r = mt19937();\n\t* // returns <number>\n\t*/ function mt19937() {\n        var r;\n        var i;\n        // Retrieve the current state index:\n        i = STATE[$3b344fcd5166f627$var$OTHER_SECTION_OFFSET + 1];\n        // Determine whether we need to update the PRNG state:\n        if (i >= $3b344fcd5166f627$var$N) {\n            state = $3b344fcd5166f627$var$twist(state);\n            i = 0;\n        }\n        // Get the next word of \"raw\"/untempered state:\n        r = state[i];\n        // Update the state index:\n        STATE[$3b344fcd5166f627$var$OTHER_SECTION_OFFSET + 1] = i + 1;\n        // Tempering transform to compensate for the reduced dimensionality of equidistribution:\n        r ^= r >>> 11;\n        r ^= r << 7 & $3b344fcd5166f627$var$TEMPERING_COEFFICIENT_1;\n        r ^= r << 15 & $3b344fcd5166f627$var$TEMPERING_COEFFICIENT_2;\n        r ^= r >>> 18;\n        return r >>> 0;\n    }\n    /**\n\t* Generates a pseudorandom number on the interval \\\\( [0, 1) \\\\).\n\t*\n\t* ## Notes\n\t*\n\t* -   The original C implementation credits Isaku Wada for this algorithm (2002/01/09).\n\t*\n\t* @private\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var r = normalized();\n\t* // returns <number>\n\t*/ function normalized() {\n        var x = mt19937() >>> 5;\n        var y = mt19937() >>> 6;\n        return (x * $3b344fcd5166f627$var$TWO_26 + y) * $3b344fcd5166f627$var$FLOAT64_NORMALIZATION_CONSTANT;\n    }\n}\n// EXPORTS //\n$3b344fcd5166f627$exports = $3b344fcd5166f627$var$factory;\n\n\n\n// MAIN //\n/**\n* Generates a pseudorandom integer on the interval \\\\( [0, 2^{32}) \\\\).\n*\n* ## Method\n*\n* -   When generating normalized double-precision floating-point numbers, we first generate two pseudorandom integers \\\\( x \\\\) and \\\\( y \\\\) on the interval \\\\( [0, 2^{32}) \\\\) for a combined \\\\( 64 \\\\) random bits.\n*\n* -   We would like \\\\( 53 \\\\) random bits to generate a 53-bit precision integer and, thus, want to discard \\\\( 11 \\\\) of the generated bits.\n*\n* -   We do so by discarding \\\\( 5 \\\\) bits from \\\\( x \\\\) and \\\\( 6 \\\\) bits from \\\\( y \\\\).\n*\n* -   Accordingly, \\\\( x \\\\) contains \\\\( 27 \\\\) random bits, which are subsequently shifted left \\\\( 26 \\\\) bits (multiplied by \\\\( 2^{26} \\\\), and \\\\( y \\\\) contains \\\\( 26 \\\\) random bits to fill in the lower \\\\( 26 \\\\) bits. When summed, they combine to comprise \\\\( 53 \\\\) random bits of a double-precision floating-point integer.\n*\n* -   As an example, suppose, for the sake of argument, the 32-bit PRNG generates the maximum unsigned 32-bit integer \\\\( 2^{32}-1 \\\\) twice in a row. Then,\n*\n*     ```javascript\n*     x = 4294967295 >>> 5; // 00000111111111111111111111111111\n*     y = 4294967295 >>> 6; // 00000011111111111111111111111111\n*     ```\n*\n*     Multiplying \\\\( x \\\\) by \\\\( 2^{26} \\\\) returns \\\\( 9007199187632128 \\\\), which, in binary, is\n*\n*     ```binarystring\n*     0 10000110011 11111111111111111111 11111100000000000000000000000000\n*     ```\n*\n*     Adding \\\\( y \\\\) yields \\\\( 9007199254740991 \\\\) (the maximum \"safe\" double-precision floating-point integer value), which, in binary, is\n*\n*     ```binarystring\n*     0 10000110011 11111111111111111111 11111111111111111111111111111111\n*     ```\n*\n* -   Similarly, suppose the 32-bit PRNG generates the following values\n*\n*     ```javascript\n*     x = 1 >>> 5;  // 0 => 00000000000000000000000000000000\n*     y = 64 >>> 6; // 1 => 00000000000000000000000000000001\n*     ```\n*\n*     Multiplying \\\\( x \\\\) by \\\\( 2^{26} \\\\) returns \\\\( 0 \\\\), which, in binary, is\n*\n*     ```binarystring\n*     0 00000000000 00000000000000000000 00000000000000000000000000000000\n*     ```\n*\n*     Adding \\\\( y \\\\) yields \\\\( 1 \\\\), which, in binary, is\n*\n*     ```binarystring\n*     0 01111111111 00000000000000000000 00000000000000000000000000000000\n*     ```\n*\n* -   As different combinations of \\\\( x \\\\) and \\\\( y \\\\) are generated, different combinations of double-precision floating-point exponent and significand bits will be toggled, thus generating pseudorandom double-precision floating-point numbers.\n*\n* ## References\n*\n* -   Matsumoto, Makoto, and Takuji Nishimura. 1998. \"Mersenne Twister: A 623-dimensionally Equidistributed Uniform Pseudo-random Number Generator.\" _ACM Transactions on Modeling and Computer Simulation_ 8 (1). New York, NY, USA: ACM: 3–30. doi:[10.1145/272991.272995][@matsumoto:1998a].\n* -   Harase, Shin. 2017. \"Conversion of Mersenne Twister to double-precision floating-point numbers.\" _ArXiv_ abs/1708.06018 (September). <https://arxiv.org/abs/1708.06018>.\n*\n* [@matsumoto:1998a]: https://doi.org/10.1145/272991.272995\n*\n* @function mt19937\n* @type {PRNG}\n* @returns {PositiveInteger} pseudorandom integer\n*\n* @example\n* var v = mt19937();\n* // returns <number>\n*/ var $54d02d2e82bde01d$var$mt19937 = $3b344fcd5166f627$exports({\n    'seed': $a1390ae0787b71de$exports()\n});\n// EXPORTS //\n$54d02d2e82bde01d$exports = $54d02d2e82bde01d$var$mt19937;\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($54d02d2e82bde01d$exports, 'factory', $3b344fcd5166f627$exports);\n// EXPORTS //\n$05d4f0dfaf19f1a1$exports = $54d02d2e82bde01d$exports;\n\n\nvar $82132ebca57c92e4$require$mt19937 = $05d4f0dfaf19f1a1$exports.factory;\n\n\n\n\n\n\nvar $787fa62bd4fb4f7a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $c3b1c45c52c68198$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $8f7102689254549e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\n/**\n* Computes the absolute value of a double-precision floating-point number `x`.\n*\n* @param {number} x - input value\n* @returns {number} absolute value\n*\n* @example\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* @example\n* var v = abs( 2.0 );\n* // returns 2.0\n*\n* @example\n* var v = abs( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( -0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( NaN );\n* // returns NaN\n*/ function $8f7102689254549e$var$abs(x) {\n    return Math.abs(x); // eslint-disable-line stdlib/no-builtin-math\n}\n// EXPORTS //\n$8f7102689254549e$exports = $8f7102689254549e$var$abs;\n\n\n// EXPORTS //\n$c3b1c45c52c68198$exports = $8f7102689254549e$exports;\n\n\nvar $b35c6ca368f840b7$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $5d80281c5bdd2b49$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyrights, licenses, and long comment were part of the original implementation available as part of [Go]{@link https://github.com/golang/go/blob/cb07765045aed5104a3df31507564ac99e6ddce8/src/math/exp.go}, which in turn was based on an implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_exp.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (c) 2009 The Go Authors. All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without\n* modification, are permitted provided that the following conditions are\n* met:\n*\n*    * Redistributions of source code must retain the above copyright\n* notice, this list of conditions and the following disclaimer.\n*    * Redistributions in binary form must reproduce the above\n* copyright notice, this list of conditions and the following disclaimer\n* in the documentation and/or other materials provided with the\n* distribution.\n*    * Neither the name of Google Inc. nor the names of its\n* contributors may be used to endorse or promote products derived from\n* this software without specific prior written permission.\n*\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n* \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* ```\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/ 'use strict';\n\nvar $04c484e1b6b0e61d$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $bcfb4e2c004a5d85$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $289e17509f014ab2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $d74bdb801b28b127$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// TODO: implementation (?)\n/**\n* Rounds a double-precision floating-point number toward positive infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = ceil( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = ceil( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = ceil( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = ceil( NaN );\n* // returns NaN\n*/ var $d74bdb801b28b127$var$ceil = Math.ceil; // eslint-disable-line stdlib/no-builtin-math\n// EXPORTS //\n$d74bdb801b28b127$exports = $d74bdb801b28b127$var$ceil;\n\n\n// EXPORTS //\n$289e17509f014ab2$exports = $d74bdb801b28b127$exports;\n\n\n// MAIN //\n/**\n* Rounds a double-precision floating-point number toward zero.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = trunc( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = trunc( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = trunc( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = trunc( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = trunc( NaN );\n* // returns NaN\n*\n* @example\n* var v = trunc( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = trunc( -Infinity );\n* // returns -Infinity\n*/ function $bcfb4e2c004a5d85$var$trunc(x) {\n    if (x < 0.0) return $289e17509f014ab2$exports(x);\n    return $19a18984922c6b5f$exports(x);\n}\n// EXPORTS //\n$bcfb4e2c004a5d85$exports = $bcfb4e2c004a5d85$var$trunc;\n\n\n// EXPORTS //\n$04c484e1b6b0e61d$exports = $bcfb4e2c004a5d85$exports;\n\n\n\n\nvar $b69836c7c753b273$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyrights, licenses, and long comment were part of the original implementation available as part of [Go]{@link https://github.com/golang/go/blob/cb07765045aed5104a3df31507564ac99e6ddce8/src/math/exp.go}, which in turn was based on an implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_exp.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (c) 2009 The Go Authors. All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without\n* modification, are permitted provided that the following conditions are\n* met:\n*\n*    * Redistributions of source code must retain the above copyright\n* notice, this list of conditions and the following disclaimer.\n*    * Redistributions in binary form must reproduce the above\n* copyright notice, this list of conditions and the following disclaimer\n* in the documentation and/or other materials provided with the\n* distribution.\n*    * Neither the name of Google Inc. nor the names of its\n* contributors may be used to endorse or promote products derived from\n* this software without specific prior written permission.\n*\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n* \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* ```\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/ 'use strict';\nvar $1022cb4988ba009f$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $a10bcf89a5217591$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\nvar $34e9e8663ea87dc8$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* The bias of a double-precision floating-point number's exponent.\n*\n* @module @stdlib/constants/float64/exponent-bias\n* @type {integer32}\n*\n* @example\n* var FLOAT64_EXPONENT_BIAS = require( '@stdlib/constants/float64/exponent-bias' );\n* // returns 1023\n*/ // MAIN //\n/**\n* Bias of a double-precision floating-point number's exponent.\n*\n* ## Notes\n*\n* The bias can be computed via\n*\n* ```tex\n* \\mathrm{bias} = 2^{k-1} - 1\n* ```\n*\n* where \\\\(k\\\\) is the number of bits in the exponent; here, \\\\(k = 11\\\\).\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/ var $34e9e8663ea87dc8$var$FLOAT64_EXPONENT_BIAS = 1023; // asm type annotation\n// EXPORTS //\n$34e9e8663ea87dc8$exports = $34e9e8663ea87dc8$var$FLOAT64_EXPONENT_BIAS;\n\n\nvar $a3e6d81a9e86d108$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/max-base2-exponent\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MAX_BASE2_EXPONENT = require( '@stdlib/constants/float64/max-base2-exponent' );\n* // returns 1023\n*/ // MAIN //\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* ```text\n* 11111111110 => 2046 - BIAS = 1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/ var $a3e6d81a9e86d108$var$FLOAT64_MAX_BASE2_EXPONENT = 1023; // asm type annotation\n// EXPORTS //\n$a3e6d81a9e86d108$exports = $a3e6d81a9e86d108$var$FLOAT64_MAX_BASE2_EXPONENT;\n\n\nvar $d07a7ab16f56612c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/max-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = require( '@stdlib/constants/float64/max-base2-exponent-subnormal' );\n* // returns -1023\n*/ // MAIN //\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* 00000000000 => 0 - BIAS = -1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default -1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/ var $d07a7ab16f56612c$var$FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = -1023; // asm type annotation\n// EXPORTS //\n$d07a7ab16f56612c$exports = $d07a7ab16f56612c$var$FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL;\n\n\nvar $edfa495c3e8dc3b6$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/min-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = require( '@stdlib/constants/float64/min-base2-exponent-subnormal' );\n* // returns -1074\n*/ // MAIN //\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* -(BIAS+(52-1)) = -(1023+51) = -1074\n* ```\n*\n* where `BIAS = 1023` and `52` is the number of digits in the significand.\n*\n* @constant\n* @type {integer32}\n* @default -1074\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/ var $edfa495c3e8dc3b6$var$FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = -1074; // asm type annotation\n// EXPORTS //\n$edfa495c3e8dc3b6$exports = $edfa495c3e8dc3b6$var$FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL;\n\n\n\nvar $baf4b596b38391ae$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $e724c8c573aa15bb$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n// MAIN //\n/**\n* Tests if a double-precision floating-point numeric value is infinite.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is infinite\n*\n* @example\n* var bool = isInfinite( Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( -Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isInfinite( NaN );\n* // returns false\n*/ function $e724c8c573aa15bb$var$isInfinite(x) {\n    return x === $163c16c3843b9db0$exports || x === $8caa281ecaa80049$exports;\n}\n// EXPORTS //\n$e724c8c573aa15bb$exports = $e724c8c573aa15bb$var$isInfinite;\n\n\n// EXPORTS //\n$baf4b596b38391ae$exports = $e724c8c573aa15bb$exports;\n\n\nvar $80ce45bbbc194168$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $91574aed2d327ce0$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $d622ef5ed2260c58$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* High word mask for the sign bit of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/high-word-sign-mask\n* @type {uinteger32}\n*\n* @example\n* var FLOAT64_HIGH_WORD_SIGN_MASK = require( '@stdlib/constants/float64/high-word-sign-mask' );\n* // returns 2147483648\n*/ // MAIN //\n/**\n* High word mask for the sign bit of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for the sign bit of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2147483648 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 1 00000000000 00000000000000000000\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x80000000\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/ var $d622ef5ed2260c58$var$FLOAT64_HIGH_WORD_SIGN_MASK = 2147483648; // eslint-disable-line id-length\n// EXPORTS //\n$d622ef5ed2260c58$exports = $d622ef5ed2260c58$var$FLOAT64_HIGH_WORD_SIGN_MASK;\n\n\nvar $39fd8267c1818b2c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* High word mask for excluding the sign bit of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/high-word-abs-mask\n* @type {uinteger32}\n*\n* @example\n* var FLOAT64_HIGH_WORD_ABS_MASK = require( '@stdlib/constants/float64/high-word-abs-mask' );\n* // returns 2147483647\n*/ // MAIN //\n/**\n* High word mask for excluding the sign bit of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for excluding the sign bit of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2147483647 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 11111111111 11111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x7fffffff\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/ var $39fd8267c1818b2c$var$FLOAT64_HIGH_WORD_ABS_MASK = 2147483647; // eslint-disable-line id-length\n// EXPORTS //\n$39fd8267c1818b2c$exports = $39fd8267c1818b2c$var$FLOAT64_HIGH_WORD_ABS_MASK;\n\n\nvar $d83d8b2815a1bcbe$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $f319b4b6c1a5cdf9$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $353a9012a2ac293e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\nvar $7bbb979cc546c5ad$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $997874f55af78d2a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $8e281ac8ec44f482$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $f7b715a9b4010760$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n// MAIN //\nvar $f7b715a9b4010760$var$ctors = {\n    'uint16': $d41d9d0c25adca97$exports,\n    'uint8': $b1ee90e09bc85e12$exports\n};\n// EXPORTS //\n$f7b715a9b4010760$exports = $f7b715a9b4010760$var$ctors;\n\n\n// VARIABLES //\nvar $8e281ac8ec44f482$var$bool;\n// FUNCTIONS //\n/**\n* Returns a boolean indicating if an environment is little endian.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment is little endian\n*\n* @example\n* var bool = isLittleEndian();\n* // returns <boolean>\n*/ function $8e281ac8ec44f482$var$isLittleEndian() {\n    var uint16view;\n    var uint8view;\n    uint16view = new $f7b715a9b4010760$exports.uint16(1);\n    /*\n\t* Set the uint16 view to a value having distinguishable lower and higher order words.\n\t*\n\t* 4660 => 0x1234 => 0x12 0x34 => '00010010 00110100' => (0x12,0x34) == (18,52)\n\t*/ uint16view[0] = 0x1234;\n    // Create a uint8 view on top of the uint16 buffer:\n    uint8view = new $f7b715a9b4010760$exports.uint8(uint16view.buffer);\n    // If little endian, the least significant byte will be first...\n    return uint8view[0] === 0x34;\n}\n// MAIN //\n$8e281ac8ec44f482$var$bool = $8e281ac8ec44f482$var$isLittleEndian();\n// EXPORTS //\n$8e281ac8ec44f482$exports = $8e281ac8ec44f482$var$bool;\n\n\n// EXPORTS //\n$997874f55af78d2a$exports = $8e281ac8ec44f482$exports;\n\n\n// MAIN //\nvar $7bbb979cc546c5ad$var$indices;\nvar $7bbb979cc546c5ad$var$HIGH;\nvar $7bbb979cc546c5ad$var$LOW;\nif ($997874f55af78d2a$exports === true) {\n    $7bbb979cc546c5ad$var$HIGH = 1; // second index\n    $7bbb979cc546c5ad$var$LOW = 0; // first index\n} else {\n    $7bbb979cc546c5ad$var$HIGH = 0; // first index\n    $7bbb979cc546c5ad$var$LOW = 1; // second index\n}\n$7bbb979cc546c5ad$var$indices = {\n    'HIGH': $7bbb979cc546c5ad$var$HIGH,\n    'LOW': $7bbb979cc546c5ad$var$LOW\n};\n// EXPORTS //\n$7bbb979cc546c5ad$exports = $7bbb979cc546c5ad$var$indices;\n\n\n// VARIABLES //\nvar $353a9012a2ac293e$var$FLOAT64_VIEW = new $688bf0eeb5997346$exports(1);\nvar $353a9012a2ac293e$var$UINT32_VIEW = new $2ffeb30574781963$exports($353a9012a2ac293e$var$FLOAT64_VIEW.buffer);\nvar $353a9012a2ac293e$var$HIGH = $7bbb979cc546c5ad$exports.HIGH;\nvar $353a9012a2ac293e$var$LOW = $7bbb979cc546c5ad$exports.LOW;\n// MAIN //\n/**\n* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @private\n* @param {number} x - input value\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* var Uint32Array = require( '@stdlib/array/uint32' );\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords( 3.14e201, out, 1, 0 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/ function $353a9012a2ac293e$var$toWords(x, out, stride, offset) {\n    $353a9012a2ac293e$var$FLOAT64_VIEW[0] = x;\n    out[offset] = $353a9012a2ac293e$var$UINT32_VIEW[$353a9012a2ac293e$var$HIGH];\n    out[offset + stride] = $353a9012a2ac293e$var$UINT32_VIEW[$353a9012a2ac293e$var$LOW];\n    return out;\n}\n// EXPORTS //\n$353a9012a2ac293e$exports = $353a9012a2ac293e$var$toWords;\n\n\n// MAIN //\n/**\n* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @param {number} x - input value\n* @returns {Array<number>} output array\n*\n* @example\n* var w = toWords( 3.14e201 );\n* // returns [ 1774486211, 2479577218 ]\n*/ function $f319b4b6c1a5cdf9$var$toWords(x) {\n    return $353a9012a2ac293e$exports(x, [\n        0,\n        0\n    ], 1, 0);\n}\n// EXPORTS //\n$f319b4b6c1a5cdf9$exports = $f319b4b6c1a5cdf9$var$toWords;\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($f319b4b6c1a5cdf9$exports, 'assign', $353a9012a2ac293e$exports);\n// EXPORTS //\n$d83d8b2815a1bcbe$exports = $f319b4b6c1a5cdf9$exports;\n\n\nvar $a12df7c61468e5b9$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $a7d3f0b6903ad805$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\nvar $487d580d2069144a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\nvar $487d580d2069144a$var$HIGH;\nif ($997874f55af78d2a$exports === true) $487d580d2069144a$var$HIGH = 1; // second index\nelse $487d580d2069144a$var$HIGH = 0; // first index\n// EXPORTS //\n$487d580d2069144a$exports = $487d580d2069144a$var$HIGH;\n\n\n// VARIABLES //\nvar $a7d3f0b6903ad805$var$FLOAT64_VIEW = new $688bf0eeb5997346$exports(1);\nvar $a7d3f0b6903ad805$var$UINT32_VIEW = new $2ffeb30574781963$exports($a7d3f0b6903ad805$var$FLOAT64_VIEW.buffer);\n// MAIN //\n/**\n* Returns an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - input value\n* @returns {uinteger32} higher order word\n*\n* @example\n* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011\n* // returns 1774486211\n*/ function $a7d3f0b6903ad805$var$getHighWord(x) {\n    $a7d3f0b6903ad805$var$FLOAT64_VIEW[0] = x;\n    return $a7d3f0b6903ad805$var$UINT32_VIEW[$487d580d2069144a$exports];\n}\n// EXPORTS //\n$a7d3f0b6903ad805$exports = $a7d3f0b6903ad805$var$getHighWord;\n\n\n// EXPORTS //\n$a12df7c61468e5b9$exports = $a7d3f0b6903ad805$exports;\n\n\nvar $bd3b32db5ed1e9e1$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $f36489ace07312b2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\nvar $8c8ca92d33842b22$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\nvar $8c8ca92d33842b22$var$indices;\nvar $8c8ca92d33842b22$var$HIGH;\nvar $8c8ca92d33842b22$var$LOW;\nif ($997874f55af78d2a$exports === true) {\n    $8c8ca92d33842b22$var$HIGH = 1; // second index\n    $8c8ca92d33842b22$var$LOW = 0; // first index\n} else {\n    $8c8ca92d33842b22$var$HIGH = 0; // first index\n    $8c8ca92d33842b22$var$LOW = 1; // second index\n}\n$8c8ca92d33842b22$var$indices = {\n    'HIGH': $8c8ca92d33842b22$var$HIGH,\n    'LOW': $8c8ca92d33842b22$var$LOW\n};\n// EXPORTS //\n$8c8ca92d33842b22$exports = $8c8ca92d33842b22$var$indices;\n\n\n// VARIABLES //\nvar $f36489ace07312b2$var$FLOAT64_VIEW = new $688bf0eeb5997346$exports(1);\nvar $f36489ace07312b2$var$UINT32_VIEW = new $2ffeb30574781963$exports($f36489ace07312b2$var$FLOAT64_VIEW.buffer);\nvar $f36489ace07312b2$var$HIGH = $8c8ca92d33842b22$exports.HIGH;\nvar $f36489ace07312b2$var$LOW = $8c8ca92d33842b22$exports.LOW;\n// MAIN //\n/**\n* Creates a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 should we place the higher order bits? If little endian, the second; if big endian, the first.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {uinteger32} high - higher order word (unsigned 32-bit integer)\n* @param {uinteger32} low - lower order word (unsigned 32-bit integer)\n* @returns {number} floating-point number\n*\n* @example\n* var v = fromWords( 1774486211, 2479577218 );\n* // returns 3.14e201\n*\n* @example\n* var v = fromWords( 3221823995, 1413754136 );\n* // returns -3.141592653589793\n*\n* @example\n* var v = fromWords( 0, 0 );\n* // returns 0.0\n*\n* @example\n* var v = fromWords( 2147483648, 0 );\n* // returns -0.0\n*\n* @example\n* var v = fromWords( 2146959360, 0 );\n* // returns NaN\n*\n* @example\n* var v = fromWords( 2146435072, 0 );\n* // returns Infinity\n*\n* @example\n* var v = fromWords( 4293918720, 0 );\n* // returns -Infinity\n*/ function $f36489ace07312b2$var$fromWords(high, low) {\n    $f36489ace07312b2$var$UINT32_VIEW[$f36489ace07312b2$var$HIGH] = high;\n    $f36489ace07312b2$var$UINT32_VIEW[$f36489ace07312b2$var$LOW] = low;\n    return $f36489ace07312b2$var$FLOAT64_VIEW[0];\n}\n// EXPORTS //\n$f36489ace07312b2$exports = $f36489ace07312b2$var$fromWords;\n\n\n// EXPORTS //\n$bd3b32db5ed1e9e1$exports = $f36489ace07312b2$exports;\n\n\n// VARIABLES //\n// High/low words workspace:\nvar $91574aed2d327ce0$var$WORDS = [\n    0,\n    0\n];\n// MAIN //\n/**\n* Returns a double-precision floating-point number with the magnitude of `x` and the sign of `y`.\n*\n* @param {number} x - number from which to derive a magnitude\n* @param {number} y - number from which to derive a sign\n* @returns {number} a double-precision floating-point number\n*\n* @example\n* var z = copysign( -3.14, 10.0 );\n* // returns 3.14\n*\n* @example\n* var z = copysign( 3.14, -1.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( 1.0, -0.0 );\n* // returns -1.0\n*\n* @example\n* var z = copysign( -3.14, -0.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( -0.0, 1.0 );\n* // returns 0.0\n*/ function $91574aed2d327ce0$var$copysign(x, y) {\n    var hx;\n    var hy;\n    // Split `x` into higher and lower order words:\n    $d83d8b2815a1bcbe$exports.assign(x, $91574aed2d327ce0$var$WORDS, 1, 0);\n    hx = $91574aed2d327ce0$var$WORDS[0];\n    // Turn off the sign bit of `x`:\n    hx &= $39fd8267c1818b2c$exports;\n    // Extract the higher order word from `y`:\n    hy = $a12df7c61468e5b9$exports(y);\n    // Leave only the sign bit of `y` turned on:\n    hy &= $d622ef5ed2260c58$exports;\n    // Copy the sign bit of `y` to `x`:\n    hx |= hy;\n    // Return a new value having the same magnitude as `x`, but with the sign of `y`:\n    return $bd3b32db5ed1e9e1$exports(hx, $91574aed2d327ce0$var$WORDS[1]);\n}\n// EXPORTS //\n$91574aed2d327ce0$exports = $91574aed2d327ce0$var$copysign;\n\n\n// EXPORTS //\n$80ce45bbbc194168$exports = $91574aed2d327ce0$exports;\n\n\nvar $18f974f475440ccd$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $eb591093379e40af$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $952d76d4f57d25ee$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $7c6e9019493442ac$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Smallest positive double-precision floating-point normal number.\n*\n* @module @stdlib/constants/float64/smallest-normal\n* @type {number}\n*\n* @example\n* var FLOAT64_SMALLEST_NORMAL = require( '@stdlib/constants/float64/smallest-normal' );\n* // returns 2.2250738585072014e-308\n*/ // MAIN //\n/**\n* The smallest positive double-precision floating-point normal number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* \\frac{1}{2^{1023-1}}\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00000000001 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default 2.2250738585072014e-308\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/ var $7c6e9019493442ac$var$FLOAT64_SMALLEST_NORMAL = 2.2250738585072014e-308;\n// EXPORTS //\n$7c6e9019493442ac$exports = $7c6e9019493442ac$var$FLOAT64_SMALLEST_NORMAL;\n\n\n\n\n\n// VARIABLES //\n// (1<<52)\nvar $952d76d4f57d25ee$var$SCALAR = 4503599627370496;\n// MAIN //\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\) and assigns results to a provided output array.\n*\n* @param {number} x - input value\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var out = normalize( 3.14e-319, [ 0.0, 0 ], 1, 0 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var out = normalize( 0.0, [ 0.0, 0 ], 1, 0 );\n* // returns [ 0.0, 0 ];\n*\n* @example\n* var PINF = require( '@stdlib/constants/float64/pinf' );\n*\n* var out = normalize( PINF, [ 0.0, 0 ], 1, 0 );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* var NINF = require( '@stdlib/constants/float64/ninf' );\n*\n* var out = normalize( NINF, [ 0.0, 0 ], 1, 0 );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( NaN, [ 0.0, 0 ], 1, 0 );\n* // returns [ NaN, 0 ]\n*/ function $952d76d4f57d25ee$var$normalize(x, out, stride, offset) {\n    if ($806500fab48b0961$exports(x) || $baf4b596b38391ae$exports(x)) {\n        out[offset] = x;\n        out[offset + stride] = 0;\n        return out;\n    }\n    if (x !== 0.0 && $c3b1c45c52c68198$exports(x) < $7c6e9019493442ac$exports) {\n        out[offset] = x * $952d76d4f57d25ee$var$SCALAR;\n        out[offset + stride] = -52;\n        return out;\n    }\n    out[offset] = x;\n    out[offset + stride] = 0;\n    return out;\n}\n// EXPORTS //\n$952d76d4f57d25ee$exports = $952d76d4f57d25ee$var$normalize;\n\n\n// MAIN //\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @param {number} x - input value\n* @returns {NumberArray} output array\n*\n* @example\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var out = normalize( 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var out = normalize( 0.0 );\n* // returns [ 0.0, 0 ]\n*\n* @example\n* var PINF = require( '@stdlib/constants/float64/pinf' );\n*\n* var out = normalize( PINF );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* var NINF = require( '@stdlib/constants/float64/ninf' );\n*\n* var out = normalize( NINF );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( NaN );\n* // returns [ NaN, 0 ]\n*/ function $eb591093379e40af$var$normalize(x) {\n    return $952d76d4f57d25ee$exports(x, [\n        0.0,\n        0\n    ], 1, 0);\n}\n// EXPORTS //\n$eb591093379e40af$exports = $eb591093379e40af$var$normalize;\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($eb591093379e40af$exports, 'assign', $952d76d4f57d25ee$exports);\n// EXPORTS //\n$18f974f475440ccd$exports = $eb591093379e40af$exports;\n\n\nvar $a10bcf89a5217591$require$normalize = $18f974f475440ccd$exports.assign;\nvar $4bf8ff0a3522d4d0$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $29a1d20f56f31deb$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $13768c218cecc6a2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/high-word-exponent-mask\n* @type {uinteger32}\n*\n* @example\n* var FLOAT64_HIGH_WORD_EXPONENT_MASK = require( '@stdlib/constants/float64/high-word-exponent-mask' );\n* // returns 2146435072\n*/ // MAIN //\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for the exponent of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2146435072 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x7ff00000\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/ var $13768c218cecc6a2$var$FLOAT64_HIGH_WORD_EXPONENT_MASK = 0x7ff00000;\n// EXPORTS //\n$13768c218cecc6a2$exports = $13768c218cecc6a2$var$FLOAT64_HIGH_WORD_EXPONENT_MASK;\n\n\n\n// MAIN //\n/**\n* Returns an integer corresponding to the unbiased exponent of a double-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {integer32} unbiased exponent\n*\n* @example\n* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307\n* // returns -1019\n*\n* @example\n* var exp = exponent( -3.14 );\n* // returns 1\n*\n* @example\n* var exp = exponent( 0.0 );\n* // returns -1023\n*\n* @example\n* var exp = exponent( NaN );\n* // returns 1024\n*/ function $29a1d20f56f31deb$var$exponent(x) {\n    // Extract from the input value a higher order word (unsigned 32-bit integer) which contains the exponent:\n    var high = $a12df7c61468e5b9$exports(x);\n    // Apply a mask to isolate only the exponent bits and then shift off all bits which are part of the fraction:\n    high = (high & $13768c218cecc6a2$exports) >>> 20;\n    // Remove the bias and return:\n    return high - $34e9e8663ea87dc8$exports | 0; // asm type annotation\n}\n// EXPORTS //\n$29a1d20f56f31deb$exports = $29a1d20f56f31deb$var$exponent;\n\n\n// EXPORTS //\n$4bf8ff0a3522d4d0$exports = $29a1d20f56f31deb$exports;\n\n\n\n\n// VARIABLES //\n// 1/(1<<52) = 1/(2**52) = 1/4503599627370496\nvar $a10bcf89a5217591$var$TWO52_INV = 2.220446049250313e-16;\n// Exponent all 0s: 1 00000000000 11111111111111111111 => 2148532223\nvar $a10bcf89a5217591$var$CLEAR_EXP_MASK = 2148532223; // asm type annotation\n// Normalization workspace:\nvar $a10bcf89a5217591$var$FRAC = [\n    0.0,\n    0.0\n];\n// High/low words workspace:\nvar $a10bcf89a5217591$var$WORDS = [\n    0,\n    0\n];\n// MAIN //\n/**\n* Multiplies a double-precision floating-point number by an integer power of two.\n*\n* @param {number} frac - fraction\n* @param {integer} exp - exponent\n* @returns {number} double-precision floating-point number\n*\n* @example\n* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8\n* // returns 4.0\n*\n* @example\n* var x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)\n* // returns 1.0\n*\n* @example\n* var x = ldexp( 0.0, 20 );\n* // returns 0.0\n*\n* @example\n* var x = ldexp( -0.0, 39 );\n* // returns -0.0\n*\n* @example\n* var x = ldexp( NaN, -101 );\n* // returns NaN\n*\n* @example\n* var x = ldexp( Infinity, 11 );\n* // returns Infinity\n*\n* @example\n* var x = ldexp( -Infinity, -118 );\n* // returns -Infinity\n*/ function $a10bcf89a5217591$var$ldexp(frac, exp) {\n    var high;\n    var m;\n    if (exp === 0 || frac === 0.0 || // handles +-0\n    $806500fab48b0961$exports(frac) || $baf4b596b38391ae$exports(frac)) return frac;\n    // Normalize the input fraction:\n    $a10bcf89a5217591$require$normalize(frac, $a10bcf89a5217591$var$FRAC, 1, 0);\n    frac = $a10bcf89a5217591$var$FRAC[0];\n    exp += $a10bcf89a5217591$var$FRAC[1];\n    // Extract the exponent from `frac` and add it to `exp`:\n    exp += $4bf8ff0a3522d4d0$exports(frac);\n    // Check for underflow/overflow...\n    if (exp < $edfa495c3e8dc3b6$exports) return $80ce45bbbc194168$exports(0.0, frac);\n    if (exp > $a3e6d81a9e86d108$exports) {\n        if (frac < 0.0) return $8caa281ecaa80049$exports;\n        return $163c16c3843b9db0$exports;\n    }\n    // Check for a subnormal and scale accordingly to retain precision...\n    if (exp <= $d07a7ab16f56612c$exports) {\n        exp += 52;\n        m = $a10bcf89a5217591$var$TWO52_INV;\n    } else m = 1.0;\n    // Split the fraction into higher and lower order words:\n    $d83d8b2815a1bcbe$exports.assign(frac, $a10bcf89a5217591$var$WORDS, 1, 0);\n    high = $a10bcf89a5217591$var$WORDS[0];\n    // Clear the exponent bits within the higher order word:\n    high &= $a10bcf89a5217591$var$CLEAR_EXP_MASK;\n    // Set the exponent bits to the new exponent:\n    high |= exp + $34e9e8663ea87dc8$exports << 20;\n    // Create a new floating-point number:\n    return m * $bd3b32db5ed1e9e1$exports(high, $a10bcf89a5217591$var$WORDS[1]);\n}\n// EXPORTS //\n$a10bcf89a5217591$exports = $a10bcf89a5217591$var$ldexp;\n\n\n// EXPORTS //\n$1022cb4988ba009f$exports = $a10bcf89a5217591$exports;\n\n\nvar $16c5675e742ed05b$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ /* This is a generated file. Do not edit directly. */ 'use strict';\n// MAIN //\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/ function $16c5675e742ed05b$var$evalpoly(x) {\n    if (x === 0.0) return 0.16666666666666602;\n    return 0.16666666666666602 + x * (-0.0027777777777015593 + x * (0.00006613756321437934 + x * (-0.0000016533902205465252 + x * 4.1381367970572385e-8))); // eslint-disable-line max-len\n}\n// EXPORTS //\n$16c5675e742ed05b$exports = $16c5675e742ed05b$var$evalpoly;\n\n\n// MAIN //\n/**\n* Computes \\\\(e^{r} 2^k\\\\) where \\\\(r = \\mathrm{hi} - \\mathrm{lo}\\\\) and \\\\(|r| \\leq \\ln(2)/2\\\\).\n*\n* @private\n* @param {number} hi - upper bound\n* @param {number} lo - lower bound\n* @param {integer} k - power of 2\n* @returns {number} function value\n*/ function $b69836c7c753b273$var$expmulti(hi, lo, k) {\n    var r;\n    var t;\n    var c;\n    var y;\n    r = hi - lo;\n    t = r * r;\n    c = r - t * $16c5675e742ed05b$exports(t);\n    y = 1.0 - (lo - r * c / (2.0 - c) - hi);\n    return $1022cb4988ba009f$exports(y, k);\n}\n// EXPORTS //\n$b69836c7c753b273$exports = $b69836c7c753b273$var$expmulti;\n\n\n// VARIABLES //\nvar $5d80281c5bdd2b49$var$LN2_HI = 6.93147180369123816490e-01;\nvar $5d80281c5bdd2b49$var$LN2_LO = 1.90821492927058770002e-10;\nvar $5d80281c5bdd2b49$var$LOG2_E = 1.44269504088896338700e+00;\nvar $5d80281c5bdd2b49$var$OVERFLOW = 7.09782712893383973096e+02;\nvar $5d80281c5bdd2b49$var$UNDERFLOW = -745.1332191019411;\nvar $5d80281c5bdd2b49$var$NEARZERO = 1.0 / 268435456; // 2^-28\nvar $5d80281c5bdd2b49$var$NEG_NEARZERO = -$5d80281c5bdd2b49$var$NEARZERO;\n// MAIN //\n/**\n* Evaluates the natural exponential function.\n*\n* ## Method\n*\n* 1.  We reduce \\\\( x \\\\) to an \\\\( r \\\\) so that \\\\( |r| \\leq 0.5 \\cdot \\ln(2) \\approx 0.34658 \\\\). Given \\\\( x \\\\), we find an \\\\( r \\\\) and integer \\\\( k \\\\) such that\n*\n*     ```tex\n*     \\begin{align*}\n*     x &= k \\cdot \\ln(2) + r \\\\\n*     |r| &\\leq 0.5 \\cdot \\ln(2)\n*     \\end{align*}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     \\\\( r \\\\) can be represented as \\\\( r = \\mathrm{hi} - \\mathrm{lo} \\\\) for better accuracy.\n*\n*     <!-- </note> -->\n*\n* 2.  We approximate of \\\\( e^{r} \\\\) by a special rational function on the interval \\\\(\\[0,0.34658]\\\\):\n*\n*     ```tex\n*     \\begin{align*}\n*     R\\left(r^2\\right) &= r \\cdot \\frac{ e^{r}+1 }{ e^{r}-1 } \\\\\n*     &= 2 + \\frac{r^2}{6} - \\frac{r^4}{360} + \\ldots\n*     \\end{align*}\n*     ```\n*\n*     We use a special Remes algorithm on \\\\(\\[0,0.34658]\\\\) to generate a polynomial of degree \\\\(5\\\\) to approximate \\\\(R\\\\). The maximum error of this polynomial approximation is bounded by \\\\(2^{-59}\\\\). In other words,\n*\n*     ```tex\n*     R(z) \\sim 2 + P_1 z + P_2 z^2 + P_3 z^3 + P_4 z^4 + P_5 z^5\n*     ```\n*\n*     where \\\\( z = r^2 \\\\) and\n*\n*     ```tex\n*     \\left|  2 + P_1 z + \\ldots + P_5 z^5  - R(z) \\right| \\leq 2^{-59}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     The values of \\\\( P_1 \\\\) to \\\\( P_5 \\\\) are listed in the source code.\n*\n*     <!-- </note> -->\n*\n*     The computation of \\\\( e^{r} \\\\) thus becomes\n*\n*     ```tex\n*     \\begin{align*}\n*     e^{r} &= 1 + \\frac{2r}{R-r} \\\\\n*           &= 1 + r + \\frac{r \\cdot R_1(r)}{2 - R_1(r)}\\ \\text{for better accuracy}\n*     \\end{align*}\n*     ```\n*\n*     where\n*\n*     ```tex\n*     R_1(r) = r - P_1\\ r^2 + P_2\\ r^4 + \\ldots + P_5\\ r^{10}\n*     ```\n*\n* 3.  We scale back to obtain \\\\( e^{x} \\\\). From step 1, we have\n*\n*     ```tex\n*     e^{x} = 2^k e^{r}\n*     ```\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* e^\\infty &= \\infty \\\\\n* e^{-\\infty} &= 0 \\\\\n* e^{\\mathrm{NaN}} &= \\mathrm{NaN} \\\\\n* e^0 &= 1\\ \\mathrm{is\\ exact\\ for\\ finite\\ argument\\ only}\n* \\end{align*}\n* ```\n*\n* ## Notes\n*\n* -   According to an error analysis, the error is always less than \\\\(1\\\\) ulp (unit in the last place).\n*\n* -   For an IEEE double,\n*\n*     -   if \\\\(x > 7.09782712893383973096\\mbox{e+}02\\\\), then \\\\(e^{x}\\\\) overflows\n*     -   if \\\\(x < -7.45133219101941108420\\mbox{e+}02\\\\), then \\\\(e^{x}\\\\) underflows\n*\n* -   The hexadecimal values included in the source code are the intended ones for the used constants. Decimal values may be used, provided that the compiler will convert from decimal to binary accurately enough to produce the intended hexadecimal values.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = exp( 4.0 );\n* // returns ~54.5982\n*\n* @example\n* var v = exp( -9.0 );\n* // returns ~1.234e-4\n*\n* @example\n* var v = exp( 0.0 );\n* // returns 1.0\n*\n* @example\n* var v = exp( NaN );\n* // returns NaN\n*/ function $5d80281c5bdd2b49$var$exp(x) {\n    var hi;\n    var lo;\n    var k;\n    if ($806500fab48b0961$exports(x) || x === $163c16c3843b9db0$exports) return x;\n    if (x === $8caa281ecaa80049$exports) return 0.0;\n    if (x > $5d80281c5bdd2b49$var$OVERFLOW) return $163c16c3843b9db0$exports;\n    if (x < $5d80281c5bdd2b49$var$UNDERFLOW) return 0.0;\n    if (x > $5d80281c5bdd2b49$var$NEG_NEARZERO && x < $5d80281c5bdd2b49$var$NEARZERO) return 1.0 + x;\n    // Reduce and compute `r = hi - lo` for extra precision...\n    if (x < 0.0) k = $04c484e1b6b0e61d$exports($5d80281c5bdd2b49$var$LOG2_E * x - 0.5);\n    else k = $04c484e1b6b0e61d$exports($5d80281c5bdd2b49$var$LOG2_E * x + 0.5);\n    hi = x - k * $5d80281c5bdd2b49$var$LN2_HI;\n    lo = k * $5d80281c5bdd2b49$var$LN2_LO;\n    return $b69836c7c753b273$exports(hi, lo, k);\n}\n// EXPORTS //\n$5d80281c5bdd2b49$exports = $5d80281c5bdd2b49$var$exp;\n\n\n// EXPORTS //\n$b35c6ca368f840b7$exports = $5d80281c5bdd2b49$exports;\n\n\nvar $0b19e82d1c772432$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $fba0048b3725563e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $42bd40e27925c2b2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\n/**\n* Compute the principal square root of a double-precision floating-point number.\n*\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} principal square root\n*\n* @example\n* var v = sqrt( 4.0 );\n* // returns 2.0\n*\n* v = sqrt( 9.0 );\n* // returns 3.0\n*\n* v = sqrt( 0.0 );\n* // returns 0.0\n*\n* v = sqrt( -4.0 );\n* // returns NaN\n*\n* v = sqrt( NaN );\n* // returns NaN\n*/ var $42bd40e27925c2b2$var$sqrt = Math.sqrt; // eslint-disable-line stdlib/no-builtin-math\n// EXPORTS //\n$42bd40e27925c2b2$exports = $42bd40e27925c2b2$var$sqrt;\n\n\n// EXPORTS //\n$fba0048b3725563e$exports = $42bd40e27925c2b2$exports;\n\n\n\nvar $34a5fdb6c9cfe261$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $c32e45fc48ffbf27$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_log.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/ 'use strict';\n\nvar $f20b66e24bd8d75d$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $3dfd6f80acdf32ae$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\nvar $96aa1cafbecb2ebd$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\nvar $96aa1cafbecb2ebd$var$HIGH;\nif ($997874f55af78d2a$exports === true) $96aa1cafbecb2ebd$var$HIGH = 1; // second index\nelse $96aa1cafbecb2ebd$var$HIGH = 0; // first index\n// EXPORTS //\n$96aa1cafbecb2ebd$exports = $96aa1cafbecb2ebd$var$HIGH;\n\n\n// VARIABLES //\nvar $3dfd6f80acdf32ae$var$FLOAT64_VIEW = new $688bf0eeb5997346$exports(1);\nvar $3dfd6f80acdf32ae$var$UINT32_VIEW = new $2ffeb30574781963$exports($3dfd6f80acdf32ae$var$FLOAT64_VIEW.buffer);\n// MAIN //\n/**\n* Sets the more significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - double\n* @param {uinteger32} high - unsigned 32-bit integer to replace the higher order word of `x`\n* @returns {number} double having the same lower order word as `x`\n*\n* @example\n* var high = 5 >>> 0; // => 0 00000000000 00000000000000000101\n*\n* var y = setHighWord( 3.14e201, high ); // => 0 00000000000 0000000000000000010110010011110010110101100010000010\n* // returns 1.18350528745e-313\n*\n* @example\n* var PINF = require( '@stdlib/constants/float64/pinf' ); // => 0 11111111111 00000000000000000000 00000000000000000000000000000000\n*\n* var high = 1072693248 >>> 0; // => 0 01111111111 00000000000000000000\n*\n* // Set the higher order bits of `+infinity` to return `1`:\n* var y = setHighWord( PINF, high ); // => 0 01111111111 0000000000000000000000000000000000000000000000000000\n* // returns 1.0\n*/ function $3dfd6f80acdf32ae$var$setHighWord(x, high) {\n    $3dfd6f80acdf32ae$var$FLOAT64_VIEW[0] = x;\n    $3dfd6f80acdf32ae$var$UINT32_VIEW[$96aa1cafbecb2ebd$exports] = high >>> 0; // identity bit shift to ensure integer\n    return $3dfd6f80acdf32ae$var$FLOAT64_VIEW[0];\n}\n// EXPORTS //\n$3dfd6f80acdf32ae$exports = $3dfd6f80acdf32ae$var$setHighWord;\n\n\n// EXPORTS //\n$f20b66e24bd8d75d$exports = $3dfd6f80acdf32ae$exports;\n\n\n\n\n\nvar $248907d5c902c819$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ /* This is a generated file. Do not edit directly. */ 'use strict';\n// MAIN //\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/ function $248907d5c902c819$var$evalpoly(x) {\n    if (x === 0.0) return 0.3999999999940942;\n    return 0.3999999999940942 + x * (0.22222198432149784 + x * 0.15313837699209373); // eslint-disable-line max-len\n}\n// EXPORTS //\n$248907d5c902c819$exports = $248907d5c902c819$var$evalpoly;\n\n\nvar $fa4ed947f6f45631$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ /* This is a generated file. Do not edit directly. */ 'use strict';\n// MAIN //\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/ function $fa4ed947f6f45631$var$evalpoly(x) {\n    if (x === 0.0) return 0.6666666666666735;\n    return 0.6666666666666735 + x * (0.2857142874366239 + x * (0.1818357216161805 + x * 0.14798198605116586)); // eslint-disable-line max-len\n}\n// EXPORTS //\n$fa4ed947f6f45631$exports = $fa4ed947f6f45631$var$evalpoly;\n\n\n// VARIABLES //\nvar $c32e45fc48ffbf27$var$LN2_HI = 6.93147180369123816490e-01; // 3FE62E42 FEE00000\nvar $c32e45fc48ffbf27$var$LN2_LO = 1.90821492927058770002e-10; // 3DEA39EF 35793C76\nvar $c32e45fc48ffbf27$var$TWO54 = 1.80143985094819840000e+16; // 0x43500000, 0x00000000\nvar $c32e45fc48ffbf27$var$ONE_THIRD = 0.33333333333333333;\n// 0x000fffff = 1048575 => 0 00000000000 11111111111111111111\nvar $c32e45fc48ffbf27$var$HIGH_SIGNIFICAND_MASK = 1048575; // asm type annotation\n// 0x7ff00000 = 2146435072 => 0 11111111111 00000000000000000000 => biased exponent: 2047 = 1023+1023 => 2^1023\nvar $c32e45fc48ffbf27$var$HIGH_MAX_NORMAL_EXP = 2146435072; // asm type annotation\n// 0x00100000 = 1048576 => 0 00000000001 00000000000000000000 => biased exponent: 1 = -1022+1023 => 2^-1022\nvar $c32e45fc48ffbf27$var$HIGH_MIN_NORMAL_EXP = 1048576; // asm type annotation\n// 0x3ff00000 = 1072693248 => 0 01111111111 00000000000000000000 => biased exponent: 1023 = 0+1023 => 2^0 = 1\nvar $c32e45fc48ffbf27$var$HIGH_BIASED_EXP_0 = 1072693248; // asm type annotation\n// MAIN //\n/**\n* Evaluates the natural logarithm of a double-precision floating-point number.\n*\n* @param {NonNegativeNumber} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = ln( 4.0 );\n* // returns ~1.386\n*\n* @example\n* var v = ln( 0.0 );\n* // returns -Infinity\n*\n* @example\n* var v = ln( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = ln( NaN );\n* // returns NaN\n*\n* @example\n* var v = ln( -4.0 );\n* // returns NaN\n*/ function $c32e45fc48ffbf27$var$ln(x) {\n    var hfsq;\n    var hx;\n    var t2;\n    var t1;\n    var k;\n    var R;\n    var f;\n    var i;\n    var j;\n    var s;\n    var w;\n    var z;\n    if (x === 0.0) return $8caa281ecaa80049$exports;\n    if ($806500fab48b0961$exports(x) || x < 0.0) return NaN;\n    hx = $a12df7c61468e5b9$exports(x);\n    k = 0; // asm type annotation\n    if (hx < $c32e45fc48ffbf27$var$HIGH_MIN_NORMAL_EXP) {\n        // Case: 0 < x < 2**-1022\n        k -= 54; // asm type annotation\n        // Subnormal number, scale up `x`:\n        x *= $c32e45fc48ffbf27$var$TWO54;\n        hx = $a12df7c61468e5b9$exports(x);\n    }\n    if (hx >= $c32e45fc48ffbf27$var$HIGH_MAX_NORMAL_EXP) return x + x;\n    k += (hx >> 20) - $34e9e8663ea87dc8$exports | 0; // asm type annotation\n    hx &= $c32e45fc48ffbf27$var$HIGH_SIGNIFICAND_MASK;\n    i = hx + 0x95f64 & 0x100000 | 0; // asm type annotation\n    // Normalize `x` or `x/2`...\n    x = $f20b66e24bd8d75d$exports(x, hx | i ^ $c32e45fc48ffbf27$var$HIGH_BIASED_EXP_0);\n    k += i >> 20 | 0; // asm type annotation\n    f = x - 1.0;\n    if (($c32e45fc48ffbf27$var$HIGH_SIGNIFICAND_MASK & 2 + hx) < 3) {\n        // Case: -2**-20 <= f < 2**-20\n        if (f === 0.0) {\n            if (k === 0) return 0.0;\n            return k * $c32e45fc48ffbf27$var$LN2_HI + k * $c32e45fc48ffbf27$var$LN2_LO;\n        }\n        R = f * f * (0.5 - $c32e45fc48ffbf27$var$ONE_THIRD * f);\n        if (k === 0) return f - R;\n        return k * $c32e45fc48ffbf27$var$LN2_HI - (R - k * $c32e45fc48ffbf27$var$LN2_LO - f);\n    }\n    s = f / (2.0 + f);\n    z = s * s;\n    i = hx - 0x6147a | 0; // asm type annotation\n    w = z * z;\n    j = 0x6b851 - hx | 0; // asm type annotation\n    t1 = w * $248907d5c902c819$exports(w);\n    t2 = z * $fa4ed947f6f45631$exports(w);\n    i |= j;\n    R = t2 + t1;\n    if (i > 0) {\n        hfsq = 0.5 * f * f;\n        if (k === 0) return f - (hfsq - s * (hfsq + R));\n        return k * $c32e45fc48ffbf27$var$LN2_HI - (hfsq - (s * (hfsq + R) + k * $c32e45fc48ffbf27$var$LN2_LO) - f);\n    }\n    if (k === 0) return f - s * (f - R);\n    return k * $c32e45fc48ffbf27$var$LN2_HI - (s * (f - R) - k * $c32e45fc48ffbf27$var$LN2_LO - f);\n}\n// EXPORTS //\n$c32e45fc48ffbf27$exports = $c32e45fc48ffbf27$var$ln;\n\n\n// EXPORTS //\n$34a5fdb6c9cfe261$exports = $c32e45fc48ffbf27$exports;\n\n\n// VARIABLES //\n// (R*phi(R) + Pr(X>=R))*sqrt(2\\pi)\nvar $0b19e82d1c772432$var$V = 9.91256303526217e-3;\n// MAIN //\n/**\n* Returns an array containing coordinates such that each rectangle has the same area.\n*\n* @private\n* @param {PositiveInteger} N - number of rectangles\n* @param {number} rTail - start of right tail\n* @returns {NumberArray} coordinate array\n*\n* @example\n* var X = coordsArray( 128, 3.44 );\n* // returns <Array>\n*/ function $0b19e82d1c772432$var$coordsArray(N, rTail) {\n    var X;\n    var f;\n    var i;\n    f = $b35c6ca368f840b7$exports(-0.5 * rTail * rTail);\n    X = [];\n    X.push($0b19e82d1c772432$var$V / f); // bottom block: V / f(R)\n    X.push(rTail);\n    for(i = 2; i < N; i++){\n        X[i] = $fba0048b3725563e$exports(-2 * $34a5fdb6c9cfe261$exports($0b19e82d1c772432$var$V / X[i - 1] + f));\n        f = $b35c6ca368f840b7$exports(-0.5 * X[i] * X[i]);\n    }\n    X.push(0.0);\n    return X;\n}\n// EXPORTS //\n$0b19e82d1c772432$exports = $0b19e82d1c772432$var$coordsArray;\n\n\nvar $6e0b32306d7a6110$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n// MAIN //\n/**\n* Returns an array containing the ratio of each pair of consecutive elements in order: `X[ i+1 ] / X[ i ]`.\n*\n* @private\n* @param {NumberArray} X - input array\n* @returns {NumberArray} ratio array\n*\n* @example\n* var R = ratioArray( [ 1.0, 2.0, 5.0 ] );\n* // returns [ 2.0, 2.5 ]\n*/ function $6e0b32306d7a6110$var$ratioArray(X) {\n    var R;\n    var i;\n    R = [];\n    for(i = 0; i < X.length - 1; i++)R.push(X[i + 1] / X[i]);\n    return R;\n}\n// EXPORTS //\n$6e0b32306d7a6110$exports = $6e0b32306d7a6110$var$ratioArray;\n\n\nvar $4cacedfa34e1007d$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Transforms the tail of the normal distribution to the unit interval and then uses rejection technique to generate standard normal variable.\n*\n* ## References\n*\n* -   Marsaglia, George. 1964. \"Generating a Variable from the Tail of the Normal Distribution.\" _Technometrics_ 6 (1): 101–2. doi:[10.1080/00401706.1964.10490150](http://dx.doi.org/10.1080/00401706.1964.10490150).\n*\n* @private\n* @param {PRNG} rand - pseudorandom number generator\n* @param {number} rTail - start value of the right tail\n* @param {boolean} isNegative - boolean indicating which side to evaluate\n* @returns {number} standard normal variable\n*/ function $4cacedfa34e1007d$var$sampleTail(rand, rTail, isNegative) {\n    var x;\n    var y;\n    do {\n        x = $34a5fdb6c9cfe261$exports(rand()) / rTail;\n        y = $34a5fdb6c9cfe261$exports(rand());\n    }while (-2 * y < x * x);\n    return isNegative ? x - rTail : rTail - x;\n}\n// EXPORTS //\n$4cacedfa34e1007d$exports = $4cacedfa34e1007d$var$sampleTail;\n\n\n// VARIABLES //\n// Number of blocks:\nvar $787fa62bd4fb4f7a$var$NUM_BLOCKS = 128;\n// Start of right tail (R):\nvar $787fa62bd4fb4f7a$var$START_RIGHT_TAIL = 3.442619855899;\n// `X` holds coordinates, such that each rectangle has same area:\nvar $787fa62bd4fb4f7a$var$X = $0b19e82d1c772432$exports($787fa62bd4fb4f7a$var$NUM_BLOCKS, $787fa62bd4fb4f7a$var$START_RIGHT_TAIL);\n// `R` holds `X[ i+1 ] / X[ i ]`:\nvar $787fa62bd4fb4f7a$var$R = $6e0b32306d7a6110$exports($787fa62bd4fb4f7a$var$X);\n// 127 => 0x7F => 00000000000000000000000001111111\nvar $787fa62bd4fb4f7a$var$LAST_7_BITS_MASK = 127; // asm type annotation\n// MAIN //\n/**\n* Returns a pseudorandom number generator which implements the improved Ziggurat algorithm for generating normally distributed pseudorandom numbers.\n*\n* @private\n* @param {PRNG} randu - PRNG for generating uniformly distributed numbers\n* @param {PRNG} randi - PRNG for generating uniformly distributed integers\n* @returns {number} pseudorandom number\n*/ function $787fa62bd4fb4f7a$var$wrap(randu, randi) {\n    return randn;\n    /**\n\t* Generates a normally distributed pseudorandom number.\n\t*\n\t* @private\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var r = randn();\n\t* // returns <number>\n\t*/ function randn() {\n        var f0;\n        var f1;\n        var x2;\n        var x;\n        var u;\n        var i;\n        var j;\n        while(true){\n            u = 2.0 * randu() - 1.0;\n            i = randi() & $787fa62bd4fb4f7a$var$LAST_7_BITS_MASK;\n            // First try the rectangular boxes...\n            if ($c3b1c45c52c68198$exports(u) < $787fa62bd4fb4f7a$var$R[i]) return u * $787fa62bd4fb4f7a$var$X[i];\n            // If bottom box, sample from the tail...\n            if (i === 0) return $4cacedfa34e1007d$exports(randu, $787fa62bd4fb4f7a$var$START_RIGHT_TAIL, u < 0.0);\n            // Is this a sample from the wedges?\n            x = u * $787fa62bd4fb4f7a$var$X[i];\n            x2 = x * x;\n            j = i + 1;\n            f0 = $b35c6ca368f840b7$exports(-0.5 * ($787fa62bd4fb4f7a$var$X[i] * $787fa62bd4fb4f7a$var$X[i] - x2));\n            f1 = $b35c6ca368f840b7$exports(-0.5 * ($787fa62bd4fb4f7a$var$X[j] * $787fa62bd4fb4f7a$var$X[j] - x2));\n            if (f1 + randu() * (f0 - f1) < 1.0) return x;\n        }\n    }\n}\n// EXPORTS //\n$787fa62bd4fb4f7a$exports = $787fa62bd4fb4f7a$var$wrap;\n\n\n// MAIN //\n/**\n* Returns a pseudorandom number generator which implements the improved Ziggurat method to generate normally distributed pseudorandom numbers.\n*\n* @param {Options} [options] - function options\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} must provide an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {PRNG} pseudorandom number generator\n*\n* @example\n* var randn = factory();\n*\n* var r = randn();\n* // returns <number>\n*\n* @example\n* // Return a seeded PRNG:\n* var randn = factory({\n*     'seed': 12345\n* });\n*\n* var r = randn();\n* // returns <number>\n*/ function $82132ebca57c92e4$var$factory(options) {\n    var randu;\n    var randi;\n    var randn;\n    var opts;\n    opts = {\n        'copy': true\n    };\n    if (arguments.length) {\n        if (!$c8f9ba5bc2a81d34$exports(options)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Must provide an object. Value: `%s`.', options));\n        if ($5a7912bad9882251$exports(options, 'copy')) {\n            opts.copy = options.copy;\n            if (!$82132ebca57c92e4$require$isBoolean(options.copy)) throw new TypeError($5a5504e40381a222$exports('invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', options.copy));\n        }\n        if ($5a7912bad9882251$exports(options, 'prng')) {\n            if (!$39cac8b951c1ded2$exports(options.prng)) throw new TypeError($5a5504e40381a222$exports('invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', options.prng));\n            randu = options.prng;\n        } else if ($5a7912bad9882251$exports(options, 'state')) {\n            opts.state = options.state;\n            if (!$a3146ba2bb56d8f0$exports(options.state)) throw new TypeError($5a5504e40381a222$exports('invalid option. `%s` option must be a Uint32Array. Option: `%s`.', 'state', options.state));\n        } else if ($5a7912bad9882251$exports(options, 'seed')) {\n            opts.seed = options.seed;\n            if (options.seed === void 0) throw new TypeError($5a5504e40381a222$exports('invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%s`.', 'seed', options.seed));\n        }\n    }\n    if (opts.state === void 0) {\n        if (randu === void 0) {\n            randi = $82132ebca57c92e4$require$mt19937(opts);\n            randu = randi.normalized;\n        } else {\n            randi = $82132ebca57c92e4$require$mt19937({\n                'seed': $19a18984922c6b5f$exports(1.0 + $a5069161f8233194$exports * randu()),\n                'copy': opts.copy\n            });\n            opts.seed = null;\n        }\n    } else {\n        randi = $82132ebca57c92e4$require$mt19937(opts);\n        randu = randi.normalized;\n    }\n    randn = $787fa62bd4fb4f7a$exports(randu, randi);\n    $dfd4cfb9f136c5d5$exports(randn, 'NAME', 'improved-ziggurat');\n    if (opts.seed === null) {\n        $dfd4cfb9f136c5d5$exports(randn, 'seed', null);\n        $dfd4cfb9f136c5d5$exports(randn, 'seedLength', null);\n    } else {\n        $a4444f7456e1c73a$exports(randn, 'seed', getSeed);\n        $a4444f7456e1c73a$exports(randn, 'seedLength', getSeedLength);\n    }\n    // If we are provided an \"external\" PRNG, we don't support getting or setting PRNG state, as we'd need to check for compatible state value types, etc, entailing considerable complexity.\n    if (options && options.prng) {\n        $c1b2e538264ff4b7$exports(randn, 'state', $427c86626b845cf7$exports(null), $b50f262dd23e3975$exports);\n        $dfd4cfb9f136c5d5$exports(randn, 'stateLength', null);\n        $dfd4cfb9f136c5d5$exports(randn, 'byteLength', null);\n        $dfd4cfb9f136c5d5$exports(randn, 'toJSON', $427c86626b845cf7$exports(null));\n    } else {\n        $c1b2e538264ff4b7$exports(randn, 'state', getState, setState);\n        $a4444f7456e1c73a$exports(randn, 'stateLength', getStateLength);\n        $a4444f7456e1c73a$exports(randn, 'byteLength', getStateSize);\n        $dfd4cfb9f136c5d5$exports(randn, 'toJSON', toJSON);\n    }\n    $dfd4cfb9f136c5d5$exports(randn, 'PRNG', randu);\n    return randn;\n    /**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMT19937} seed\n\t*/ function getSeed() {\n        return randi.seed;\n    }\n    /**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/ function getSeedLength() {\n        return randi.seedLength;\n    }\n    /**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/ function getStateLength() {\n        return randi.stateLength;\n    }\n    /**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/ function getStateSize() {\n        return randi.byteLength;\n    }\n    /**\n\t* Returns the current PRNG state.\n\t*\n\t* @private\n\t* @returns {PRNGStateMT19937} current state\n\t*/ function getState() {\n        return randi.state;\n    }\n    /**\n\t* Sets the PRNG state.\n\t*\n\t* @private\n\t* @param {PRNGStateMT19937} s - generator state\n\t* @throws {Error} must provide a valid state\n\t*/ function setState(s) {\n        randi.state = s;\n    }\n    /**\n\t* Serializes the pseudorandom number generator as a JSON object.\n\t*\n\t* ## Notes\n\t*\n\t* -   `JSON.stringify()` implicitly calls this method when stringifying a PRNG.\n\t*\n\t* @private\n\t* @returns {Object} JSON representation\n\t*/ function toJSON() {\n        var out = {};\n        out.type = 'PRNG';\n        out.name = randn.NAME;\n        out.state = $46c75d6fadb33a0e$exports(randi.state);\n        out.params = [];\n        return out;\n    }\n}\n// EXPORTS //\n$82132ebca57c92e4$exports = $82132ebca57c92e4$var$factory;\n\n\n// MAIN //\n/**\n* Generates a standard normally distributed random number.\n*\n* ## Method\n*\n* The basic Ziggurat method works as follows:\n*\n*     ```tex\n*     x_{C-1}(r) \\left[ f(0) - f\\left( x_{C-1}(r) \\right) \\right] - V(r) = 0\n*     ```\n*\n*     where\n*\n*     ```tex\n*     V(r) = r \\; f(r) + \\int_r^\\infty \\; f(x) \\; dx\n*     ```\n*\n*     and \\\\( r \\\\) denotes the right-most \\\\( x_1 \\\\).\n*\n* -   We then use the following rejection algorithm:\n*\n*     -   Draw a box \\\\( B_i \\\\) at random with probability \\\\( \\tfrac{1}{C} \\\\).\n*     -   Draw a random number from the box as \\\\( z = U_0 x_i \\\\) for \\\\( i > 0 \\\\) and \\\\( z = U_0 V / f(x_1) \\\\).\n*     -   If \\\\( z < x_{i+1} \\\\), accept \\\\( z \\\\).\n*     -   If \\\\( i = 0 \\\\), accept a \\\\( v \\\\) by transforming the tail of the normal distribution to the unit interval and then use rejection technique by Marsaglia, G. (1964) to generate a standard normal variable. Otherwise, if \\\\( i > 0 \\\\) and \\\\( U_1 \\left[ f(x_i) - f(x_{i+1})\\right] < f(z) - f(x_{i+1}) \\\\) accept \\\\( z \\\\).\n*     -   Go back to the first step.\n*\n* -   The improved version by Doornik (2005) changes step four in order to correct a deficiency of the original Ziggurat algorithm. The updated version requires the generation of two random numbers, a uniform variable drawn from \\\\( U(-1,1) \\\\) and the last seven bits of a random integer.\n*\n* ## References\n*\n* -   Doornik, Jurgen A. 2005. \"An Improved Ziggurat Method to Generate Normal Random Samples.\" <https://www.doornik.com/research/ziggurat.pdf>.\n* -   Marsaglia, George, and Wai Wan Tsang. 2000. \"The Ziggurat Method for Generating Random Variables.\" _Journal of Statistical Software_ 5 (1): 1–7. doi:[10.18637/jss.v005.i08](http://dx.doi.org/10.18637/jss.v005.i08).\n* -   Marsaglia, George. 1964. \"Generating a Variable from the Tail of the Normal Distribution.\" _Technometrics_ 6 (1): 101–2. doi:[10.1080/00401706.1964.10490150](http://dx.doi.org/10.1080/00401706.1964.10490150).\n*\n* @name randn\n* @type {PRNG}\n* @returns {number} pseudorandom number\n*\n* @example\n* var r = randn();\n* // returns <number>\n*/ var $39a357d3dce33fab$var$randn = $82132ebca57c92e4$exports();\n// EXPORTS //\n$39a357d3dce33fab$exports = $39a357d3dce33fab$var$randn;\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($39a357d3dce33fab$exports, 'factory', $82132ebca57c92e4$exports);\n// EXPORTS //\n$665931b83d6270df$exports = $39a357d3dce33fab$exports;\n\n\nvar $a971c8057dda0ad4$require$randn = $665931b83d6270df$exports.factory;\n\n\n\nvar $dd5bcf2f5352e07b$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $dd5bcf2f5352e07b$require$isNumber = $019754bf0ce823af$exports.isPrimitive;\nvar $e95da724e81ac8e1$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $ed183dff9a56ba3b$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $06e04b069a955fe6$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $06e04b069a955fe6$require$isNumber = $019754bf0ce823af$exports.isPrimitive;\n// MAIN //\n/**\n* Tests if a value is a number primitive having a positive value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive value\n*\n* @example\n* var bool = isPositiveNumber( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns false\n*/ function $06e04b069a955fe6$var$isPositiveNumber(value) {\n    return $06e04b069a955fe6$require$isNumber(value) && value > 0.0;\n}\n// EXPORTS //\n$06e04b069a955fe6$exports = $06e04b069a955fe6$var$isPositiveNumber;\n\n\nvar $4cbe5698d7d24fa1$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $4cbe5698d7d24fa1$require$isNumber = $019754bf0ce823af$exports.isObject;\n// MAIN //\n/**\n* Tests if a value is a number object having a positive value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive value\n*\n* @example\n* var bool = isPositiveNumber( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns true\n*/ function $4cbe5698d7d24fa1$var$isPositiveNumber(value) {\n    return $4cbe5698d7d24fa1$require$isNumber(value) && value.valueOf() > 0.0;\n}\n// EXPORTS //\n$4cbe5698d7d24fa1$exports = $4cbe5698d7d24fa1$var$isPositiveNumber;\n\n\n// MAIN //\n/**\n* Tests if a value is a positive number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive number\n*\n* @example\n* var bool = isPositiveNumber( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveNumber( null );\n* // returns false\n*/ function $ed183dff9a56ba3b$var$isPositiveNumber(value) {\n    return $06e04b069a955fe6$exports(value) || $4cbe5698d7d24fa1$exports(value);\n}\n// EXPORTS //\n$ed183dff9a56ba3b$exports = $ed183dff9a56ba3b$var$isPositiveNumber;\n\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($ed183dff9a56ba3b$exports, 'isPrimitive', $06e04b069a955fe6$exports);\n$dfd4cfb9f136c5d5$exports($ed183dff9a56ba3b$exports, 'isObject', $4cbe5698d7d24fa1$exports);\n// EXPORTS //\n$e95da724e81ac8e1$exports = $ed183dff9a56ba3b$exports;\n\n\nvar $dd5bcf2f5352e07b$require$isPositive = $e95da724e81ac8e1$exports.isPrimitive;\n\nvar $58226ebdfb370dd2$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $dcd8646c10ee7eeb$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $287b764a9f4648a6$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $287b764a9f4648a6$require$isNumber = $019754bf0ce823af$exports.isPrimitive;\n\n// MAIN //\n/**\n* Tests if a value is a `NaN` number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `NaN` number primitive\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns false\n*/ function $287b764a9f4648a6$var$isnan(value) {\n    return $287b764a9f4648a6$require$isNumber(value) && $806500fab48b0961$exports(value);\n}\n// EXPORTS //\n$287b764a9f4648a6$exports = $287b764a9f4648a6$var$isnan;\n\n\nvar $e0f1948844ebd846$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $e0f1948844ebd846$require$isNumber = $019754bf0ce823af$exports.isObject;\n\n// MAIN //\n/**\n* Tests if a value is a number object having a value of `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value of `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*/ function $e0f1948844ebd846$var$isnan(value) {\n    return $e0f1948844ebd846$require$isNumber(value) && $806500fab48b0961$exports(value.valueOf());\n}\n// EXPORTS //\n$e0f1948844ebd846$exports = $e0f1948844ebd846$var$isnan;\n\n\n// MAIN //\n/**\n* Tests if a value is `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( null );\n* // returns false\n*/ function $dcd8646c10ee7eeb$var$isnan(value) {\n    return $287b764a9f4648a6$exports(value) || $e0f1948844ebd846$exports(value);\n}\n// EXPORTS //\n$dcd8646c10ee7eeb$exports = $dcd8646c10ee7eeb$var$isnan;\n\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($dcd8646c10ee7eeb$exports, 'isPrimitive', $287b764a9f4648a6$exports);\n$dfd4cfb9f136c5d5$exports($dcd8646c10ee7eeb$exports, 'isObject', $e0f1948844ebd846$exports);\n// EXPORTS //\n$58226ebdfb370dd2$exports = $dcd8646c10ee7eeb$exports;\n\n\n// MAIN //\n/**\n* Validates parameters.\n*\n* @private\n* @param {number} mu - location parameter\n* @param {PositiveNumber} sigma - scale parameter\n* @returns {(Error|null)} error or null\n*\n* @example\n* var err = validate( 1.0, 2.0 );\n* if ( err ) {\n*     throw err;\n* }\n*/ function $dd5bcf2f5352e07b$var$validate(mu, sigma) {\n    if (!$dd5bcf2f5352e07b$require$isNumber(mu) || $58226ebdfb370dd2$exports(mu)) return new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a number and not NaN. Value: `%s`.', mu));\n    if (!$dd5bcf2f5352e07b$require$isPositive(sigma)) return new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be a positive number. Value: `%s`.', sigma));\n    return null;\n}\n// EXPORTS //\n$dd5bcf2f5352e07b$exports = $dd5bcf2f5352e07b$var$validate;\n\n\nvar $b3f6cfb7b66c240f$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Returns a log-normally distributed pseudorandom number.\n*\n* @private\n* @param {PRNG} randn - PRNG for standard normally distributed numbers\n* @param {number} mu - location parameter\n* @param {PositiveNumber} sigma - scale parameter\n* @returns {PositiveNumber} pseudorandom number\n*/ function $b3f6cfb7b66c240f$var$lognormal(randn, mu, sigma) {\n    return $b35c6ca368f840b7$exports(mu + sigma * randn());\n}\n// EXPORTS //\n$b3f6cfb7b66c240f$exports = $b3f6cfb7b66c240f$var$lognormal;\n\n\n// MAIN //\n/**\n* Returns a pseudorandom number generator for generating random numbers from a lognormal distribution.\n*\n* @param {number} [mu] - location parameter\n* @param {PositiveNumber} [sigma] - scale parameter\n* @param {Options} [options] - function options\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} `mu` must be a number\n* @throws {TypeError} `sigma` must be a positive number\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {PRNG} pseudorandom number generator\n*\n* @example\n* var lognormal = factory( 0.0, 1.0 );\n*\n* var v = lognormal();\n* // returns <number>\n*\n* @example\n* var lognormal = factory( -3.0, 0.5, {\n*     'seed': 297\n* });\n* var v = lognormal();\n* // returns <number>\n*/ function $a971c8057dda0ad4$var$factory() {\n    var sigma;\n    var rnorm;\n    var opts;\n    var rand;\n    var prng;\n    var err;\n    var mu;\n    if (arguments.length === 0) rnorm = $a971c8057dda0ad4$require$randn();\n    else if (arguments.length === 1) {\n        opts = arguments[0];\n        if (!$c8f9ba5bc2a81d34$exports(opts)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Options argument must be an object. Value: `%s`.', opts));\n        if ($5a7912bad9882251$exports(opts, 'prng')) {\n            if (!$39cac8b951c1ded2$exports(opts.prng)) throw new TypeError($5a5504e40381a222$exports('invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', opts.prng));\n            rnorm = $a971c8057dda0ad4$require$randn({\n                'prng': opts.prng\n            });\n        } else rnorm = $a971c8057dda0ad4$require$randn(opts);\n    } else {\n        mu = arguments[0];\n        sigma = arguments[1];\n        err = $dd5bcf2f5352e07b$exports(mu, sigma);\n        if (err) throw err;\n        if (arguments.length > 2) {\n            opts = arguments[2];\n            if (!$c8f9ba5bc2a81d34$exports(opts)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Options argument must be an object. Value: `%s`.', opts));\n            if ($5a7912bad9882251$exports(opts, 'prng')) {\n                if (!$39cac8b951c1ded2$exports(opts.prng)) throw new TypeError($5a5504e40381a222$exports('invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', opts.prng));\n                rnorm = $a971c8057dda0ad4$require$randn({\n                    'prng': opts.prng\n                });\n            } else rnorm = $a971c8057dda0ad4$require$randn(opts);\n        } else rnorm = $a971c8057dda0ad4$require$randn();\n    }\n    if (mu === void 0) prng = lognormal2;\n    else prng = lognormal1;\n    rand = rnorm.PRNG;\n    $dfd4cfb9f136c5d5$exports(prng, 'NAME', 'lognormal');\n    // If we are provided an \"external\" PRNG, we don't support getting or setting PRNG state, as we'd need to check for compatible state value types, etc, entailing considerable complexity.\n    if (opts && opts.prng) {\n        $dfd4cfb9f136c5d5$exports(prng, 'seed', null);\n        $dfd4cfb9f136c5d5$exports(prng, 'seedLength', null);\n        $c1b2e538264ff4b7$exports(prng, 'state', $427c86626b845cf7$exports(null), $b50f262dd23e3975$exports);\n        $dfd4cfb9f136c5d5$exports(prng, 'stateLength', null);\n        $dfd4cfb9f136c5d5$exports(prng, 'byteLength', null);\n        $dfd4cfb9f136c5d5$exports(prng, 'toJSON', $427c86626b845cf7$exports(null));\n    } else {\n        $a4444f7456e1c73a$exports(prng, 'seed', getSeed);\n        $a4444f7456e1c73a$exports(prng, 'seedLength', getSeedLength);\n        $c1b2e538264ff4b7$exports(prng, 'state', getState, setState);\n        $a4444f7456e1c73a$exports(prng, 'stateLength', getStateLength);\n        $a4444f7456e1c73a$exports(prng, 'byteLength', getStateSize);\n        $dfd4cfb9f136c5d5$exports(prng, 'toJSON', toJSON);\n    }\n    $dfd4cfb9f136c5d5$exports(prng, 'PRNG', rand);\n    return prng;\n    /**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMT19937} seed\n\t*/ function getSeed() {\n        return rand.seed;\n    }\n    /**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/ function getSeedLength() {\n        return rand.seedLength;\n    }\n    /**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/ function getStateLength() {\n        return rand.stateLength;\n    }\n    /**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/ function getStateSize() {\n        return rand.byteLength;\n    }\n    /**\n\t* Returns the current pseudorandom number generator state.\n\t*\n\t* @private\n\t* @returns {PRNGStateMT19937} current state\n\t*/ function getState() {\n        return rand.state;\n    }\n    /**\n\t* Sets the pseudorandom number generator state.\n\t*\n\t* @private\n\t* @param {PRNGStateMT19937} s - generator state\n\t* @throws {Error} must provide a valid state\n\t*/ function setState(s) {\n        rand.state = s;\n    }\n    /**\n\t* Serializes the pseudorandom number generator as a JSON object.\n\t*\n\t* ## Notes\n\t*\n\t* -   `JSON.stringify()` implicitly calls this method when stringifying a PRNG.\n\t*\n\t* @private\n\t* @returns {Object} JSON representation\n\t*/ function toJSON() {\n        var out = {};\n        out.type = 'PRNG';\n        out.name = prng.NAME;\n        out.state = $46c75d6fadb33a0e$exports(rand.state);\n        if (mu === void 0) out.params = [];\n        else out.params = [\n            mu,\n            sigma\n        ];\n        return out;\n    }\n    /**\n\t* Returns a log-normally distributed pseudorandom number with bound parameters `mu` and `sigma`.\n\t*\n\t* @private\n\t* @returns {PositiveNumber} pseudorandom number\n\t*\n\t* @example\n\t* var v = lognormal1();\n\t* // returns <number>\n\t*/ function lognormal1() {\n        return $b3f6cfb7b66c240f$exports(rnorm, mu, sigma);\n    }\n    /**\n\t* Returns a log-normally distributed pseudorandom number with parameters `mu` and `sigma`.\n\t*\n\t* @private\n\t* @param {number} mu - location parameter\n\t* @param {PositiveNumber} sigma - scale parameter\n\t* @returns {PositiveNumber} pseudorandom number\n\t*\n\t* @example\n\t* var v = lognormal2( -2.0, 4.0 );\n\t* // returns <number>\n\t*\n\t* @example\n\t* var v = lognormal2( 0.0, -1.0 );\n\t* // returns NaN\n\t*/ function lognormal2(mu, sigma) {\n        if ($806500fab48b0961$exports(mu) || $806500fab48b0961$exports(sigma) || sigma <= 0.0) return NaN;\n        return $b3f6cfb7b66c240f$exports(rnorm, mu, sigma);\n    }\n}\n// EXPORTS //\n$a971c8057dda0ad4$exports = $a971c8057dda0ad4$var$factory;\n\n\n// MAIN //\n/**\n* Returns a log-normally distributed pseudorandom number with parameters `mu` and `sigma`.\n*\n* @name lognormal\n* @type {PRNG}\n* @param {number} mu - location parameter\n* @param {PositiveNumber} sigma - scale parameter\n* @returns {PositiveNumber} pseudorandom number\n*\n* @example\n* var v = lognormal( -2.0, 4.0 );\n* // returns <number>\n*\n* @example\n* var v = lognormal( 0.0, -1.0 );\n* // returns NaN\n*/ var $ff49fffc1b65c6db$var$lognormal = $a971c8057dda0ad4$exports();\n// EXPORTS //\n$ff49fffc1b65c6db$exports = $ff49fffc1b65c6db$var$lognormal;\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($ff49fffc1b65c6db$exports, 'factory', $a971c8057dda0ad4$exports);\n// EXPORTS //\n$743faa608ca6cdc6$exports = $ff49fffc1b65c6db$exports;\n\n\nvar $cfdf67a5fc2cd432$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $c33794d51c93c7d6$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $1509f77662f7e6e4$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n\n\n\n\n\n\n\nvar $1509f77662f7e6e4$require$randn = $665931b83d6270df$exports.factory;\n\n\n\nvar $196549892a585dfb$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $196549892a585dfb$require$isNumber = $019754bf0ce823af$exports.isPrimitive;\n\nvar $196549892a585dfb$require$isPositive = $e95da724e81ac8e1$exports.isPrimitive;\n\n\n// MAIN //\n/**\n* Validates parameters.\n*\n* @private\n* @param {number} mu - mean\n* @param {PositiveNumber} sigma - standard deviation\n* @returns {(Error|null)} error or null\n*\n* @example\n* var err = validate( 1.0, 2.0 );\n* if ( err ) {\n*     throw err;\n* }\n*/ function $196549892a585dfb$var$validate(mu, sigma) {\n    if (!$196549892a585dfb$require$isNumber(mu) || $58226ebdfb370dd2$exports(mu)) return new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a number and not NaN. Value: `%s`.', mu));\n    if (!$196549892a585dfb$require$isPositive(sigma)) return new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be a positive number. Value: `%s`.', sigma));\n    return null;\n}\n// EXPORTS //\n$196549892a585dfb$exports = $196549892a585dfb$var$validate;\n\n\nvar $58671b2050bf5d87$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Returns a pseudorandom number from a normal distribution with parameters `mu` and `sigma`.\n*\n* @private\n* @param {PRNG} rand - pseudorandom number generator\n* @param {number} mu - mean\n* @param {PositiveNumber} sigma - standard deviation\n* @returns {number} pseudorandom number\n*/ function $58671b2050bf5d87$var$normal(rand, mu, sigma) {\n    return mu + sigma * rand();\n}\n// EXPORTS //\n$58671b2050bf5d87$exports = $58671b2050bf5d87$var$normal;\n\n\n// MAIN //\n/**\n* Returns a pseudorandom number generator for generating normally distributed random numbers.\n*\n* @param {number} [mu] - mean\n* @param {PositiveNumber} [sigma] - standard deviation\n* @param {Options} [options] - function options\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} `mu` must be a number\n* @throws {TypeError} `sigma` must be a positive number\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {PRNG} pseudorandom number generator\n*\n* @example\n* var normal = factory( 0.0, 1.0 );\n* var v = normal();\n* // returns <number>\n*\n* @example\n* var normal = factory( -3.0, 0.5, {\n*     'seed': 297\n* });\n* var v = normal();\n* // returns <number>\n*/ function $1509f77662f7e6e4$var$factory() {\n    var sigma;\n    var rnorm;\n    var opts;\n    var rand;\n    var prng;\n    var err;\n    var mu;\n    if (arguments.length === 0) rnorm = $1509f77662f7e6e4$require$randn();\n    else if (arguments.length === 1) {\n        opts = arguments[0];\n        if (!$c8f9ba5bc2a81d34$exports(opts)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Options argument must be an object. Value: `%s`.', opts));\n        if ($5a7912bad9882251$exports(opts, 'prng')) {\n            if (!$39cac8b951c1ded2$exports(opts.prng)) throw new TypeError($5a5504e40381a222$exports('invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', opts.prng));\n            rnorm = $1509f77662f7e6e4$require$randn({\n                'prng': opts.prng\n            });\n        } else rnorm = $1509f77662f7e6e4$require$randn(opts);\n    } else {\n        mu = arguments[0];\n        sigma = arguments[1];\n        err = $196549892a585dfb$exports(mu, sigma);\n        if (err) throw err;\n        if (arguments.length > 2) {\n            opts = arguments[2];\n            if (!$c8f9ba5bc2a81d34$exports(opts)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Options argument must be an object. Value: `%s`.', opts));\n            if ($5a7912bad9882251$exports(opts, 'prng')) {\n                if (!$39cac8b951c1ded2$exports(opts.prng)) throw new TypeError($5a5504e40381a222$exports('invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', opts.prng));\n                rnorm = $1509f77662f7e6e4$require$randn({\n                    'prng': opts.prng\n                });\n            } else rnorm = $1509f77662f7e6e4$require$randn(opts);\n        } else rnorm = $1509f77662f7e6e4$require$randn();\n    }\n    if (mu === void 0) prng = normal2;\n    else prng = normal1;\n    rand = rnorm.PRNG;\n    $dfd4cfb9f136c5d5$exports(prng, 'NAME', 'normal');\n    // If we are provided an \"external\" PRNG, we don't support getting or setting PRNG state, as we'd need to check for compatible state value types, etc, entailing considerable complexity.\n    if (opts && opts.prng) {\n        $dfd4cfb9f136c5d5$exports(prng, 'seed', null);\n        $dfd4cfb9f136c5d5$exports(prng, 'seedLength', null);\n        $c1b2e538264ff4b7$exports(prng, 'state', $427c86626b845cf7$exports(null), $b50f262dd23e3975$exports);\n        $dfd4cfb9f136c5d5$exports(prng, 'stateLength', null);\n        $dfd4cfb9f136c5d5$exports(prng, 'byteLength', null);\n        $dfd4cfb9f136c5d5$exports(prng, 'toJSON', $427c86626b845cf7$exports(null));\n    } else {\n        $a4444f7456e1c73a$exports(prng, 'seed', getSeed);\n        $a4444f7456e1c73a$exports(prng, 'seedLength', getSeedLength);\n        $c1b2e538264ff4b7$exports(prng, 'state', getState, setState);\n        $a4444f7456e1c73a$exports(prng, 'stateLength', getStateLength);\n        $a4444f7456e1c73a$exports(prng, 'byteLength', getStateSize);\n        $dfd4cfb9f136c5d5$exports(prng, 'toJSON', toJSON);\n    }\n    $dfd4cfb9f136c5d5$exports(prng, 'PRNG', rand);\n    return prng;\n    /**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMT19937} seed\n\t*/ function getSeed() {\n        return rand.seed;\n    }\n    /**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/ function getSeedLength() {\n        return rand.seedLength;\n    }\n    /**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/ function getStateLength() {\n        return rand.stateLength;\n    }\n    /**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/ function getStateSize() {\n        return rand.byteLength;\n    }\n    /**\n\t* Returns the current pseudorandom number generator state.\n\t*\n\t* @private\n\t* @returns {PRNGStateMT19937} current state\n\t*/ function getState() {\n        return rand.state;\n    }\n    /**\n\t* Sets the pseudorandom number generator state.\n\t*\n\t* @private\n\t* @param {PRNGStateMT19937} s - generator state\n\t* @throws {Error} must provide a valid state\n\t*/ function setState(s) {\n        rand.state = s;\n    }\n    /**\n\t* Serializes the pseudorandom number generator as a JSON object.\n\t*\n\t* ## Notes\n\t*\n\t* -   `JSON.stringify()` implicitly calls this method when stringifying a PRNG.\n\t*\n\t* @private\n\t* @returns {Object} JSON representation\n\t*/ function toJSON() {\n        var out = {};\n        out.type = 'PRNG';\n        out.name = prng.NAME;\n        out.state = $46c75d6fadb33a0e$exports(rand.state);\n        if (mu === void 0) out.params = [];\n        else out.params = [\n            mu,\n            sigma\n        ];\n        return out;\n    }\n    /**\n\t* Returns a pseudorandom number from a normal distribution with bound parameters `mu` and `sigma`.\n\t*\n\t* @private\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var v = normal1();\n\t* // returns <number>\n\t*/ function normal1() {\n        return $58671b2050bf5d87$exports(rnorm, mu, sigma);\n    }\n    /**\n\t* Returns a normally distributed pseudorandom number with mean `mu` and standard deviation `sigma`.\n\t*\n\t* @private\n\t* @param {number} mu - mean\n\t* @param {PositiveNumber} sigma - standard deviation\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var v = normal2( 0.0, 1.0 );\n\t* // returns <number>\n\t*\n\t* @example\n\t* var v = normal2( 0.0, -1.0 );\n\t* // returns NaN\n\t*/ function normal2(mu, sigma) {\n        if ($806500fab48b0961$exports(mu) || $806500fab48b0961$exports(sigma) || sigma <= 0.0) return NaN;\n        return $58671b2050bf5d87$exports(rnorm, mu, sigma);\n    }\n}\n// EXPORTS //\n$1509f77662f7e6e4$exports = $1509f77662f7e6e4$var$factory;\n\n\n// MAIN //\n/**\n* Returns a normally distributed pseudorandom number with mean `mu` and standard deviation `sigma`.\n*\n* @name normal\n* @type {PRNG}\n* @param {number} mu - mean\n* @param {PositiveNumber} sigma - standard deviation\n* @returns {number} pseudorandom number\n*\n* @example\n* var v = normal( 0.0, 1.0 );\n* // returns <number>\n*\n* @example\n* var v = normal( 0.0, -1.0 );\n* // returns NaN\n*/ var $c33794d51c93c7d6$var$normal = $1509f77662f7e6e4$exports();\n// EXPORTS //\n$c33794d51c93c7d6$exports = $c33794d51c93c7d6$var$normal;\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($c33794d51c93c7d6$exports, 'factory', $1509f77662f7e6e4$exports);\n// EXPORTS //\n$cfdf67a5fc2cd432$exports = $c33794d51c93c7d6$exports;\n\n\nvar $13db2958b0309f6e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $78e6a0d57ed1d4d4$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $8c826bd53f428064$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n\n\n\n\n\n\n\n\nvar $8c826bd53f428064$require$randu = $05d4f0dfaf19f1a1$exports.factory;\n\n\n\nvar $03b0d95201fe2b83$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $03b0d95201fe2b83$require$isNumber = $019754bf0ce823af$exports.isPrimitive;\n\n\n// MAIN //\n/**\n* Validates values provided for minimum and maximum support.\n*\n* @private\n* @param {number} a - minimum support\n* @param {number} b - maximum support\n* @returns {(Error|null)} error or null\n*\n* @example\n* var err = validate( 1.0, 2.0 );\n* if ( err ) {\n*     throw err;\n* }\n*/ function $03b0d95201fe2b83$var$validate(a, b) {\n    if (!$03b0d95201fe2b83$require$isNumber(a) || $58226ebdfb370dd2$exports(a)) return new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a number and not NaN. Value: `%s`.', a));\n    if (!$03b0d95201fe2b83$require$isNumber(b) || $58226ebdfb370dd2$exports(b)) return new TypeError($5a5504e40381a222$exports('invalid argument. Second argument must be a number and not NaN. Value: `%s`.', b));\n    if (a >= b) return new RangeError($5a5504e40381a222$exports('invalid argument. Minimum support must be less than maximum support. Value: `[%f, %f]`.', a, b));\n    return null;\n}\n// EXPORTS //\n$03b0d95201fe2b83$exports = $03b0d95201fe2b83$var$validate;\n\n\nvar $6d57ebfd3441e201$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n/**\n* Returns a uniformly distributed pseudorandom number with minimum support `a` and maximum support `b`.\n*\n* @private\n* @param {PRNG} rand - pseudorandom number generator\n* @param {number} a - minimum support (inclusive)\n* @param {number} b - maximum support (exclusive)\n* @returns {number} pseudorandom number\n*/ function $6d57ebfd3441e201$var$uniform(rand, a, b) {\n    var r = rand();\n    return b * r + (1.0 - r) * a; // equivalent to (b-a)*r + a\n}\n// EXPORTS //\n$6d57ebfd3441e201$exports = $6d57ebfd3441e201$var$uniform;\n\n\n// MAIN //\n/**\n* Returns a pseudorandom number generator for generating uniformly distributed random numbers.\n*\n* @param {number} [a] - minimum support (inclusive)\n* @param {number} [b] - maximum support (exclusive)\n* @param {Options} [options] - function options\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} `a` must be a number\n* @throws {TypeError} `b` must be a number\n* @throws {RangeError} `a` must be less than `b`\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {PRNG} pseudorandom number generator\n*\n* @example\n* var uniform = factory( 0.0, 1.0 );\n*\n* var v = uniform();\n* // returns <number>\n*\n* @example\n* var uniform = factory( -3.0, -1.0, {\n*     'seed': 297\n* });\n* var v = uniform();\n* // returns <number>\n*/ function $8c826bd53f428064$var$factory() {\n    var opts;\n    var rand;\n    var prng;\n    var err;\n    var a;\n    var b;\n    if (arguments.length === 0) rand = $8c826bd53f428064$require$randu();\n    else if (arguments.length === 1) {\n        opts = arguments[0];\n        if (!$c8f9ba5bc2a81d34$exports(opts)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Options argument must be an object. Value: `%s`.', opts));\n        if ($5a7912bad9882251$exports(opts, 'prng')) {\n            if (!$39cac8b951c1ded2$exports(opts.prng)) throw new TypeError($5a5504e40381a222$exports('invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', opts.prng));\n            rand = opts.prng;\n        } else rand = $8c826bd53f428064$require$randu(opts);\n    } else {\n        a = arguments[0];\n        b = arguments[1];\n        err = $03b0d95201fe2b83$exports(a, b);\n        if (err) throw err;\n        if (arguments.length > 2) {\n            opts = arguments[2];\n            if (!$c8f9ba5bc2a81d34$exports(opts)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Options argument must be an object. Value: `%s`.', opts));\n            if ($5a7912bad9882251$exports(opts, 'prng')) {\n                if (!$39cac8b951c1ded2$exports(opts.prng)) throw new TypeError($5a5504e40381a222$exports('invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', opts.prng));\n                rand = opts.prng;\n            } else rand = $8c826bd53f428064$require$randu(opts);\n        } else rand = $8c826bd53f428064$require$randu();\n    }\n    if (a === void 0) prng = uniform2;\n    else prng = uniform1;\n    $dfd4cfb9f136c5d5$exports(prng, 'NAME', 'uniform');\n    // If we are provided an \"external\" PRNG, we don't support getting or setting PRNG state, as we'd need to check for compatible state value types, etc, entailing considerable complexity.\n    if (opts && opts.prng) {\n        $dfd4cfb9f136c5d5$exports(prng, 'seed', null);\n        $dfd4cfb9f136c5d5$exports(prng, 'seedLength', null);\n        $c1b2e538264ff4b7$exports(prng, 'state', $427c86626b845cf7$exports(null), $b50f262dd23e3975$exports);\n        $dfd4cfb9f136c5d5$exports(prng, 'stateLength', null);\n        $dfd4cfb9f136c5d5$exports(prng, 'byteLength', null);\n        $dfd4cfb9f136c5d5$exports(prng, 'toJSON', $427c86626b845cf7$exports(null));\n        $dfd4cfb9f136c5d5$exports(prng, 'PRNG', rand);\n    } else {\n        $a4444f7456e1c73a$exports(prng, 'seed', getSeed);\n        $a4444f7456e1c73a$exports(prng, 'seedLength', getSeedLength);\n        $c1b2e538264ff4b7$exports(prng, 'state', getState, setState);\n        $a4444f7456e1c73a$exports(prng, 'stateLength', getStateLength);\n        $a4444f7456e1c73a$exports(prng, 'byteLength', getStateSize);\n        $dfd4cfb9f136c5d5$exports(prng, 'toJSON', toJSON);\n        $dfd4cfb9f136c5d5$exports(prng, 'PRNG', rand);\n        rand = rand.normalized;\n    }\n    return prng;\n    /**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMT19937} seed\n\t*/ function getSeed() {\n        return rand.seed;\n    }\n    /**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/ function getSeedLength() {\n        return rand.seedLength;\n    }\n    /**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/ function getStateLength() {\n        return rand.stateLength;\n    }\n    /**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/ function getStateSize() {\n        return rand.byteLength;\n    }\n    /**\n\t* Returns the current pseudorandom number generator state.\n\t*\n\t* @private\n\t* @returns {PRNGStateMT19937} current state\n\t*/ function getState() {\n        return rand.state;\n    }\n    /**\n\t* Sets the pseudorandom number generator state.\n\t*\n\t* @private\n\t* @param {PRNGStateMT19937} s - generator state\n\t* @throws {Error} must provide a valid state\n\t*/ function setState(s) {\n        rand.state = s;\n    }\n    /**\n\t* Serializes the pseudorandom number generator as a JSON object.\n\t*\n\t* ## Notes\n\t*\n\t* -   `JSON.stringify()` implicitly calls this method when stringifying a PRNG.\n\t*\n\t* @private\n\t* @returns {Object} JSON representation\n\t*/ function toJSON() {\n        var out = {};\n        out.type = 'PRNG';\n        out.name = prng.NAME;\n        out.state = $46c75d6fadb33a0e$exports(rand.state);\n        if (a === void 0) out.params = [];\n        else out.params = [\n            a,\n            b\n        ];\n        return out;\n    }\n    /**\n\t* Returns a uniformly distributed pseudorandom number with minimum support `a` and maximum support `b`.\n\t*\n\t* @private\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var v = uniform1();\n\t* // returns <number>\n\t*/ function uniform1() {\n        return $6d57ebfd3441e201$exports(rand, a, b);\n    }\n    /**\n\t* Returns a uniformly distributed pseudorandom number with minimum support `a` and maximum support `b`.\n\t*\n\t* @private\n\t* @param {number} a - minimum support (inclusive)\n\t* @param {number} b - maximum support (exclusive)\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var v = uniform2( 0.0, 1.0 );\n\t* // returns <number>\n\t*\n\t* @example\n\t* var v = uniform2( 1.0, 0.0 );\n\t* // returns NaN\n\t*/ function uniform2(a, b) {\n        if ($806500fab48b0961$exports(a) || $806500fab48b0961$exports(b) || a >= b) return NaN;\n        return $6d57ebfd3441e201$exports(rand, a, b);\n    }\n}\n// EXPORTS //\n$8c826bd53f428064$exports = $8c826bd53f428064$var$factory;\n\n\n// MAIN //\n/**\n* Returns a uniformly distributed pseudorandom number with minimum support `a` and maximum support `b`.\n*\n* @name uniform\n* @type {PRNG}\n* @param {number} a - minimum support (inclusive)\n* @param {number} b - maximum support (exclusive)\n* @returns {number} pseudorandom number\n*\n* @example\n* var v = uniform( 0.0, 1.0 );\n* // returns <number>\n*/ var $78e6a0d57ed1d4d4$var$uniform = $8c826bd53f428064$exports();\n// EXPORTS //\n$78e6a0d57ed1d4d4$exports = $78e6a0d57ed1d4d4$var$uniform;\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($78e6a0d57ed1d4d4$exports, 'factory', $8c826bd53f428064$exports);\n// EXPORTS //\n$13db2958b0309f6e$exports = $78e6a0d57ed1d4d4$exports;\n\n\nvar $90dd2828a14bc41c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $62c062962518582b$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $7e41df13edb87dc4$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $81155863c00f9217$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $38d4865ec857a707$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $a322c7692faa8854$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $26108f7279209649$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $829c89063eb3668a$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $9819e19595d90020$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// VARIABLES //\n// Blocksize for pairwise summation (NOTE: decreasing the blocksize decreases rounding error as more pairs are summed, but also decreases performance. Because the inner loop is unrolled eight times, the blocksize is effectively `16`.):\nvar $9819e19595d90020$var$BLOCKSIZE = 128;\n// MAIN //\n/**\n* Computes the sum of strided array elements using pairwise summation.\n*\n* ## Method\n*\n* -   This implementation uses pairwise summation, which accrues rounding error `O(log2 N)` instead of `O(N)`. The recursion depth is also `O(log2 N)`.\n*\n* ## References\n*\n* -   Higham, Nicholas J. 1993. \"The Accuracy of Floating Point Summation.\" _SIAM Journal on Scientific Computing_ 14 (4): 783–99. doi:[10.1137/0914050](https://doi.org/10.1137/0914050).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} sum\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = gsumpw( N, x, 2, 1 );\n* // returns 5.0\n*/ function $9819e19595d90020$var$gsumpw(N, x, stride, offset) {\n    var ix;\n    var s0;\n    var s1;\n    var s2;\n    var s3;\n    var s4;\n    var s5;\n    var s6;\n    var s7;\n    var M;\n    var s;\n    var n;\n    var i;\n    if (N <= 0) return 0.0;\n    if (N === 1 || stride === 0) return x[offset];\n    ix = offset;\n    if (N < 8) {\n        // Use simple summation...\n        s = 0.0;\n        for(i = 0; i < N; i++){\n            s += x[ix];\n            ix += stride;\n        }\n        return s;\n    }\n    if (N <= $9819e19595d90020$var$BLOCKSIZE) {\n        // Sum a block with 8 accumulators (by loop unrolling, we lower the effective blocksize to 16)...\n        s0 = x[ix];\n        s1 = x[ix + stride];\n        s2 = x[ix + 2 * stride];\n        s3 = x[ix + 3 * stride];\n        s4 = x[ix + 4 * stride];\n        s5 = x[ix + 5 * stride];\n        s6 = x[ix + 6 * stride];\n        s7 = x[ix + 7 * stride];\n        ix += 8 * stride;\n        M = N % 8;\n        for(i = 8; i < N - M; i += 8){\n            s0 += x[ix];\n            s1 += x[ix + stride];\n            s2 += x[ix + 2 * stride];\n            s3 += x[ix + 3 * stride];\n            s4 += x[ix + 4 * stride];\n            s5 += x[ix + 5 * stride];\n            s6 += x[ix + 6 * stride];\n            s7 += x[ix + 7 * stride];\n            ix += 8 * stride;\n        }\n        // Pairwise sum the accumulators:\n        s = s0 + s1 + (s2 + s3) + (s4 + s5 + (s6 + s7));\n        // Clean-up loop...\n        for(i; i < N; i++){\n            s += x[ix];\n            ix += stride;\n        }\n        return s;\n    }\n    // Recurse by dividing by two, but avoiding non-multiples of unroll factor...\n    n = $19a18984922c6b5f$exports(N / 2);\n    n -= n % 8;\n    return $9819e19595d90020$var$gsumpw(n, x, stride, ix) + $9819e19595d90020$var$gsumpw(N - n, x, stride, ix + n * stride);\n}\n// EXPORTS //\n$9819e19595d90020$exports = $9819e19595d90020$var$gsumpw;\n\n\n// MAIN //\n/**\n* Computes the sum of strided array elements using pairwise summation.\n*\n* ## Method\n*\n* -   This implementation uses pairwise summation, which accrues rounding error `O(log2 N)` instead of `O(N)`. The recursion depth is also `O(log2 N)`.\n*\n* ## References\n*\n* -   Higham, Nicholas J. 1993. \"The Accuracy of Floating Point Summation.\" _SIAM Journal on Scientific Computing_ 14 (4): 783–99. doi:[10.1137/0914050](https://doi.org/10.1137/0914050).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} sum\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = gsumpw( N, x, 1 );\n* // returns 1.0\n*/ function $829c89063eb3668a$var$gsumpw(N, x, stride) {\n    var ix;\n    var s;\n    var i;\n    if (N <= 0) return 0.0;\n    if (N === 1 || stride === 0) return x[0];\n    if (stride < 0) ix = (1 - N) * stride;\n    else ix = 0;\n    if (N < 8) {\n        // Use simple summation...\n        s = 0.0;\n        for(i = 0; i < N; i++){\n            s += x[ix];\n            ix += stride;\n        }\n        return s;\n    }\n    return $9819e19595d90020$exports(N, x, stride, ix);\n}\n// EXPORTS //\n$829c89063eb3668a$exports = $829c89063eb3668a$var$gsumpw;\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($829c89063eb3668a$exports, 'ndarray', $9819e19595d90020$exports);\n// EXPORTS //\n$26108f7279209649$exports = $829c89063eb3668a$exports;\n\n\nvar $3a344372a8701412$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $8cd9f0f0580d7ddb$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $a63ec7706614a023$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// VARIABLES //\n// Blocksize for pairwise summation (NOTE: decreasing the blocksize decreases rounding error as more pairs are summed, but also decreases performance. Because the inner loop is unrolled eight times, the blocksize is effectively `16`.):\nvar $a63ec7706614a023$var$BLOCKSIZE = 128;\n// MAIN //\n/**\n* Adds a constant to each strided array element and computes the sum using pairwise summation.\n*\n* ## Method\n*\n* -   This implementation uses pairwise summation, which accrues rounding error `O(log2 N)` instead of `O(N)`. The recursion depth is also `O(log2 N)`.\n*\n* ## References\n*\n* -   Higham, Nicholas J. 1993. \"The Accuracy of Floating Point Summation.\" _SIAM Journal on Scientific Computing_ 14 (4): 783–99. doi:[10.1137/0914050](https://doi.org/10.1137/0914050).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} alpha - constant\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} sum\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = gapxsumpw( N, 5.0, x, 2, 1 );\n* // returns 25.0\n*/ function $a63ec7706614a023$var$gapxsumpw(N, alpha, x, stride, offset) {\n    var ix;\n    var s0;\n    var s1;\n    var s2;\n    var s3;\n    var s4;\n    var s5;\n    var s6;\n    var s7;\n    var M;\n    var s;\n    var n;\n    var i;\n    if (N <= 0) return 0.0;\n    if (N === 1 || stride === 0) return alpha + x[offset];\n    ix = offset;\n    if (N < 8) {\n        // Use simple summation...\n        s = 0.0;\n        for(i = 0; i < N; i++){\n            s += alpha + x[ix];\n            ix += stride;\n        }\n        return s;\n    }\n    if (N <= $a63ec7706614a023$var$BLOCKSIZE) {\n        // Sum a block with 8 accumulators (by loop unrolling, we lower the effective blocksize to 16)...\n        s0 = alpha + x[ix];\n        s1 = alpha + x[ix + stride];\n        s2 = alpha + x[ix + 2 * stride];\n        s3 = alpha + x[ix + 3 * stride];\n        s4 = alpha + x[ix + 4 * stride];\n        s5 = alpha + x[ix + 5 * stride];\n        s6 = alpha + x[ix + 6 * stride];\n        s7 = alpha + x[ix + 7 * stride];\n        ix += 8 * stride;\n        M = N % 8;\n        for(i = 8; i < N - M; i += 8){\n            s0 += alpha + x[ix];\n            s1 += alpha + x[ix + stride];\n            s2 += alpha + x[ix + 2 * stride];\n            s3 += alpha + x[ix + 3 * stride];\n            s4 += alpha + x[ix + 4 * stride];\n            s5 += alpha + x[ix + 5 * stride];\n            s6 += alpha + x[ix + 6 * stride];\n            s7 += alpha + x[ix + 7 * stride];\n            ix += 8 * stride;\n        }\n        // Pairwise sum the accumulators:\n        s = s0 + s1 + (s2 + s3) + (s4 + s5 + (s6 + s7));\n        // Clean-up loop...\n        for(i; i < N; i++){\n            s += alpha + x[ix];\n            ix += stride;\n        }\n        return s;\n    }\n    // Recurse by dividing by two, but avoiding non-multiples of unroll factor...\n    n = $19a18984922c6b5f$exports(N / 2);\n    n -= n % 8;\n    return $a63ec7706614a023$var$gapxsumpw(n, alpha, x, stride, ix) + $a63ec7706614a023$var$gapxsumpw(N - n, alpha, x, stride, ix + n * stride); // eslint-disable-line max-len\n}\n// EXPORTS //\n$a63ec7706614a023$exports = $a63ec7706614a023$var$gapxsumpw;\n\n\n// MAIN //\n/**\n* Adds a constant to each strided array element and computes the sum using pairwise summation.\n*\n* ## Method\n*\n* -   This implementation uses pairwise summation, which accrues rounding error `O(log2 N)` instead of `O(N)`. The recursion depth is also `O(log2 N)`.\n*\n* ## References\n*\n* -   Higham, Nicholas J. 1993. \"The Accuracy of Floating Point Summation.\" _SIAM Journal on Scientific Computing_ 14 (4): 783–99. doi:[10.1137/0914050](https://doi.org/10.1137/0914050).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} alpha - constant\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} sum\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = gapxsumpw( N, 5.0, x, 1 );\n* // returns 16.0\n*/ function $8cd9f0f0580d7ddb$var$gapxsumpw(N, alpha, x, stride) {\n    var ix;\n    var s;\n    var i;\n    if (N <= 0) return 0.0;\n    if (N === 1 || stride === 0) return alpha + x[0];\n    if (stride < 0) ix = (1 - N) * stride;\n    else ix = 0;\n    if (N < 8) {\n        // Use simple summation...\n        s = 0.0;\n        for(i = 0; i < N; i++){\n            s += alpha + x[ix];\n            ix += stride;\n        }\n        return s;\n    }\n    return $a63ec7706614a023$exports(N, alpha, x, stride, ix);\n}\n// EXPORTS //\n$8cd9f0f0580d7ddb$exports = $8cd9f0f0580d7ddb$var$gapxsumpw;\n\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($8cd9f0f0580d7ddb$exports, 'ndarray', $a63ec7706614a023$exports);\n// EXPORTS //\n$3a344372a8701412$exports = $8cd9f0f0580d7ddb$exports;\n\n\n// MAIN //\n/**\n* Computes the arithmetic mean of a strided array using a two-pass error correction algorithm.\n*\n* ## Method\n*\n* -   This implementation uses a two-pass approach, as suggested by Neely (1966).\n*\n* ## References\n*\n* -   Neely, Peter M. 1966. \"Comparison of Several Algorithms for Computation of Means, Standard Deviations and Correlation Coefficients.\" _Communications of the ACM_ 9 (7). Association for Computing Machinery: 496–99. doi:[10.1145/365719.365958](https://doi.org/10.1145/365719.365958).\n* -   Schubert, Erich, and Michael Gertz. 2018. \"Numerically Stable Parallel Computation of (Co-)Variance.\" In _Proceedings of the 30th International Conference on Scientific and Statistical Database Management_. New York, NY, USA: Association for Computing Machinery. doi:[10.1145/3221269.3223036](https://doi.org/10.1145/3221269.3223036).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} arithmetic mean\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = meanpn( N, x, 1 );\n* // returns ~0.3333\n*/ function $a322c7692faa8854$var$meanpn(N, x, stride) {\n    var mu;\n    var c;\n    if (N <= 0) return NaN;\n    if (N === 1 || stride === 0) return x[0];\n    // Compute an estimate for the meanpn:\n    mu = $26108f7279209649$exports(N, x, stride) / N;\n    // Compute an error term:\n    c = $3a344372a8701412$exports(N, -mu, x, stride) / N;\n    return mu + c;\n}\n// EXPORTS //\n$a322c7692faa8854$exports = $a322c7692faa8854$var$meanpn;\n\n\nvar $50b78479cac018fd$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $50b78479cac018fd$require$gsumpw = $26108f7279209649$exports.ndarray;\n\nvar $50b78479cac018fd$require$gapxsumpw = $3a344372a8701412$exports.ndarray;\n// MAIN //\n/**\n* Computes the arithmetic mean of a strided array using a two-pass error correction algorithm.\n*\n* ## Method\n*\n* -   This implementation uses a two-pass approach, as suggested by Neely (1966).\n*\n* ## References\n*\n* -   Neely, Peter M. 1966. \"Comparison of Several Algorithms for Computation of Means, Standard Deviations and Correlation Coefficients.\" _Communications of the ACM_ 9 (7). Association for Computing Machinery: 496–99. doi:[10.1145/365719.365958](https://doi.org/10.1145/365719.365958).\n* -   Schubert, Erich, and Michael Gertz. 2018. \"Numerically Stable Parallel Computation of (Co-)Variance.\" In _Proceedings of the 30th International Conference on Scientific and Statistical Database Management_. New York, NY, USA: Association for Computing Machinery. doi:[10.1145/3221269.3223036](https://doi.org/10.1145/3221269.3223036).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} arithmetic mean\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = meanpn( N, x, 2, 1 );\n* // returns 1.25\n*/ function $50b78479cac018fd$var$meanpn(N, x, stride, offset) {\n    var mu;\n    var c;\n    if (N <= 0) return NaN;\n    if (N === 1 || stride === 0) return x[offset];\n    // Compute an estimate for the meanpn:\n    mu = $50b78479cac018fd$require$gsumpw(N, x, stride, offset) / N;\n    // Compute an error term:\n    c = $50b78479cac018fd$require$gapxsumpw(N, -mu, x, stride, offset) / N;\n    return mu + c;\n}\n// EXPORTS //\n$50b78479cac018fd$exports = $50b78479cac018fd$var$meanpn;\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($a322c7692faa8854$exports, 'ndarray', $50b78479cac018fd$exports);\n// EXPORTS //\n$38d4865ec857a707$exports = $a322c7692faa8854$exports;\n\n\n// EXPORTS //\n$81155863c00f9217$exports = $38d4865ec857a707$exports; // exports: { \"ndarray\": \"meanpn.ndarray\" }\n\n\n// MAIN //\n/**\n* Computes the arithmetic mean of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} arithmetic mean\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = mean( N, x, 1 );\n* // returns ~0.3333\n*/ function $7e41df13edb87dc4$var$mean(N, x, stride) {\n    return $81155863c00f9217$exports(N, x, stride);\n}\n// EXPORTS //\n$7e41df13edb87dc4$exports = $7e41df13edb87dc4$var$mean;\n\n\nvar $6d01dd214e8e02ac$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $6d01dd214e8e02ac$require$meanpn = $81155863c00f9217$exports.ndarray;\n// MAIN //\n/**\n* Computes the arithmetic mean of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} arithmetic mean\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = mean( N, x, 2, 1 );\n* // returns 1.25\n*/ function $6d01dd214e8e02ac$var$mean(N, x, stride, offset) {\n    return $6d01dd214e8e02ac$require$meanpn(N, x, stride, offset);\n}\n// EXPORTS //\n$6d01dd214e8e02ac$exports = $6d01dd214e8e02ac$var$mean;\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($7e41df13edb87dc4$exports, 'ndarray', $6d01dd214e8e02ac$exports);\n// EXPORTS //\n$62c062962518582b$exports = $7e41df13edb87dc4$exports;\n\n\n// EXPORTS //\n$90dd2828a14bc41c$exports = $62c062962518582b$exports; // exports: { \"ndarray\": \"mean.ndarray\" }\n\n\nvar $5fb7fa894854ade4$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $3171f8b2b15b8183$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $c6b57d881f311af8$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $41ca3ad4720ef7e4$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $a8c806a47645133b$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $c666391390467e5c$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $c09df1a5b1b0eb7b$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $ed89abe4f0f1d532$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $c14c6e3ff6d4bf39$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\n// MAIN //\n/**\n* Computes the variance of a strided array using a two-pass algorithm.\n*\n* ## Method\n*\n* -   This implementation uses a two-pass approach, as suggested by Neely (1966).\n*\n* ## References\n*\n* -   Neely, Peter M. 1966. \"Comparison of Several Algorithms for Computation of Means, Standard Deviations and Correlation Coefficients.\" _Communications of the ACM_ 9 (7). Association for Computing Machinery: 496–99. doi:[10.1145/365719.365958](https://doi.org/10.1145/365719.365958).\n* -   Schubert, Erich, and Michael Gertz. 2018. \"Numerically Stable Parallel Computation of (Co-)Variance.\" In _Proceedings of the 30th International Conference on Scientific and Statistical Database Management_. New York, NY, USA: Association for Computing Machinery. doi:[10.1145/3221269.3223036](https://doi.org/10.1145/3221269.3223036).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} variance\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = variancepn( N, 1, x, 1 );\n* // returns ~4.3333\n*/ function $c14c6e3ff6d4bf39$var$variancepn(N, correction, x, stride) {\n    var mu;\n    var ix;\n    var M2;\n    var M;\n    var d;\n    var n;\n    var i;\n    n = N - correction;\n    if (N <= 0 || n <= 0.0) return NaN;\n    if (N === 1 || stride === 0) return 0.0;\n    // Compute an estimate for the mean:\n    mu = $26108f7279209649$exports(N, x, stride) / N;\n    if (stride < 0) ix = (1 - N) * stride;\n    else ix = 0;\n    // Compute the variance...\n    M2 = 0.0;\n    M = 0.0;\n    for(i = 0; i < N; i++){\n        d = x[ix] - mu;\n        M2 += d * d;\n        M += d;\n        ix += stride;\n    }\n    return M2 / n - M / N * (M / n);\n}\n// EXPORTS //\n$c14c6e3ff6d4bf39$exports = $c14c6e3ff6d4bf39$var$variancepn;\n\n\nvar $13a13ece0e9a13c3$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $13a13ece0e9a13c3$require$gsumpw = $26108f7279209649$exports.ndarray;\n// MAIN //\n/**\n* Computes the variance of a strided array using a two-pass algorithm.\n*\n* ## Method\n*\n* -   This implementation uses a two-pass approach, as suggested by Neely (1966).\n*\n* ## References\n*\n* -   Neely, Peter M. 1966. \"Comparison of Several Algorithms for Computation of Means, Standard Deviations and Correlation Coefficients.\" _Communications of the ACM_ 9 (7). Association for Computing Machinery: 496–99. doi:[10.1145/365719.365958](https://doi.org/10.1145/365719.365958).\n* -   Schubert, Erich, and Michael Gertz. 2018. \"Numerically Stable Parallel Computation of (Co-)Variance.\" In _Proceedings of the 30th International Conference on Scientific and Statistical Database Management_. New York, NY, USA: Association for Computing Machinery. doi:[10.1145/3221269.3223036](https://doi.org/10.1145/3221269.3223036).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} variance\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = variancepn( N, 1, x, 2, 1 );\n* // returns 6.25\n*/ function $13a13ece0e9a13c3$var$variancepn(N, correction, x, stride, offset) {\n    var mu;\n    var ix;\n    var M2;\n    var M;\n    var d;\n    var n;\n    var i;\n    n = N - correction;\n    if (N <= 0 || n <= 0.0) return NaN;\n    if (N === 1 || stride === 0) return 0.0;\n    // Compute an estimate for the mean:\n    mu = $13a13ece0e9a13c3$require$gsumpw(N, x, stride, offset) / N;\n    // Compute the variance...\n    ix = offset;\n    M2 = 0.0;\n    M = 0.0;\n    for(i = 0; i < N; i++){\n        d = x[ix] - mu;\n        M2 += d * d;\n        M += d;\n        ix += stride;\n    }\n    return M2 / n - M / N * (M / n);\n}\n// EXPORTS //\n$13a13ece0e9a13c3$exports = $13a13ece0e9a13c3$var$variancepn;\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($c14c6e3ff6d4bf39$exports, 'ndarray', $13a13ece0e9a13c3$exports);\n// EXPORTS //\n$ed89abe4f0f1d532$exports = $c14c6e3ff6d4bf39$exports;\n\n\n// EXPORTS //\n$c09df1a5b1b0eb7b$exports = $ed89abe4f0f1d532$exports; // exports: { \"ndarray\": \"main.ndarray\" }\n\n\n\n// MAIN //\n/**\n* Computes the standard deviation of a strided array using a two-pass algorithm.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} standard deviation\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n*\n* var v = stdevpn( x.length, 1, x, 1 );\n* // returns ~2.0817\n*/ function $c666391390467e5c$var$stdevpn(N, correction, x, stride) {\n    return $fba0048b3725563e$exports($c09df1a5b1b0eb7b$exports(N, correction, x, stride));\n}\n// EXPORTS //\n$c666391390467e5c$exports = $c666391390467e5c$var$stdevpn;\n\n\nvar $52768df656e6d6c5$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $52768df656e6d6c5$require$variancepn = $c09df1a5b1b0eb7b$exports.ndarray;\n\n// MAIN //\n/**\n* Computes the standard deviation of a strided array using a two-pass algorithm.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} standard deviation\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = stdevpn( N, 1, x, 2, 1 );\n* // returns 2.5\n*/ function $52768df656e6d6c5$var$stdevpn(N, correction, x, stride, offset) {\n    return $fba0048b3725563e$exports($52768df656e6d6c5$require$variancepn(N, correction, x, stride, offset));\n}\n// EXPORTS //\n$52768df656e6d6c5$exports = $52768df656e6d6c5$var$stdevpn;\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($c666391390467e5c$exports, 'ndarray', $52768df656e6d6c5$exports);\n// EXPORTS //\n$a8c806a47645133b$exports = $c666391390467e5c$exports;\n\n\n// EXPORTS //\n$41ca3ad4720ef7e4$exports = $a8c806a47645133b$exports; // exports: { \"ndarray\": \"main.ndarray\" }\n\n\n// MAIN //\n/**\n* Computes the standard deviation of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} standard deviation\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = stdev( N, 1, x, 1 );\n* // returns ~2.0817\n*/ function $c6b57d881f311af8$var$stdev(N, correction, x, stride) {\n    return $41ca3ad4720ef7e4$exports(N, correction, x, stride);\n}\n// EXPORTS //\n$c6b57d881f311af8$exports = $c6b57d881f311af8$var$stdev;\n\n\nvar $cce42cc7a953eb78$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $cce42cc7a953eb78$require$stdevpn = $41ca3ad4720ef7e4$exports.ndarray;\n// MAIN //\n/**\n* Computes the standard deviation of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} standard deviation\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = stdev( N, 1, x, 2, 1 );\n* // returns 2.5\n*/ function $cce42cc7a953eb78$var$stdev(N, correction, x, stride, offset) {\n    return $cce42cc7a953eb78$require$stdevpn(N, correction, x, stride, offset);\n}\n// EXPORTS //\n$cce42cc7a953eb78$exports = $cce42cc7a953eb78$var$stdev;\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($c6b57d881f311af8$exports, 'ndarray', $cce42cc7a953eb78$exports);\n// EXPORTS //\n$3171f8b2b15b8183$exports = $c6b57d881f311af8$exports;\n\n\n// EXPORTS //\n$5fb7fa894854ade4$exports = $3171f8b2b15b8183$exports; // exports: { \"ndarray\": \"main.ndarray\" }\n\n\nvar $1ad2f0783ffc9d9e$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $f919191cf20350da$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $f919191cf20350da$require$isString = $2a5f909076b7a477$exports.isPrimitive;\n\n\n// MAIN //\n/**\n* Attempts to parse a string as JSON.\n*\n* @param {string} str - string to parse\n* @param {Function} [reviver] - transformation function\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} reviver must be a function\n* @returns {(*|Error)} parsed value or parse error\n*\n* @example\n* var obj = parseJSON( '{\"beep\":\"boop\"}' );\n* // returns {'beep':'boop'}\n*/ function $f919191cf20350da$var$parseJSON(str, reviver) {\n    if (!$f919191cf20350da$require$isString(str)) throw new TypeError($5a5504e40381a222$exports('invalid argument. First argument must be a string. Value: `%s`.', str));\n    if (arguments.length > 1) {\n        if (!$39cac8b951c1ded2$exports(reviver)) throw new TypeError($5a5504e40381a222$exports('invalid argument. Reviver argument must be a function. Value: `%s`.', reviver));\n    }\n    try {\n        return JSON.parse(str, reviver);\n    } catch (error) {\n        return error;\n    }\n}\n// EXPORTS //\n$f919191cf20350da$exports = $f919191cf20350da$var$parseJSON;\n\n\n// EXPORTS //\n$1ad2f0783ffc9d9e$exports = $f919191cf20350da$exports;\n\n\nvar $3306f19506f0f127$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $82a0080910277a82$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\nvar $b364f2cd2faf3e98$exports = {};\n\"use strict\";\n\n\nvar $82a0080910277a82$require$readfile = $b364f2cd2faf3e98$exports.readFile;\n// MAIN //\n/**\n* Asynchronously reads the entire contents of a file.\n*\n* @param {(string|Buffer|integer)} file - file path or file descriptor\n* @param {(Object|string)} [options] - options\n* @param {(string|null)} [options.encoding] - file encoding\n* @param {string} [options.flag] - file status flag\n* @param {Function} clbk - callback to invoke after reading file contents\n*\n* @example\n* function onFile( error, data ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( data );\n* }\n* readFile( __filename, onFile );\n*/ function $82a0080910277a82$var$readFile() {\n    var args;\n    var i;\n    args = [];\n    for(i = 0; i < arguments.length; i++)args.push(arguments[i]);\n    $82a0080910277a82$require$readfile.apply(null, args);\n}\n// EXPORTS //\n$82a0080910277a82$exports = $82a0080910277a82$var$readFile;\n\n\nvar $de03132fb6b0caed$exports = {};\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ 'use strict';\n\nvar $de03132fb6b0caed$require$readfileSync = $b364f2cd2faf3e98$exports.readFileSync;\n// MAIN //\n/**\n* Synchronously reads the entire contents of a file.\n*\n* @param {(string|Buffer|integer)} file - file path or file descriptor\n* @param {(Object|string)} [options] - options\n* @param {(string|null)} [options.encoding] - file encoding\n* @param {string} [options.flag] - file status flag\n* @returns {(Buffer|string|Error)} file contents or an error\n*\n* @example\n* var out = readFileSync( __filename );\n* if ( out instanceof Error ) {\n*     throw out;\n* }\n* console.log( out );\n*/ function $de03132fb6b0caed$var$readFileSync(file, options) {\n    var f;\n    try {\n        if (arguments.length > 1) f = $de03132fb6b0caed$require$readfileSync(file, options);\n        else f = $de03132fb6b0caed$require$readfileSync(file);\n    } catch (err) {\n        return err;\n    }\n    return f;\n}\n// EXPORTS //\n$de03132fb6b0caed$exports = $de03132fb6b0caed$var$readFileSync;\n\n\n// MAIN //\n$dfd4cfb9f136c5d5$exports($82a0080910277a82$exports, 'sync', $de03132fb6b0caed$exports);\n// EXPORTS //\n$3306f19506f0f127$exports = $82a0080910277a82$exports;\n\n\nconst $305d0a1dffe471e1$var$stockPriceCache = {};\nconst $305d0a1dffe471e1$var$distributionParamsCache = {};\nlet $305d0a1dffe471e1$var$stockChartInstance = null; // Store chart instance globally\nconst $305d0a1dffe471e1$var$stockData = {\n    AAPL: (0, (/*@__PURE__*/$parcel$interopDefault($6f0ad54a2a2a621f$exports))),\n    AMZN: (0, (/*@__PURE__*/$parcel$interopDefault($5781d91b55e476c0$exports))),\n    NFLX: (0, (/*@__PURE__*/$parcel$interopDefault($2046038b2cff296f$exports))),\n    GOOG: (0, (/*@__PURE__*/$parcel$interopDefault($8e1b699ad97a9f1e$exports))),\n    MSFT: (0, (/*@__PURE__*/$parcel$interopDefault($735bc78b1ba08f31$exports)))\n};\nasync function $305d0a1dffe471e1$var$fetchStockPrices(stock) {\n    if (!$305d0a1dffe471e1$var$stockData[stock]) return [];\n    // Convert JSON data to the expected format\n    return $305d0a1dffe471e1$var$stockData[stock].map((entry)=>({\n            date: new Date(entry.Date),\n            price: parseFloat(entry.Close) // Extract and convert Close price\n        }));\n}\nfunction $305d0a1dffe471e1$var$calculateLogReturnParams(prices) {\n    const logReturns = [];\n    for(let i = 1; i < prices.length; i++){\n        const r = Math.log(prices[i].price / prices[i - 1].price);\n        logReturns.push(r);\n    }\n    const n = logReturns.length;\n    const mu = $90dd2828a14bc41c$exports(n, logReturns, 1);\n    const sigma = $5fb7fa894854ade4$exports(n, 1, logReturns, 1);\n    return {\n        mean: mu,\n        stdev: sigma\n    };\n}\nasync function $305d0a1dffe471e1$var$simulateFuturePrices(stock, distribution) {\n    const historical = await $305d0a1dffe471e1$var$fetchStockPrices(stock);\n    if (historical.length === 0) return;\n    if (!$305d0a1dffe471e1$var$distributionParamsCache[stock]) $305d0a1dffe471e1$var$distributionParamsCache[stock] = $305d0a1dffe471e1$var$calculateLogReturnParams(historical);\n    const params = $305d0a1dffe471e1$var$distributionParamsCache[stock];\n    let lastPrice = historical[historical.length - 1].price;\n    const lastDate = new Date(historical[historical.length - 1].date);\n    let simulatedPrices = [];\n    for(let i = 1; i <= 30; i++){\n        let simulatedReturn = 0;\n        if (distribution === 'normal') simulatedReturn = $cfdf67a5fc2cd432$exports(params.mean, params.stdev);\n        else if (distribution === 'uniform') simulatedReturn = $13db2958b0309f6e$exports(params.mean - params.stdev, params.mean + params.stdev);\n        lastPrice *= Math.exp(simulatedReturn);\n        let futureDate = new Date(lastDate);\n        futureDate.setDate(futureDate.getDate() + i);\n        simulatedPrices.push({\n            date: futureDate.toISOString().split('T')[0],\n            price: lastPrice\n        });\n    }\n    $305d0a1dffe471e1$var$plotStockData(historical, simulatedPrices);\n}\nwindow.runSimulation = async function() {\n    const stock = document.getElementById(\"stock\").value;\n    const distribution = document.getElementById(\"distribution\").value;\n    await $305d0a1dffe471e1$var$simulateFuturePrices(stock, distribution);\n};\nfunction $305d0a1dffe471e1$var$plotStockData(historical, future) {\n    const ctx = document.getElementById('stockChart').getContext('2d');\n    const dates = [\n        ...historical.map((p)=>p.date),\n        ...future.map((p)=>p.date)\n    ];\n    const datasets = [\n        {\n            label: 'Historical',\n            data: [\n                ...historical.map((p)=>p.price),\n                ...future.map((p)=>undefined)\n            ]\n        },\n        {\n            label: 'Simulated Future',\n            data: [\n                ...historical.map((p)=>undefined),\n                ...future.map((p)=>p.price)\n            ]\n        }\n    ];\n    // 🔥 Destroy the existing chart if it exists\n    if ($305d0a1dffe471e1$var$stockChartInstance) $305d0a1dffe471e1$var$stockChartInstance.destroy();\n    // Create a new chart\n    $305d0a1dffe471e1$var$stockChartInstance = new Chart(ctx, {\n        type: 'line',\n        data: {\n            labels: dates,\n            datasets: datasets\n        },\n        options: {\n            scales: {\n                x: {\n                    type: 'time',\n                    time: {\n                        unit: 'day'\n                    }\n                },\n                y: {\n                    title: {\n                        display: true,\n                        text: 'Price (USD)'\n                    }\n                }\n            }\n        }\n    });\n}\n\n})();\n//# sourceMappingURL=script.js.map\n","var lognormal = require( '@stdlib/random/base/lognormal' );\nvar normal = require( '@stdlib/random/base/normal' );\nvar uniform = require( '@stdlib/random/base/uniform' );\nvar mean = require ( '@stdlib/stats/base/mean' );\nvar stdev = require ( '@stdlib/stats/base/stdev' );\nvar parseJSON = require( '@stdlib/utils/parse-json' );\nvar readFile = require( '@stdlib/fs/read-file' );\n\nconst stockPriceCache = {};\nconst distributionParamsCache = {};\nlet stockChartInstance = null; // Store chart instance globally\n\nimport aaplData from './data/AAPL.json';\nimport amznData from './data/AMZN.json';\nimport nflxData from './data/NFLX.json';\nimport googData from './data/GOOG.json';\nimport msftData from './data/META.json';\n\nconst stockData = {\n    AAPL: aaplData,\n    AMZN: amznData,\n    NFLX: nflxData,\n    GOOG: googData,\n    MSFT: msftData,\n\n};\n\nasync function fetchStockPrices(stock) {\n    if (!stockData[stock]) return [];\n\n    // Convert JSON data to the expected format\n    return stockData[stock].map(entry => ({\n        date: new Date(entry.Date),               // Extract Date\n        price: parseFloat(entry.Close)  // Extract and convert Close price\n    }));\n}\n\nfunction calculateLogReturnParams(prices) {\n    const logReturns = [];\n    for (let i = 1; i < prices.length; i++) {\n        const r = Math.log(prices[i].price / prices[i - 1].price);\n        logReturns.push(r);\n    }\n\n    const n = logReturns.length;\n    const mu = mean(n, logReturns, 1);\n    const sigma = stdev(n, 1, logReturns, 1);\n    return { mean: mu, stdev: sigma };\n}\n\nasync function simulateFuturePrices(stock, distribution) {\n    const historical = await fetchStockPrices(stock);\n    if (historical.length === 0) return;\n\n    if (!distributionParamsCache[stock]) {\n        distributionParamsCache[stock] = calculateLogReturnParams(historical);\n    }\n    \n    const params = distributionParamsCache[stock];\n\n    let lastPrice = historical[historical.length - 1].price;\n    const lastDate = new Date(historical[historical.length - 1].date);\n    let simulatedPrices = [];\n    for (let i = 1; i <= 30; i++) {\n        let simulatedReturn = 0;\n        if (distribution === 'normal') {\n            simulatedReturn  = normal(params.mean, params.stdev);\n        } else if (distribution === 'uniform') {\n            simulatedReturn  = uniform(params.mean - params.stdev, params.mean + params.stdev);\n        }\n        lastPrice *= Math.exp(simulatedReturn);\n        \n        let futureDate = new Date(lastDate);\n        futureDate.setDate(futureDate.getDate() + i);\n        simulatedPrices.push({ date: futureDate.toISOString().split('T')[0], price: lastPrice });\n    }\n    plotStockData(historical, simulatedPrices);\n}\n\nwindow.runSimulation = async function() {\n    const stock = document.getElementById(\"stock\").value;\n    const distribution = document.getElementById(\"distribution\").value;\n    await simulateFuturePrices(stock, distribution);\n};\n\nfunction plotStockData(historical, future) {\n    const ctx = document.getElementById('stockChart').getContext('2d');\n    const dates = [...historical.map(p => p.date), ...future.map(p => p.date)];\n    const datasets = [\n        { label: 'Historical', data: [...historical.map(p => p.price), ...future.map(p => undefined)] },\n        { label: 'Simulated Future', data: [...historical.map(p => undefined), ...future.map(p => p.price)] }\n    ];\n    // 🔥 Destroy the existing chart if it exists\n    if (stockChartInstance) {\n        stockChartInstance.destroy();\n    }\n\n    // Create a new chart\n    stockChartInstance = new Chart(ctx, {\n        type: 'line',\n        data: {\n            labels: dates,\n            datasets: datasets\n        },\n        options: {\n            scales: {\n                x: { type: 'time', time: { unit: 'day' } },\n                y: { title: { display: true, text: 'Price (USD)' } }\n            }\n        }\n    });\n}\n","[\n    {\n        \"Date\":\"01\\/02\\/2025\",\n        \"Close\":243.85\n    },\n    {\n        \"Date\":\"01\\/03\\/2025\",\n        \"Close\":243.36\n    },\n    {\n        \"Date\":\"01\\/06\\/2025\",\n        \"Close\":245.0\n    },\n    {\n        \"Date\":\"01\\/07\\/2025\",\n        \"Close\":242.21\n    },\n    {\n        \"Date\":\"01\\/08\\/2025\",\n        \"Close\":242.7\n    },\n    {\n        \"Date\":\"01\\/10\\/2025\",\n        \"Close\":236.85\n    },\n    {\n        \"Date\":\"01\\/13\\/2025\",\n        \"Close\":234.4\n    },\n    {\n        \"Date\":\"01\\/14\\/2025\",\n        \"Close\":233.28\n    },\n    {\n        \"Date\":\"01\\/15\\/2025\",\n        \"Close\":237.87\n    },\n    {\n        \"Date\":\"01\\/16\\/2025\",\n        \"Close\":228.26\n    },\n    {\n        \"Date\":\"01\\/17\\/2025\",\n        \"Close\":229.98\n    },\n    {\n        \"Date\":\"01\\/21\\/2025\",\n        \"Close\":222.64\n    },\n    {\n        \"Date\":\"01\\/22\\/2025\",\n        \"Close\":223.83\n    },\n    {\n        \"Date\":\"01\\/23\\/2025\",\n        \"Close\":223.66\n    },\n    {\n        \"Date\":\"01\\/24\\/2025\",\n        \"Close\":222.78\n    },\n    {\n        \"Date\":\"01\\/27\\/2025\",\n        \"Close\":229.86\n    },\n    {\n        \"Date\":\"01\\/28\\/2025\",\n        \"Close\":238.26\n    },\n    {\n        \"Date\":\"01\\/29\\/2025\",\n        \"Close\":239.36\n    },\n    {\n        \"Date\":\"01\\/30\\/2025\",\n        \"Close\":237.59\n    },\n    {\n        \"Date\":\"01\\/31\\/2025\",\n        \"Close\":236.0\n    },\n    {\n        \"Date\":\"02\\/03\\/2025\",\n        \"Close\":228.01\n    },\n    {\n        \"Date\":\"02\\/04\\/2025\",\n        \"Close\":232.8\n    },\n    {\n        \"Date\":\"02\\/05\\/2025\",\n        \"Close\":232.47\n    },\n    {\n        \"Date\":\"02\\/06\\/2025\",\n        \"Close\":233.22\n    },\n    {\n        \"Date\":\"02\\/07\\/2025\",\n        \"Close\":227.63\n    },\n    {\n        \"Date\":\"02\\/10\\/2025\",\n        \"Close\":227.65\n    },\n    {\n        \"Date\":\"02\\/11\\/2025\",\n        \"Close\":232.62\n    },\n    {\n        \"Date\":\"02\\/12\\/2025\",\n        \"Close\":236.87\n    },\n    {\n        \"Date\":\"02\\/13\\/2025\",\n        \"Close\":241.53\n    },\n    {\n        \"Date\":\"02\\/14\\/2025\",\n        \"Close\":244.6\n    },\n    {\n        \"Date\":\"02\\/18\\/2025\",\n        \"Close\":244.47\n    },\n    {\n        \"Date\":\"02\\/19\\/2025\",\n        \"Close\":244.87\n    },\n    {\n        \"Date\":\"02\\/20\\/2025\",\n        \"Close\":245.83\n    },\n    {\n        \"Date\":\"02\\/21\\/2025\",\n        \"Close\":245.55\n    },\n    {\n        \"Date\":\"02\\/24\\/2025\",\n        \"Close\":247.1\n    },\n    {\n        \"Date\":\"02\\/25\\/2025\",\n        \"Close\":247.04\n    },\n    {\n        \"Date\":\"02\\/26\\/2025\",\n        \"Close\":240.36\n    },\n    {\n        \"Date\":\"02\\/27\\/2025\",\n        \"Close\":237.3\n    },\n    {\n        \"Date\":\"02\\/28\\/2025\",\n        \"Close\":241.84\n    },\n    {\n        \"Date\":\"03\\/03\\/2025\",\n        \"Close\":238.03\n    },\n    {\n        \"Date\":\"03\\/04\\/2025\",\n        \"Close\":235.93\n    },\n    {\n        \"Date\":\"03\\/05\\/2025\",\n        \"Close\":235.74\n    },\n    {\n        \"Date\":\"03\\/06\\/2025\",\n        \"Close\":235.33\n    },\n    {\n        \"Date\":\"03\\/07\\/2025\",\n        \"Close\":239.07\n    },\n    {\n        \"Date\":\"03\\/10\\/2025\",\n        \"Close\":227.48\n    },\n    {\n        \"Date\":\"03\\/11\\/2025\",\n        \"Close\":220.84\n    },\n    {\n        \"Date\":\"03\\/12\\/2025\",\n        \"Close\":216.98\n    },\n    {\n        \"Date\":\"03\\/13\\/2025\",\n        \"Close\":209.68\n    },\n    {\n        \"Date\":\"03\\/14\\/2025\",\n        \"Close\":213.49\n    },\n    {\n        \"Date\":\"03\\/17\\/2025\",\n        \"Close\":214.0\n    },\n    {\n        \"Date\":\"03\\/18\\/2025\",\n        \"Close\":212.69\n    },\n    {\n        \"Date\":\"03\\/19\\/2025\",\n        \"Close\":215.24\n    },\n    {\n        \"Date\":\"03\\/20\\/2025\",\n        \"Close\":214.1\n    },\n    {\n        \"Date\":\"03\\/21\\/2025\",\n        \"Close\":218.27\n    },\n    {\n        \"Date\":\"03\\/24\\/2025\",\n        \"Close\":220.73\n    },\n    {\n        \"Date\":\"03\\/25\\/2025\",\n        \"Close\":223.75\n    },\n    {\n        \"Date\":\"03\\/26\\/2025\",\n        \"Close\":221.53\n    },\n    {\n        \"Date\":\"03\\/27\\/2025\",\n        \"Close\":223.85\n    }\n]","[\n    {\n        \"Date\":\"01\\/02\\/2025\",\n        \"Close\":220.22\n    },\n    {\n        \"Date\":\"01\\/03\\/2025\",\n        \"Close\":224.19\n    },\n    {\n        \"Date\":\"01\\/06\\/2025\",\n        \"Close\":227.61\n    },\n    {\n        \"Date\":\"01\\/07\\/2025\",\n        \"Close\":222.11\n    },\n    {\n        \"Date\":\"01\\/08\\/2025\",\n        \"Close\":222.13\n    },\n    {\n        \"Date\":\"01\\/10\\/2025\",\n        \"Close\":218.94\n    },\n    {\n        \"Date\":\"01\\/13\\/2025\",\n        \"Close\":218.46\n    },\n    {\n        \"Date\":\"01\\/14\\/2025\",\n        \"Close\":217.76\n    },\n    {\n        \"Date\":\"01\\/15\\/2025\",\n        \"Close\":223.35\n    },\n    {\n        \"Date\":\"01\\/16\\/2025\",\n        \"Close\":220.66\n    },\n    {\n        \"Date\":\"01\\/17\\/2025\",\n        \"Close\":225.94\n    },\n    {\n        \"Date\":\"01\\/21\\/2025\",\n        \"Close\":230.71\n    },\n    {\n        \"Date\":\"01\\/22\\/2025\",\n        \"Close\":235.01\n    },\n    {\n        \"Date\":\"01\\/23\\/2025\",\n        \"Close\":235.42\n    },\n    {\n        \"Date\":\"01\\/24\\/2025\",\n        \"Close\":234.85\n    },\n    {\n        \"Date\":\"01\\/27\\/2025\",\n        \"Close\":235.42\n    },\n    {\n        \"Date\":\"01\\/28\\/2025\",\n        \"Close\":238.15\n    },\n    {\n        \"Date\":\"01\\/29\\/2025\",\n        \"Close\":237.07\n    },\n    {\n        \"Date\":\"01\\/30\\/2025\",\n        \"Close\":234.64\n    },\n    {\n        \"Date\":\"01\\/31\\/2025\",\n        \"Close\":237.68\n    },\n    {\n        \"Date\":\"02\\/03\\/2025\",\n        \"Close\":237.42\n    },\n    {\n        \"Date\":\"02\\/04\\/2025\",\n        \"Close\":242.06\n    },\n    {\n        \"Date\":\"02\\/05\\/2025\",\n        \"Close\":236.17\n    },\n    {\n        \"Date\":\"02\\/06\\/2025\",\n        \"Close\":238.83\n    },\n    {\n        \"Date\":\"02\\/07\\/2025\",\n        \"Close\":229.15\n    },\n    {\n        \"Date\":\"02\\/10\\/2025\",\n        \"Close\":233.14\n    },\n    {\n        \"Date\":\"02\\/11\\/2025\",\n        \"Close\":232.76\n    },\n    {\n        \"Date\":\"02\\/12\\/2025\",\n        \"Close\":228.93\n    },\n    {\n        \"Date\":\"02\\/13\\/2025\",\n        \"Close\":230.37\n    },\n    {\n        \"Date\":\"02\\/14\\/2025\",\n        \"Close\":228.68\n    },\n    {\n        \"Date\":\"02\\/18\\/2025\",\n        \"Close\":226.65\n    },\n    {\n        \"Date\":\"02\\/19\\/2025\",\n        \"Close\":226.63\n    },\n    {\n        \"Date\":\"02\\/20\\/2025\",\n        \"Close\":222.88\n    },\n    {\n        \"Date\":\"02\\/21\\/2025\",\n        \"Close\":216.58\n    },\n    {\n        \"Date\":\"02\\/24\\/2025\",\n        \"Close\":212.71\n    },\n    {\n        \"Date\":\"02\\/25\\/2025\",\n        \"Close\":212.8\n    },\n    {\n        \"Date\":\"02\\/26\\/2025\",\n        \"Close\":214.35\n    },\n    {\n        \"Date\":\"02\\/27\\/2025\",\n        \"Close\":208.74\n    },\n    {\n        \"Date\":\"02\\/28\\/2025\",\n        \"Close\":212.28\n    },\n    {\n        \"Date\":\"03\\/03\\/2025\",\n        \"Close\":205.02\n    },\n    {\n        \"Date\":\"03\\/04\\/2025\",\n        \"Close\":203.8\n    },\n    {\n        \"Date\":\"03\\/05\\/2025\",\n        \"Close\":208.36\n    },\n    {\n        \"Date\":\"03\\/06\\/2025\",\n        \"Close\":200.7\n    },\n    {\n        \"Date\":\"03\\/07\\/2025\",\n        \"Close\":199.25\n    },\n    {\n        \"Date\":\"03\\/10\\/2025\",\n        \"Close\":194.54\n    },\n    {\n        \"Date\":\"03\\/11\\/2025\",\n        \"Close\":196.59\n    },\n    {\n        \"Date\":\"03\\/12\\/2025\",\n        \"Close\":198.89\n    },\n    {\n        \"Date\":\"03\\/13\\/2025\",\n        \"Close\":193.89\n    },\n    {\n        \"Date\":\"03\\/14\\/2025\",\n        \"Close\":197.95\n    },\n    {\n        \"Date\":\"03\\/17\\/2025\",\n        \"Close\":195.74\n    },\n    {\n        \"Date\":\"03\\/18\\/2025\",\n        \"Close\":192.82\n    },\n    {\n        \"Date\":\"03\\/19\\/2025\",\n        \"Close\":195.54\n    },\n    {\n        \"Date\":\"03\\/20\\/2025\",\n        \"Close\":194.95\n    },\n    {\n        \"Date\":\"03\\/21\\/2025\",\n        \"Close\":196.21\n    },\n    {\n        \"Date\":\"03\\/24\\/2025\",\n        \"Close\":203.26\n    },\n    {\n        \"Date\":\"03\\/25\\/2025\",\n        \"Close\":205.71\n    },\n    {\n        \"Date\":\"03\\/26\\/2025\",\n        \"Close\":201.13\n    },\n    {\n        \"Date\":\"03\\/27\\/2025\",\n        \"Close\":201.36\n    }\n]","[\n    {\n        \"Date\":\"01\\/02\\/2025\",\n        \"Close\":886.73\n    },\n    {\n        \"Date\":\"01\\/03\\/2025\",\n        \"Close\":881.05\n    },\n    {\n        \"Date\":\"01\\/06\\/2025\",\n        \"Close\":881.79\n    },\n    {\n        \"Date\":\"01\\/07\\/2025\",\n        \"Close\":879.19\n    },\n    {\n        \"Date\":\"01\\/08\\/2025\",\n        \"Close\":875.0\n    },\n    {\n        \"Date\":\"01\\/10\\/2025\",\n        \"Close\":837.69\n    },\n    {\n        \"Date\":\"01\\/13\\/2025\",\n        \"Close\":840.29\n    },\n    {\n        \"Date\":\"01\\/14\\/2025\",\n        \"Close\":828.4\n    },\n    {\n        \"Date\":\"01\\/15\\/2025\",\n        \"Close\":848.26\n    },\n    {\n        \"Date\":\"01\\/16\\/2025\",\n        \"Close\":842.37\n    },\n    {\n        \"Date\":\"01\\/17\\/2025\",\n        \"Close\":858.1\n    },\n    {\n        \"Date\":\"01\\/21\\/2025\",\n        \"Close\":869.68\n    },\n    {\n        \"Date\":\"01\\/22\\/2025\",\n        \"Close\":953.99\n    },\n    {\n        \"Date\":\"01\\/23\\/2025\",\n        \"Close\":984.86\n    },\n    {\n        \"Date\":\"01\\/24\\/2025\",\n        \"Close\":977.59\n    },\n    {\n        \"Date\":\"01\\/27\\/2025\",\n        \"Close\":971.89\n    },\n    {\n        \"Date\":\"01\\/28\\/2025\",\n        \"Close\":971.83\n    },\n    {\n        \"Date\":\"01\\/29\\/2025\",\n        \"Close\":978.15\n    },\n    {\n        \"Date\":\"01\\/30\\/2025\",\n        \"Close\":973.24\n    },\n    {\n        \"Date\":\"01\\/31\\/2025\",\n        \"Close\":976.76\n    },\n    {\n        \"Date\":\"02\\/03\\/2025\",\n        \"Close\":978.94\n    },\n    {\n        \"Date\":\"02\\/04\\/2025\",\n        \"Close\":994.87\n    },\n    {\n        \"Date\":\"02\\/05\\/2025\",\n        \"Close\":1011.11\n    },\n    {\n        \"Date\":\"02\\/06\\/2025\",\n        \"Close\":1015.68\n    },\n    {\n        \"Date\":\"02\\/07\\/2025\",\n        \"Close\":1013.93\n    },\n    {\n        \"Date\":\"02\\/10\\/2025\",\n        \"Close\":1027.6\n    },\n    {\n        \"Date\":\"02\\/11\\/2025\",\n        \"Close\":1008.08\n    },\n    {\n        \"Date\":\"02\\/12\\/2025\",\n        \"Close\":1027.31\n    },\n    {\n        \"Date\":\"02\\/13\\/2025\",\n        \"Close\":1043.69\n    },\n    {\n        \"Date\":\"02\\/14\\/2025\",\n        \"Close\":1058.6\n    },\n    {\n        \"Date\":\"02\\/18\\/2025\",\n        \"Close\":1035.85\n    },\n    {\n        \"Date\":\"02\\/19\\/2025\",\n        \"Close\":1043.33\n    },\n    {\n        \"Date\":\"02\\/20\\/2025\",\n        \"Close\":1024.54\n    },\n    {\n        \"Date\":\"02\\/21\\/2025\",\n        \"Close\":1003.15\n    },\n    {\n        \"Date\":\"02\\/24\\/2025\",\n        \"Close\":988.47\n    },\n    {\n        \"Date\":\"02\\/25\\/2025\",\n        \"Close\":977.24\n    },\n    {\n        \"Date\":\"02\\/26\\/2025\",\n        \"Close\":990.06\n    },\n    {\n        \"Date\":\"02\\/27\\/2025\",\n        \"Close\":963.07\n    },\n    {\n        \"Date\":\"02\\/28\\/2025\",\n        \"Close\":980.56\n    },\n    {\n        \"Date\":\"03\\/03\\/2025\",\n        \"Close\":973.7\n    },\n    {\n        \"Date\":\"03\\/04\\/2025\",\n        \"Close\":972.58\n    },\n    {\n        \"Date\":\"03\\/05\\/2025\",\n        \"Close\":990.92\n    },\n    {\n        \"Date\":\"03\\/06\\/2025\",\n        \"Close\":906.36\n    },\n    {\n        \"Date\":\"03\\/07\\/2025\",\n        \"Close\":891.11\n    },\n    {\n        \"Date\":\"03\\/10\\/2025\",\n        \"Close\":866.68\n    },\n    {\n        \"Date\":\"03\\/11\\/2025\",\n        \"Close\":895.1\n    },\n    {\n        \"Date\":\"03\\/12\\/2025\",\n        \"Close\":919.68\n    },\n    {\n        \"Date\":\"03\\/13\\/2025\",\n        \"Close\":890.17\n    },\n    {\n        \"Date\":\"03\\/14\\/2025\",\n        \"Close\":918.0\n    },\n    {\n        \"Date\":\"03\\/17\\/2025\",\n        \"Close\":950.02\n    },\n    {\n        \"Date\":\"03\\/18\\/2025\",\n        \"Close\":929.98\n    },\n    {\n        \"Date\":\"03\\/19\\/2025\",\n        \"Close\":959.49\n    },\n    {\n        \"Date\":\"03\\/20\\/2025\",\n        \"Close\":950.84\n    },\n    {\n        \"Date\":\"03\\/21\\/2025\",\n        \"Close\":960.29\n    },\n    {\n        \"Date\":\"03\\/24\\/2025\",\n        \"Close\":971.99\n    },\n    {\n        \"Date\":\"03\\/25\\/2025\",\n        \"Close\":997.28\n    },\n    {\n        \"Date\":\"03\\/26\\/2025\",\n        \"Close\":970.65\n    },\n    {\n        \"Date\":\"03\\/27\\/2025\",\n        \"Close\":976.72\n    }\n]","[\n    {\n        \"Date\":\"01\\/02\\/2025\",\n        \"Close\":190.63\n    },\n    {\n        \"Date\":\"01\\/03\\/2025\",\n        \"Close\":193.13\n    },\n    {\n        \"Date\":\"01\\/06\\/2025\",\n        \"Close\":197.96\n    },\n    {\n        \"Date\":\"01\\/07\\/2025\",\n        \"Close\":196.71\n    },\n    {\n        \"Date\":\"01\\/08\\/2025\",\n        \"Close\":195.39\n    },\n    {\n        \"Date\":\"01\\/10\\/2025\",\n        \"Close\":193.17\n    },\n    {\n        \"Date\":\"01\\/13\\/2025\",\n        \"Close\":192.29\n    },\n    {\n        \"Date\":\"01\\/14\\/2025\",\n        \"Close\":191.05\n    },\n    {\n        \"Date\":\"01\\/15\\/2025\",\n        \"Close\":196.98\n    },\n    {\n        \"Date\":\"01\\/16\\/2025\",\n        \"Close\":194.41\n    },\n    {\n        \"Date\":\"01\\/17\\/2025\",\n        \"Close\":197.55\n    },\n    {\n        \"Date\":\"01\\/21\\/2025\",\n        \"Close\":199.63\n    },\n    {\n        \"Date\":\"01\\/22\\/2025\",\n        \"Close\":200.03\n    },\n    {\n        \"Date\":\"01\\/23\\/2025\",\n        \"Close\":199.58\n    },\n    {\n        \"Date\":\"01\\/24\\/2025\",\n        \"Close\":201.9\n    },\n    {\n        \"Date\":\"01\\/27\\/2025\",\n        \"Close\":193.77\n    },\n    {\n        \"Date\":\"01\\/28\\/2025\",\n        \"Close\":197.07\n    },\n    {\n        \"Date\":\"01\\/29\\/2025\",\n        \"Close\":197.18\n    },\n    {\n        \"Date\":\"01\\/30\\/2025\",\n        \"Close\":202.63\n    },\n    {\n        \"Date\":\"01\\/31\\/2025\",\n        \"Close\":205.6\n    },\n    {\n        \"Date\":\"02\\/03\\/2025\",\n        \"Close\":202.64\n    },\n    {\n        \"Date\":\"02\\/04\\/2025\",\n        \"Close\":207.71\n    },\n    {\n        \"Date\":\"02\\/05\\/2025\",\n        \"Close\":193.3\n    },\n    {\n        \"Date\":\"02\\/06\\/2025\",\n        \"Close\":193.31\n    },\n    {\n        \"Date\":\"02\\/07\\/2025\",\n        \"Close\":187.14\n    },\n    {\n        \"Date\":\"02\\/10\\/2025\",\n        \"Close\":188.2\n    },\n    {\n        \"Date\":\"02\\/11\\/2025\",\n        \"Close\":187.07\n    },\n    {\n        \"Date\":\"02\\/12\\/2025\",\n        \"Close\":185.43\n    },\n    {\n        \"Date\":\"02\\/13\\/2025\",\n        \"Close\":187.88\n    },\n    {\n        \"Date\":\"02\\/14\\/2025\",\n        \"Close\":186.87\n    },\n    {\n        \"Date\":\"02\\/18\\/2025\",\n        \"Close\":185.8\n    },\n    {\n        \"Date\":\"02\\/19\\/2025\",\n        \"Close\":187.13\n    },\n    {\n        \"Date\":\"02\\/20\\/2025\",\n        \"Close\":186.64\n    },\n    {\n        \"Date\":\"02\\/21\\/2025\",\n        \"Close\":181.58\n    },\n    {\n        \"Date\":\"02\\/24\\/2025\",\n        \"Close\":181.19\n    },\n    {\n        \"Date\":\"02\\/25\\/2025\",\n        \"Close\":177.37\n    },\n    {\n        \"Date\":\"02\\/26\\/2025\",\n        \"Close\":174.7\n    },\n    {\n        \"Date\":\"02\\/27\\/2025\",\n        \"Close\":170.21\n    },\n    {\n        \"Date\":\"02\\/28\\/2025\",\n        \"Close\":172.22\n    },\n    {\n        \"Date\":\"03\\/03\\/2025\",\n        \"Close\":168.66\n    },\n    {\n        \"Date\":\"03\\/04\\/2025\",\n        \"Close\":172.61\n    },\n    {\n        \"Date\":\"03\\/05\\/2025\",\n        \"Close\":174.99\n    },\n    {\n        \"Date\":\"03\\/06\\/2025\",\n        \"Close\":174.21\n    },\n    {\n        \"Date\":\"03\\/07\\/2025\",\n        \"Close\":175.75\n    },\n    {\n        \"Date\":\"03\\/10\\/2025\",\n        \"Close\":167.81\n    },\n    {\n        \"Date\":\"03\\/11\\/2025\",\n        \"Close\":165.98\n    },\n    {\n        \"Date\":\"03\\/12\\/2025\",\n        \"Close\":169.0\n    },\n    {\n        \"Date\":\"03\\/13\\/2025\",\n        \"Close\":164.73\n    },\n    {\n        \"Date\":\"03\\/14\\/2025\",\n        \"Close\":167.62\n    },\n    {\n        \"Date\":\"03\\/17\\/2025\",\n        \"Close\":166.57\n    },\n    {\n        \"Date\":\"03\\/18\\/2025\",\n        \"Close\":162.67\n    },\n    {\n        \"Date\":\"03\\/19\\/2025\",\n        \"Close\":166.28\n    },\n    {\n        \"Date\":\"03\\/20\\/2025\",\n        \"Close\":165.05\n    },\n    {\n        \"Date\":\"03\\/21\\/2025\",\n        \"Close\":166.25\n    },\n    {\n        \"Date\":\"03\\/24\\/2025\",\n        \"Close\":169.93\n    },\n    {\n        \"Date\":\"03\\/25\\/2025\",\n        \"Close\":172.79\n    },\n    {\n        \"Date\":\"03\\/26\\/2025\",\n        \"Close\":167.14\n    },\n    {\n        \"Date\":\"03\\/27\\/2025\",\n        \"Close\":164.08\n    }\n]","[\n    {\n        \"Date\":\"01\\/02\\/2025\",\n        \"Close\":599.24\n    },\n    {\n        \"Date\":\"01\\/03\\/2025\",\n        \"Close\":604.63\n    },\n    {\n        \"Date\":\"01\\/06\\/2025\",\n        \"Close\":630.2\n    },\n    {\n        \"Date\":\"01\\/07\\/2025\",\n        \"Close\":617.89\n    },\n    {\n        \"Date\":\"01\\/08\\/2025\",\n        \"Close\":610.72\n    },\n    {\n        \"Date\":\"01\\/10\\/2025\",\n        \"Close\":615.86\n    },\n    {\n        \"Date\":\"01\\/13\\/2025\",\n        \"Close\":608.33\n    },\n    {\n        \"Date\":\"01\\/14\\/2025\",\n        \"Close\":594.25\n    },\n    {\n        \"Date\":\"01\\/15\\/2025\",\n        \"Close\":617.12\n    },\n    {\n        \"Date\":\"01\\/16\\/2025\",\n        \"Close\":611.3\n    },\n    {\n        \"Date\":\"01\\/17\\/2025\",\n        \"Close\":612.77\n    },\n    {\n        \"Date\":\"01\\/21\\/2025\",\n        \"Close\":616.46\n    },\n    {\n        \"Date\":\"01\\/22\\/2025\",\n        \"Close\":623.5\n    },\n    {\n        \"Date\":\"01\\/23\\/2025\",\n        \"Close\":636.45\n    },\n    {\n        \"Date\":\"01\\/24\\/2025\",\n        \"Close\":647.49\n    },\n    {\n        \"Date\":\"01\\/27\\/2025\",\n        \"Close\":659.88\n    },\n    {\n        \"Date\":\"01\\/28\\/2025\",\n        \"Close\":674.33\n    },\n    {\n        \"Date\":\"01\\/29\\/2025\",\n        \"Close\":676.49\n    },\n    {\n        \"Date\":\"01\\/30\\/2025\",\n        \"Close\":687.0\n    },\n    {\n        \"Date\":\"01\\/31\\/2025\",\n        \"Close\":689.18\n    },\n    {\n        \"Date\":\"02\\/03\\/2025\",\n        \"Close\":697.46\n    },\n    {\n        \"Date\":\"02\\/04\\/2025\",\n        \"Close\":704.19\n    },\n    {\n        \"Date\":\"02\\/05\\/2025\",\n        \"Close\":704.87\n    },\n    {\n        \"Date\":\"02\\/06\\/2025\",\n        \"Close\":711.99\n    },\n    {\n        \"Date\":\"02\\/07\\/2025\",\n        \"Close\":714.52\n    },\n    {\n        \"Date\":\"02\\/10\\/2025\",\n        \"Close\":717.4\n    },\n    {\n        \"Date\":\"02\\/11\\/2025\",\n        \"Close\":719.8\n    },\n    {\n        \"Date\":\"02\\/12\\/2025\",\n        \"Close\":725.38\n    },\n    {\n        \"Date\":\"02\\/13\\/2025\",\n        \"Close\":728.56\n    },\n    {\n        \"Date\":\"02\\/14\\/2025\",\n        \"Close\":736.67\n    },\n    {\n        \"Date\":\"02\\/18\\/2025\",\n        \"Close\":716.37\n    },\n    {\n        \"Date\":\"02\\/19\\/2025\",\n        \"Close\":703.77\n    },\n    {\n        \"Date\":\"02\\/20\\/2025\",\n        \"Close\":694.84\n    },\n    {\n        \"Date\":\"02\\/21\\/2025\",\n        \"Close\":683.55\n    },\n    {\n        \"Date\":\"02\\/24\\/2025\",\n        \"Close\":668.13\n    },\n    {\n        \"Date\":\"02\\/25\\/2025\",\n        \"Close\":657.5\n    },\n    {\n        \"Date\":\"02\\/26\\/2025\",\n        \"Close\":673.7\n    },\n    {\n        \"Date\":\"02\\/27\\/2025\",\n        \"Close\":658.24\n    },\n    {\n        \"Date\":\"02\\/28\\/2025\",\n        \"Close\":668.2\n    },\n    {\n        \"Date\":\"03\\/03\\/2025\",\n        \"Close\":655.05\n    },\n    {\n        \"Date\":\"03\\/04\\/2025\",\n        \"Close\":640.0\n    },\n    {\n        \"Date\":\"03\\/05\\/2025\",\n        \"Close\":656.47\n    },\n    {\n        \"Date\":\"03\\/06\\/2025\",\n        \"Close\":627.93\n    },\n    {\n        \"Date\":\"03\\/07\\/2025\",\n        \"Close\":625.66\n    },\n    {\n        \"Date\":\"03\\/10\\/2025\",\n        \"Close\":597.99\n    },\n    {\n        \"Date\":\"03\\/11\\/2025\",\n        \"Close\":605.71\n    },\n    {\n        \"Date\":\"03\\/12\\/2025\",\n        \"Close\":619.56\n    },\n    {\n        \"Date\":\"03\\/13\\/2025\",\n        \"Close\":590.64\n    },\n    {\n        \"Date\":\"03\\/14\\/2025\",\n        \"Close\":607.6\n    },\n    {\n        \"Date\":\"03\\/17\\/2025\",\n        \"Close\":604.9\n    },\n    {\n        \"Date\":\"03\\/18\\/2025\",\n        \"Close\":582.36\n    },\n    {\n        \"Date\":\"03\\/19\\/2025\",\n        \"Close\":584.06\n    },\n    {\n        \"Date\":\"03\\/20\\/2025\",\n        \"Close\":586.0\n    },\n    {\n        \"Date\":\"03\\/21\\/2025\",\n        \"Close\":596.25\n    },\n    {\n        \"Date\":\"03\\/24\\/2025\",\n        \"Close\":618.85\n    },\n    {\n        \"Date\":\"03\\/25\\/2025\",\n        \"Close\":626.31\n    },\n    {\n        \"Date\":\"03\\/26\\/2025\",\n        \"Close\":610.98\n    },\n    {\n        \"Date\":\"03\\/27\\/2025\",\n        \"Close\":602.58\n    }\n]","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Log-normal distributed pseudorandom numbers.\n*\n* @module @stdlib/random/base/lognormal\n*\n* @example\n* var lognormal = require( '@stdlib/random/base/lognormal' );\n*\n* var v = lognormal( 0.0, 1.0 );\n* // returns <number>\n*\n* @example\n* var factory = require( '@stdlib/random/base/lognormal' ).factory;\n* var lognormal = factory( 3.0, 2.0, {\n*     'seed': 297\n* });\n*\n* var v = lognormal();\n* // returns <number>\n*\n* @example\n* var factory = require( '@stdlib/random/base/lognormal' ).factory;\n* var lognormal = factory({\n*     'seed': 297\n* });\n*\n* var v = lognormal( 3.0, 2.0 );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a non-enumerable read-only property.\n*\n* @module @stdlib/utils/define-nonenumerable-read-only-property\n*\n* @example\n* var setNonEnumerableReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils/define-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nvar hasDefinePropertySupport = require( './has_define_property_support.js' );\nvar builtin = require( './builtin.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './define_property.js' );\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Insert supplied variable values into a format string.\n*\n* @module @stdlib/string/format\n*\n* @example\n* var format = require( '@stdlib/string/format' );\n*\n* var out = format( '%s %s!', 'Hello', 'World' );\n* // returns 'Hello World!'\n*\n* out = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar interpolate = require( './../../base/format-interpolate' );\nvar tokenize = require( './../../base/format-tokenize' );\nvar isString = require( './is_string.js' );\n\n\n// MAIN //\n\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\nfunction format( str ) {\n\tvar args;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\targs = [ tokenize( str ) ];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn interpolate.apply( null, args );\n}\n\n\n// EXPORTS //\n\nmodule.exports = format;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate string from a token array by interpolating values.\n*\n* @module @stdlib/string/base/format-interpolate\n*\n* @example\n* var formatInterpolate = require( '@stdlib/string/base/format-interpolate' );\n*\n* var tokens = ['Hello ', { 'specifier': 's' }, '!' ];\n* var out = formatInterpolate( tokens, 'World' );\n* // returns 'Hello World!'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar formatInteger = require( './format_integer.js' );\nvar isString = require( './is_string.js' );\nvar formatDouble = require( './format_double.js' );\nvar spacePad = require( './space_pad.js' );\nvar zeroPad = require( './zero_pad.js' );\n\n\n// VARIABLES //\n\nvar fromCharCode = String.fromCharCode;\nvar isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating whether a value is `NaN`.\n*\n* @private\n* @param {*} value - input value\n* @returns {boolean} boolean indicating whether a value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 4 );\n* // returns false\n*/\nfunction isnan( value ) { // explicitly define a function here instead of `@stdlib/math/base/assert/is-nan` in order to avoid circular dependencies\n\treturn ( value !== value );\n}\n\n/**\n* Initializes token object with properties of supplied format identifier object or default values if not present.\n*\n* @private\n* @param {Object} token - format identifier object\n* @returns {Object} token object\n*/\nfunction initialize( token ) {\n\tvar out = {};\n\tout.specifier = token.specifier;\n\tout.precision = ( token.precision === void 0 ) ? 1 : token.precision;\n\tout.width = token.width;\n\tout.flags = token.flags || '';\n\tout.mapping = token.mapping;\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates string from a token array by interpolating values.\n*\n* @param {Array} tokens - string parts and format identifier objects\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be an array\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var tokens = [ 'beep ', { 'specifier': 's' } ];\n* var out = formatInterpolate( tokens, 'boop' );\n* // returns 'beep boop'\n*/\nfunction formatInterpolate( tokens ) {\n\tvar hasPeriod;\n\tvar flags;\n\tvar token;\n\tvar flag;\n\tvar num;\n\tvar out;\n\tvar pos;\n\tvar i;\n\tvar j;\n\n\tif ( !isArray( tokens ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an array. Value: `' + tokens + '`.' );\n\t}\n\tout = '';\n\tpos = 1;\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isString( token ) ) {\n\t\t\tout += token;\n\t\t} else {\n\t\t\thasPeriod = token.precision !== void 0;\n\t\t\ttoken = initialize( token );\n\t\t\tif ( !token.specifier ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Token is missing `specifier` property. Index: `'+ i +'`. Value: `' + token + '`.' );\n\t\t\t}\n\t\t\tif ( token.mapping ) {\n\t\t\t\tpos = token.mapping;\n\t\t\t}\n\t\t\tflags = token.flags;\n\t\t\tfor ( j = 0; j < flags.length; j++ ) {\n\t\t\t\tflag = flags.charAt( j );\n\t\t\t\tswitch ( flag ) {\n\t\t\t\tcase ' ':\n\t\t\t\t\ttoken.sign = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+':\n\t\t\t\t\ttoken.sign = '+';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '0':\n\t\t\t\t\ttoken.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.\n\t\t\t\t\tbreak;\n\t\t\t\tcase '#':\n\t\t\t\t\ttoken.alternate = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'invalid flag: ' + flag );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( token.width === '*' ) {\n\t\t\t\ttoken.width = parseInt( arguments[ pos ], 10 );\n\t\t\t\tpos += 1;\n\t\t\t\tif ( isnan( token.width ) ) {\n\t\t\t\t\tthrow new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );\n\t\t\t\t}\n\t\t\t\tif ( token.width < 0 ) {\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.width = -token.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasPeriod ) {\n\t\t\t\tif ( token.precision === '*' ) {\n\t\t\t\t\ttoken.precision = parseInt( arguments[ pos ], 10 );\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tif ( isnan( token.precision ) ) {\n\t\t\t\t\t\tthrow new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );\n\t\t\t\t\t}\n\t\t\t\t\tif ( token.precision < 0 ) {\n\t\t\t\t\t\ttoken.precision = 1;\n\t\t\t\t\t\thasPeriod = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoken.arg = arguments[ pos ];\n\t\t\tswitch ( token.specifier ) {\n\t\t\tcase 'b':\n\t\t\tcase 'o':\n\t\t\tcase 'x':\n\t\t\tcase 'X':\n\t\t\tcase 'd':\n\t\t\tcase 'i':\n\t\t\tcase 'u':\n\t\t\t\t// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)\n\t\t\t\tif ( hasPeriod ) {\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatInteger( token );\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\t// Case: %s (string)\n\t\t\t\ttoken.maxWidth = ( hasPeriod ) ? token.precision : -1;\n\t\t\t\ttoken.arg = String( token.arg );\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\t// Case: %c (character)\n\t\t\t\tif ( !isnan( token.arg ) ) {\n\t\t\t\t\tnum = parseInt( token.arg, 10 );\n\t\t\t\t\tif ( num < 0 || num > 127 ) {\n\t\t\t\t\t\tthrow new Error( 'invalid character code. Value: ' + token.arg );\n\t\t\t\t\t}\n\t\t\t\t\ttoken.arg = ( isnan( num ) ) ? String( token.arg ) : fromCharCode( num ); // eslint-disable-line max-len\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'E':\n\t\t\tcase 'f':\n\t\t\tcase 'F':\n\t\t\tcase 'g':\n\t\t\tcase 'G':\n\t\t\t\t// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)\n\t\t\t\tif ( !hasPeriod ) {\n\t\t\t\t\ttoken.precision = 6;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatDouble( token );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'invalid specifier: ' + token.specifier );\n\t\t\t}\n\t\t\t// Fit argument into field width...\n\t\t\tif ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {\n\t\t\t\ttoken.arg = token.arg.substring( 0, token.maxWidth );\n\t\t\t}\n\t\t\tif ( token.padZeros ) {\n\t\t\t\ttoken.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len\n\t\t\t} else if ( token.width ) {\n\t\t\t\ttoken.arg = spacePad( token.arg, token.width, token.padRight );\n\t\t\t}\n\t\t\tout += token.arg || '';\n\t\t\tpos += 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatInterpolate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './is_number.js' );\nvar zeroPad = require( './zero_pad.js' );\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as an integer.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid integer\n* @returns {string} formatted token argument\n*/\nfunction formatInteger( token ) {\n\tvar base;\n\tvar out;\n\tvar i;\n\n\tswitch ( token.specifier ) {\n\tcase 'b':\n\t\t// Case: %b (binary)\n\t\tbase = 2;\n\t\tbreak;\n\tcase 'o':\n\t\t// Case: %o (octal)\n\t\tbase = 8;\n\t\tbreak;\n\tcase 'x':\n\tcase 'X':\n\t\t// Case: %x, %X (hexadecimal)\n\t\tbase = 16;\n\t\tbreak;\n\tcase 'd':\n\tcase 'i':\n\tcase 'u':\n\tdefault:\n\t\t// Case: %d, %i, %u (decimal)\n\t\tbase = 10;\n\t\tbreak;\n\t}\n\tout = token.arg;\n\ti = parseInt( out, 10 );\n\tif ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( out ) ) {\n\t\t\tthrow new Error( 'invalid integer. Value: ' + out );\n\t\t}\n\t\ti = 0;\n\t}\n\tif ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {\n\t\ti = 0xffffffff + i + 1;\n\t}\n\tif ( i < 0 ) {\n\t\tout = ( -i ).toString( base );\n\t\tif ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tout = '-' + out;\n\t} else {\n\t\tout = i.toString( base );\n\t\tif ( !i && !token.precision ) {\n\t\t\tout = '';\n\t\t} else if ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tif ( token.sign ) {\n\t\t\tout = token.sign + out;\n\t\t}\n\t}\n\tif ( base === 16 ) {\n\t\tif ( token.alternate ) {\n\t\t\tout = '0x' + out;\n\t\t}\n\t\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\t\tuppercase.call( out ) :\n\t\t\tlowercase.call( out );\n\t}\n\tif ( base === 8 ) {\n\t\tif ( token.alternate && out.charAt( 0 ) !== '0' ) {\n\t\t\tout = '0' + out;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Tests if a string starts with a minus sign (`-`).\n*\n* @private\n* @param {string} str - input string\n* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)\n*/\nfunction startsWithMinus( str ) {\n\treturn str[ 0 ] === '-';\n}\n\n/**\n* Returns a string of `n` zeros.\n*\n* @private\n* @param {number} n - number of zeros\n* @returns {string} string of zeros\n*/\nfunction zeros( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += '0';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with zeros to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction zeroPad( str, width, right ) {\n\tvar negative = false;\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tif ( startsWithMinus( str ) ) {\n\t\tnegative = true;\n\t\tstr = str.substr( 1 );\n\t}\n\tstr = ( right ) ?\n\t\tstr + zeros( pad ) :\n\t\tzeros( pad ) + str;\n\tif ( negative ) {\n\t\tstr = '-' + str;\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = zeroPad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './is_number.js' );\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\nvar replace = String.prototype.replace;\n\n\n// VARIABLES //\n\nvar RE_EXP_POS_DIGITS = /e\\+(\\d)$/;\nvar RE_EXP_NEG_DIGITS = /e-(\\d)$/;\nvar RE_ONLY_DIGITS = /^(\\d+)$/;\nvar RE_DIGITS_BEFORE_EXP = /^(\\d+)e/;\nvar RE_TRAILING_PERIOD_ZERO = /\\.0$/;\nvar RE_PERIOD_ZERO_EXP = /\\.0*e/;\nvar RE_ZERO_BEFORE_EXP = /(\\..*[^0])0*e/;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as a floating-point number.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid floating-point number\n* @returns {string} formatted token argument\n*/\nfunction formatDouble( token ) {\n\tvar digits;\n\tvar out;\n\tvar f = parseFloat( token.arg );\n\tif ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( token.arg ) ) {\n\t\t\tthrow new Error( 'invalid floating-point number. Value: ' + out );\n\t\t}\n\t\t// Case: NaN, Infinity, or -Infinity\n\t\tf = token.arg;\n\t}\n\tswitch ( token.specifier ) {\n\tcase 'e':\n\tcase 'E':\n\t\tout = f.toExponential( token.precision );\n\t\tbreak;\n\tcase 'f':\n\tcase 'F':\n\t\tout = f.toFixed( token.precision );\n\t\tbreak;\n\tcase 'g':\n\tcase 'G':\n\t\tif ( abs( f ) < 0.0001 ) {\n\t\t\tdigits = token.precision;\n\t\t\tif ( digits > 0 ) {\n\t\t\t\tdigits -= 1;\n\t\t\t}\n\t\t\tout = f.toExponential( digits );\n\t\t} else {\n\t\t\tout = f.toPrecision( token.precision );\n\t\t}\n\t\tif ( !token.alternate ) {\n\t\t\tout = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );\n\t\t\tout = replace.call( out, RE_PERIOD_ZERO_EXP, 'e' );\n\t\t\tout = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( 'invalid double notation. Value: ' + token.specifier );\n\t}\n\tout = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );\n\tout = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );\n\tif ( token.alternate ) {\n\t\tout = replace.call( out, RE_ONLY_DIGITS, '$1.' );\n\t\tout = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );\n\t}\n\tif ( f >= 0 && token.sign ) {\n\t\tout = token.sign + out;\n\t}\n\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\tuppercase.call( out ) :\n\t\tlowercase.call( out );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatDouble;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns `n` spaces.\n*\n* @private\n* @param {number} n - number of spaces\n* @returns {string} string of spaces\n*/\nfunction spaces( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += ' ';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with spaces to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction spacePad( str, width, right ) {\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tstr = ( right ) ?\n\t\tstr + spaces( pad ) :\n\t\tspaces( pad ) + str;\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = spacePad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tokenize a string into an array of string parts and format identifier objects.\n*\n* @module @stdlib/string/base/format-tokenize\n*\n* @example\n* var formatTokenize = require( '@stdlib/string/base/format-tokenize' );\n*\n* var str = 'Hello %s!';\n* var tokens = formatTokenize( str );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar RE = /%(?:([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%A-Za-z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Parses a delimiter.\n*\n* @private\n* @param {Array} match - regular expression match\n* @returns {Object} delimiter token object\n*/\nfunction parse( match ) {\n\tvar token = {\n\t\t'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,\n\t\t'flags': match[ 2 ],\n\t\t'width': match[ 3 ],\n\t\t'precision': match[ 5 ],\n\t\t'specifier': match[ 6 ]\n\t};\n\tif ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {\n\t\ttoken.precision = '1';\n\t}\n\treturn token;\n}\n\n\n// MAIN //\n\n/**\n* Tokenizes a string into an array of string parts and format identifier objects.\n*\n* @param {string} str - input string\n* @returns {Array} tokens\n*\n* @example\n* var tokens = formatTokenize( 'Hello %s!' );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\nfunction formatTokenize( str ) {\n\tvar content;\n\tvar tokens;\n\tvar match;\n\tvar prev;\n\n\ttokens = [];\n\tprev = 0;\n\tmatch = RE.exec( str );\n\twhile ( match ) {\n\t\tcontent = str.slice( prev, RE.lastIndex - match[ 0 ].length );\n\t\tif ( content.length ) {\n\t\t\ttokens.push( content );\n\t\t}\n\t\ttokens.push( parse( match ) );\n\t\tprev = RE.lastIndex;\n\t\tmatch = RE.exec( str );\n\t}\n\tcontent = str.slice( prev );\n\tif ( content.length ) {\n\t\ttokens.push( content );\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatTokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\n/**\n* Returns a log-normally distributed pseudorandom number with parameters `mu` and `sigma`.\n*\n* @name lognormal\n* @type {PRNG}\n* @param {number} mu - location parameter\n* @param {PositiveNumber} sigma - scale parameter\n* @returns {PositiveNumber} pseudorandom number\n*\n* @example\n* var v = lognormal( -2.0, 4.0 );\n* // returns <number>\n*\n* @example\n* var v = lognormal( 0.0, -1.0 );\n* // returns NaN\n*/\nvar lognormal = factory();\n\n\n// EXPORTS //\n\nmodule.exports = lognormal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar setReadWriteAccessor = require( '@stdlib/utils/define-nonenumerable-read-write-accessor' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar noop = require( '@stdlib/utils/noop' );\nvar randn = require( './../../../base/improved-ziggurat' ).factory;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar typedarray2json = require( '@stdlib/array/to-json' );\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\nvar lognormal0 = require( './lognormal.js' );\n\n\n// MAIN //\n\n/**\n* Returns a pseudorandom number generator for generating random numbers from a lognormal distribution.\n*\n* @param {number} [mu] - location parameter\n* @param {PositiveNumber} [sigma] - scale parameter\n* @param {Options} [options] - function options\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} `mu` must be a number\n* @throws {TypeError} `sigma` must be a positive number\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {PRNG} pseudorandom number generator\n*\n* @example\n* var lognormal = factory( 0.0, 1.0 );\n*\n* var v = lognormal();\n* // returns <number>\n*\n* @example\n* var lognormal = factory( -3.0, 0.5, {\n*     'seed': 297\n* });\n* var v = lognormal();\n* // returns <number>\n*/\nfunction factory() {\n\tvar sigma;\n\tvar rnorm;\n\tvar opts;\n\tvar rand;\n\tvar prng;\n\tvar err;\n\tvar mu;\n\n\tif ( arguments.length === 0 ) {\n\t\trnorm = randn();\n\t} else if ( arguments.length === 1 ) {\n\t\topts = arguments[ 0 ];\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'prng' ) ) {\n\t\t\tif ( !isFunction( opts.prng ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', opts.prng ) );\n\t\t\t}\n\t\t\trnorm = randn({\n\t\t\t\t'prng': opts.prng\n\t\t\t});\n\t\t} else {\n\t\t\trnorm = randn( opts );\n\t\t}\n\t} else {\n\t\tmu = arguments[ 0 ];\n\t\tsigma = arguments[ 1 ];\n\t\terr = validate( mu, sigma );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( arguments.length > 2 ) {\n\t\t\topts = arguments[ 2 ];\n\t\t\tif ( !isObject( opts ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t\t\t}\n\t\t\tif ( hasOwnProp( opts, 'prng' ) ) {\n\t\t\t\tif ( !isFunction( opts.prng ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', opts.prng ) );\n\t\t\t\t}\n\t\t\t\trnorm = randn({\n\t\t\t\t\t'prng': opts.prng\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\trnorm = randn( opts );\n\t\t\t}\n\t\t} else {\n\t\t\trnorm = randn();\n\t\t}\n\t}\n\tif ( mu === void 0 ) {\n\t\tprng = lognormal2;\n\t} else {\n\t\tprng = lognormal1;\n\t}\n\trand = rnorm.PRNG;\n\n\tsetReadOnly( prng, 'NAME', 'lognormal' );\n\n\t// If we are provided an \"external\" PRNG, we don't support getting or setting PRNG state, as we'd need to check for compatible state value types, etc, entailing considerable complexity.\n\tif ( opts && opts.prng ) {\n\t\tsetReadOnly( prng, 'seed', null );\n\t\tsetReadOnly( prng, 'seedLength', null );\n\t\tsetReadWriteAccessor( prng, 'state', constantFunction( null ), noop );\n\t\tsetReadOnly( prng, 'stateLength', null );\n\t\tsetReadOnly( prng, 'byteLength', null );\n\t\tsetReadOnly( prng, 'toJSON', constantFunction( null ) );\n\t} else {\n\t\tsetReadOnlyAccessor( prng, 'seed', getSeed );\n\t\tsetReadOnlyAccessor( prng, 'seedLength', getSeedLength );\n\t\tsetReadWriteAccessor( prng, 'state', getState, setState );\n\t\tsetReadOnlyAccessor( prng, 'stateLength', getStateLength );\n\t\tsetReadOnlyAccessor( prng, 'byteLength', getStateSize );\n\t\tsetReadOnly( prng, 'toJSON', toJSON );\n\t}\n\tsetReadOnly( prng, 'PRNG', rand );\n\treturn prng;\n\n\t/**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMT19937} seed\n\t*/\n\tfunction getSeed() {\n\t\treturn rand.seed;\n\t}\n\n\t/**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/\n\tfunction getSeedLength() {\n\t\treturn rand.seedLength;\n\t}\n\n\t/**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/\n\tfunction getStateLength() {\n\t\treturn rand.stateLength;\n\t}\n\n\t/**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/\n\tfunction getStateSize() {\n\t\treturn rand.byteLength;\n\t}\n\n\t/**\n\t* Returns the current pseudorandom number generator state.\n\t*\n\t* @private\n\t* @returns {PRNGStateMT19937} current state\n\t*/\n\tfunction getState() {\n\t\treturn rand.state;\n\t}\n\n\t/**\n\t* Sets the pseudorandom number generator state.\n\t*\n\t* @private\n\t* @param {PRNGStateMT19937} s - generator state\n\t* @throws {Error} must provide a valid state\n\t*/\n\tfunction setState( s ) {\n\t\trand.state = s;\n\t}\n\n\t/**\n\t* Serializes the pseudorandom number generator as a JSON object.\n\t*\n\t* ## Notes\n\t*\n\t* -   `JSON.stringify()` implicitly calls this method when stringifying a PRNG.\n\t*\n\t* @private\n\t* @returns {Object} JSON representation\n\t*/\n\tfunction toJSON() {\n\t\tvar out = {};\n\t\tout.type = 'PRNG';\n\t\tout.name = prng.NAME;\n\t\tout.state = typedarray2json( rand.state );\n\t\tif ( mu === void 0 ) {\n\t\t\tout.params = [];\n\t\t} else {\n\t\t\tout.params = [ mu, sigma ];\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t* Returns a log-normally distributed pseudorandom number with bound parameters `mu` and `sigma`.\n\t*\n\t* @private\n\t* @returns {PositiveNumber} pseudorandom number\n\t*\n\t* @example\n\t* var v = lognormal1();\n\t* // returns <number>\n\t*/\n\tfunction lognormal1() {\n\t\treturn lognormal0( rnorm, mu, sigma );\n\t}\n\n\t/**\n\t* Returns a log-normally distributed pseudorandom number with parameters `mu` and `sigma`.\n\t*\n\t* @private\n\t* @param {number} mu - location parameter\n\t* @param {PositiveNumber} sigma - scale parameter\n\t* @returns {PositiveNumber} pseudorandom number\n\t*\n\t* @example\n\t* var v = lognormal2( -2.0, 4.0 );\n\t* // returns <number>\n\t*\n\t* @example\n\t* var v = lognormal2( 0.0, -1.0 );\n\t* // returns NaN\n\t*/\n\tfunction lognormal2( mu, sigma ) {\n\t\tif (\n\t\t\tisnan( mu ) ||\n\t\t\tisnan( sigma ) ||\n\t\t\tsigma <= 0.0\n\t\t) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn lognormal0( rnorm, mu, sigma );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a non-enumerable read-only accessor.\n*\n* @module @stdlib/utils/define-nonenumerable-read-only-accessor\n*\n* @example\n* var setNonEnumerableReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\n*\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnlyAccessor( obj, prop, getter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a non-enumerable read-write accessor.\n*\n* @module @stdlib/utils/define-nonenumerable-read-write-accessor\n*\n* @example\n* var setNonEnumerableReadWriteAccessor = require( '@stdlib/utils/define-nonenumerable-read-write-accessor' );\n*\n* function getter() {\n*     return name + ' foo';\n* }\n*\n* function setter( v ) {\n*     name = v;\n* }\n*\n* var name = 'bar';\n* var obj = {};\n*\n* setNonEnumerableReadWriteAccessor( obj, 'foo', getter, setter );\n*\n* var v = obj.foo;\n* // returns 'bar foo'\n*\n* obj.foo = 'beep';\n*\n* v = obj.foo;\n* // returns 'beep foo'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-write accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - get accessor\n* @param {Function} setter - set accessor\n*\n* @example\n* function getter() {\n*     return name + ' foo';\n* }\n*\n* function setter( v ) {\n*     name = v;\n* }\n*\n* var name = 'bar';\n* var obj = {};\n*\n* setNonEnumerableReadWriteAccessor( obj, 'foo', getter, setter );\n*\n* var v = obj.foo;\n* // returns 'bar foo'\n*\n* obj.foo = 'beep';\n*\n* v = obj.foo;\n* // returns 'beep foo'\n*/\nfunction setNonEnumerableReadWriteAccessor( obj, prop, getter, setter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadWriteAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a plain object.\n*\n* @module @stdlib/assert/is-plain-object\n*\n* @example\n* var isPlainObject = require( '@stdlib/assert/is-plain-object' );\n*\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* bool = isPlainObject( null );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( './../../is-object' );\nvar isFunction = require( './../../is-function' );\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar hasOwnProp = require( './../../has-own-property' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar objectPrototype = Object.prototype;\n\n\n// FUNCTIONS //\n\n/**\n* Tests that an object only has own properties.\n*\n* @private\n* @param {Object} obj - value to test\n* @returns {boolean} boolean indicating if an object only has own properties\n*/\nfunction ownProps( obj ) {\n\tvar key;\n\n\t// NOTE: possibility of perf boost if key enumeration order is known (see http://stackoverflow.com/questions/18531624/isplainobject-thing).\n\tfor ( key in obj ) {\n\t\tif ( !hasOwnProp( obj, key ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests if a value is a plain object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a plain object\n*\n* @example\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* @example\n* var bool = isPlainObject( null );\n* // returns false\n*/\nfunction isPlainObject( value ) {\n\tvar proto;\n\n\t// Screen for obvious non-objects...\n\tif ( !isObject( value ) ) {\n\t\treturn false;\n\t}\n\t// Objects with no prototype (e.g., `Object.create( null )`) are plain...\n\tproto = getPrototypeOf( value );\n\tif ( !proto ) {\n\t\treturn true;\n\t}\n\t// Objects having a prototype are plain if and only if they are constructed with a global `Object` function and the prototype points to the prototype of a plain object...\n\treturn (\n\t\t// Cannot have own `constructor` property:\n\t\t!hasOwnProp( value, 'constructor' ) &&\n\n\t\t// Prototype `constructor` property must be a function (see also https://bugs.jquery.com/ticket/9897 and http://stackoverflow.com/questions/18531624/isplainobject-thing):\n\t\thasOwnProp( proto, 'constructor' ) &&\n\t\tisFunction( proto.constructor ) &&\n\t\tnativeClass( proto.constructor ) === '[object Function]' &&\n\n\t\t// Test for object-specific method:\n\t\thasOwnProp( proto, 'isPrototypeOf' ) &&\n\t\tisFunction( proto.isPrototypeOf ) &&\n\n\t\t(\n\t\t\t// Test if the prototype matches the global `Object` prototype (same realm):\n\t\t\tproto === objectPrototype ||\n\n\t\t\t// Test that all properties are own properties (cross-realm; *most* likely a plain object):\n\t\t\townProps( value )\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an object.\n*\n* @module @stdlib/assert/is-object\n*\n* @example\n* var isObject = require( '@stdlib/assert/is-object' );\n*\n* var bool = isObject( {} );\n* // returns true\n*\n* bool = isObject( true );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( './../../is-array' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an object; e.g., `{}`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an object\n*\n* @example\n* var bool = isObject( {} );\n* // returns true\n*\n* @example\n* var bool = isObject( null );\n* // returns false\n*/\nfunction isObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t!isArray( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array.\n*\n* @module @stdlib/assert/is-array\n*\n* @example\n* var isArray = require( '@stdlib/assert/is-array' );\n*\n* var bool = isArray( [] );\n* // returns true\n*\n* bool = isArray( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar f;\n\n\n// FUNCTIONS //\n\n/**\n* Tests if a value is an array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an array\n*\n* @example\n* var bool = isArray( [] );\n* // returns true\n*\n* @example\n* var bool = isArray( {} );\n* // returns false\n*/\nfunction isArray( value ) {\n\treturn ( nativeClass( value ) === '[object Array]' );\n}\n\n\n// MAIN //\n\nif ( Array.isArray ) {\n\tf = Array.isArray;\n} else {\n\tf = isArray;\n}\n\n\n// EXPORTS //\n\nmodule.exports = f;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a string value indicating a specification defined classification of an object.\n*\n* @module @stdlib/utils/native-class\n*\n* @example\n* var nativeClass = require( '@stdlib/utils/native-class' );\n*\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* function Beep() {\n*     return this;\n* }\n* str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n\n// MODULES //\n\nvar hasToStringTag = require( '@stdlib/assert/has-tostringtag-support' );\nvar builtin = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar main;\nif ( hasToStringTag() ) {\n\tmain = polyfill;\n} else {\n\tmain = builtin;\n}\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `toStringTag` support.\n*\n* @module @stdlib/assert/has-tostringtag-support\n*\n* @example\n* var hasToStringTagSupport = require( '@stdlib/assert/has-tostringtag-support' );\n*\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasSymbols = require( './../../has-symbol-support' );\n\n\n// VARIABLES //\n\nvar FLG = hasSymbols();\n\n\n// MAIN //\n\n/**\n* Tests for native `toStringTag` support.\n*\n* @returns {boolean} boolean indicating if an environment has `toStringTag` support\n*\n* @example\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\nfunction hasToStringTagSupport() {\n\treturn ( FLG && typeof Symbol.toStringTag === 'symbol' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Symbol` support.\n*\n* @module @stdlib/assert/has-symbol-support\n*\n* @example\n* var hasSymbolSupport = require( '@stdlib/assert/has-symbol-support' );\n*\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests for native `Symbol` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol` support\n*\n* @example\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toStr = require( './tostring.js' );\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\treturn toStr.call( v );\n}\n\n\n// EXPORTS //\n\nmodule.exports = nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStr = Object.prototype.toString;\n\n\n// EXPORTS //\n\nmodule.exports = toStr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar toStringTag = require( './tostringtag.js' );\nvar toStr = require( './tostring.js' );\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\tvar isOwn;\n\tvar tag;\n\tvar out;\n\n\tif ( v === null || v === void 0 ) {\n\t\treturn toStr.call( v );\n\t}\n\ttag = v[ toStringTag ];\n\tisOwn = hasOwnProp( v, toStringTag );\n\n\t// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.\n\ttry {\n\t\tv[ toStringTag ] = void 0;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn toStr.call( v );\n\t}\n\tout = toStr.call( v );\n\n\tif ( isOwn ) {\n\t\tv[ toStringTag ] = tag;\n\t} else {\n\t\tdelete v[ toStringTag ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object has a specified property.\n*\n* @module @stdlib/assert/has-own-property\n*\n* @example\n* var hasOwnProp = require( '@stdlib/assert/has-own-property' );\n*\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* bool = hasOwnProp( beep, 'bop' );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar has = Object.prototype.hasOwnProperty;\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasOwnProp( value, property ) {\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\treturn has.call( value, property );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Symbol = require( '@stdlib/symbol/ctor' );\n\n\n// MAIN //\n\nvar toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';\n\n\n// EXPORTS //\n\nmodule.exports = toStrTag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Symbol factory.\n*\n* @module @stdlib/symbol/ctor\n*\n* @example\n* var Symbol = require( '@stdlib/symbol/ctor' );\n*\n* var s = Symbol( 'beep' );\n* // returns <symbol>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar Sym = ( typeof Symbol === 'function' ) ? Symbol : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = Sym;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a function.\n*\n* @module @stdlib/assert/is-function\n*\n* @example\n* var isFunction = require( '@stdlib/assert/is-function' );\n*\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar typeOf = require( '@stdlib/utils/type-of' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a function.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a function\n*\n* @example\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\nfunction isFunction( value ) {\n\t// Note: cannot use `typeof` directly, as various browser engines incorrectly return `'function'` when operating on non-function objects, such as regular expressions and NodeLists.\n\treturn ( typeOf( value ) === 'function' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine a value's type.\n*\n* @module @stdlib/utils/type-of\n*\n* @example\n* var typeOf = require( '@stdlib/utils/type-of' );\n*\n* var str = typeOf( 'a' );\n* // returns 'string'\n*\n* str = typeOf( 5 );\n* // returns 'number'\n*/\n\n// MODULES //\n\nvar usePolyfill = require( './check.js' );\nvar builtin = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar main = ( usePolyfill() ) ? polyfill : builtin;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar RE = require( './fixtures/re.js' );\nvar nodeList = require( './fixtures/nodelist.js' );\nvar typedarray = require( './fixtures/typedarray.js' );\n\n\n// MAIN //\n\n/**\n* Checks whether a polyfill is needed when using the `typeof` operator.\n*\n* @private\n* @returns {boolean} boolean indicating whether a polyfill is needed\n*/\nfunction check() {\n\tif (\n\t\t// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):\n\t\ttypeof RE === 'function' ||\n\n\t\t// Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):\n\t\ttypeof typedarray === 'object' ||\n\n\t\t// PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):\n\t\ttypeof nodeList === 'function'\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar RE = /./;\n\n\n// EXPORTS //\n\nmodule.exports = RE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getGlobal = require( './../../../global' );\n\n\n// MAIN //\n\nvar root = getGlobal();\nvar nodeList = root.document && root.document.childNodes;\n\n\n// EXPORTS //\n\nmodule.exports = nodeList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar getThis = require( './codegen.js' );\nvar Self = require( './self.js' );\nvar Win = require( './window.js' );\nvar GlobalThis = require( './global_this.js' );\n\n\n// MAIN //\n\n/**\n* Returns the global object.\n*\n* ## Notes\n*\n* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.\n*\n* @private\n* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object\n* @throws {TypeError} must provide a boolean\n* @throws {Error} unable to resolve global object\n* @returns {Object} global object\n*\n* @example\n* var g = getGlobal();\n* // returns {...}\n*/\nfunction getGlobal( codegen ) {\n\tif ( arguments.length ) {\n\t\tif ( !isBoolean( codegen ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a boolean. Value: `%s`.', codegen ) );\n\t\t}\n\t\tif ( codegen ) {\n\t\t\treturn getThis();\n\t\t}\n\t\t// Fall through...\n\t}\n\t// Case: 2020 revision of ECMAScript standard\n\tif ( GlobalThis ) {\n\t\treturn GlobalThis;\n\t}\n\t// Case: browsers and web workers\n\tif ( Self ) {\n\t\treturn Self;\n\t}\n\t// Case: browsers\n\tif ( Win ) {\n\t\treturn Win;\n\t}\n\t// Case: unknown\n\tthrow new Error( 'unexpected error. Unable to resolve global object.' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a boolean.\n*\n* @module @stdlib/assert/is-boolean\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n* var isBoolean = require( '@stdlib/assert/is-boolean' );\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n* var isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( true ) );\n* // returns false\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n* var isBoolean = require( '@stdlib/assert/is-boolean' ).isObject;\n*\n* var bool = isBoolean( true );\n* // returns false\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a boolean\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n*\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n*\n* var bool = isBoolean( new Boolean( true ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a boolean primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean primitive\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n*\n* var bool = isBoolean( new Boolean( true ) );\n* // returns false\n*/\nfunction isBoolean( value ) {\n\treturn ( typeof value === 'boolean' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar Boolean = require( '@stdlib/boolean/ctor' );\nvar test = require( './try2serialize.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean object\n*\n* @example\n* var bool = isBoolean( true );\n* // returns false\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n*\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Boolean ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Boolean]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean constructor.\n*\n* @module @stdlib/boolean/ctor\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n*\n* var b = Boolean( null );\n* // returns false\n*\n* b = Boolean( [] );\n* // returns true\n*\n* b = Boolean( {} );\n* // returns true\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n*\n* var b = new Boolean( false );\n* // returns <Boolean>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a boolean.\n*\n* @name Boolean\n* @constructor\n* @type {Function}\n* @param {*} value - input value\n* @returns {(boolean|Boolean)} boolean\n*\n* @example\n* var b = Boolean( null );\n* // returns false\n*\n* b = Boolean( [] );\n* // returns true\n*\n* b = Boolean( {} );\n* // returns true\n*\n* @example\n* var b = new Boolean( false );\n* // returns <Boolean>\n*/\nvar Bool = Boolean; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = Bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Boolean.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the global object using code generation.\n*\n* @private\n* @returns {Object} global object\n*/\nfunction getGlobal() {\n\treturn new Function( 'return this;' )(); // eslint-disable-line no-new-func, stdlib/require-globals\n}\n\n\n// EXPORTS //\n\nmodule.exports = getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof self === 'object' ) ? self : null;\n\n\n// EXPORTS //\n\nmodule.exports = obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof window === 'object' ) ? window : null;\n\n\n// EXPORTS //\n\nmodule.exports = obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof globalThis === 'object' ) ? globalThis : null; // eslint-disable-line no-undef\n\n\n// EXPORTS //\n\nmodule.exports = obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar typedarray = Int8Array; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = typedarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctorName = require( './../../constructor-name' );\n\n\n// NOTES //\n\n/*\n* Built-in `typeof` operator behavior:\n*\n* ```text\n* typeof null => 'object'\n* typeof undefined => 'undefined'\n* typeof 'a' => 'string'\n* typeof 5 => 'number'\n* typeof NaN => 'number'\n* typeof true => 'boolean'\n* typeof false => 'boolean'\n* typeof {} => 'object'\n* typeof [] => 'object'\n* typeof function foo(){} => 'function'\n* typeof function* foo(){} => 'object'\n* typeof Symbol() => 'symbol'\n* ```\n*\n*/\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\tvar type;\n\n\t// Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):\n\tif ( v === null ) {\n\t\treturn 'null';\n\t}\n\ttype = typeof v;\n\n\t// If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.\n\tif ( type === 'object' ) {\n\t\treturn ctorName( v ).toLowerCase();\n\t}\n\treturn type;\n}\n\n\n// EXPORTS //\n\nmodule.exports = typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the name of a value's constructor.\n*\n* @module @stdlib/utils/constructor-name\n*\n* @example\n* var constructorName = require( '@stdlib/utils/constructor-name' );\n*\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* v = constructorName( {} );\n* // returns 'Object'\n*\n* v = constructorName( true );\n* // returns 'Boolean'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( './../../native-class' );\nvar RE = require( '@stdlib/regexp/function-name' ).REGEXP;\nvar isBuffer = require( '@stdlib/assert/is-buffer' );\n\n\n// MAIN //\n\n/**\n* Determines the name of a value's constructor.\n*\n* @param {*} v - input value\n* @returns {string} name of a value's constructor\n*\n* @example\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* @example\n* var v = constructorName( 5 );\n* // returns 'Number'\n*\n* @example\n* var v = constructorName( null );\n* // returns 'Null'\n*\n* @example\n* var v = constructorName( undefined );\n* // returns 'Undefined'\n*\n* @example\n* var v = constructorName( function noop() {} );\n* // returns 'Function'\n*/\nfunction constructorName( v ) {\n\tvar match;\n\tvar name;\n\tvar ctor;\n\tname = nativeClass( v ).slice( 8, -1 );\n\tif ( (name === 'Object' || name === 'Error') && v.constructor ) {\n\t\tctor = v.constructor;\n\t\tif ( typeof ctor.name === 'string' ) {\n\t\t\treturn ctor.name;\n\t\t}\n\t\tmatch = RE.exec( ctor.toString() );\n\t\tif ( match ) {\n\t\t\treturn match[ 1 ];\n\t\t}\n\t}\n\tif ( isBuffer( v ) ) {\n\t\treturn 'Buffer';\n\t}\n\treturn name;\n}\n\n\n// EXPORTS //\n\nmodule.exports = constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @module @stdlib/regexp/function-name\n*\n* @example\n* var reFunctionName = require( '@stdlib/regexp/function-name' );\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\nfunction reFunctionName() {\n\treturn /^\\s*function\\s*([^(]*)/i;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reFunctionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reFunctionName = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* Regular expression: `/^\\s*function\\s*([^(]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `\\s*`\n*     -   Match zero or more spaces after the word `function`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `/i`\n*     -   ignore case\n*\n* @constant\n* @type {RegExp}\n* @default /^\\s*function\\s*([^(]*)/i\n*/\nvar RE_FUNCTION_NAME = reFunctionName();\n\n\n// EXPORTS //\n\nmodule.exports = RE_FUNCTION_NAME;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Buffer instance.\n*\n* @module @stdlib/assert/is-buffer\n*\n* @example\n* var isBuffer = require( '@stdlib/assert/is-buffer' );\n*\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* v = isBuffer( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObjectLike = require( './../../is-object-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Buffer instance.\n*\n* @param {*} value - value to validate\n* @returns {boolean} boolean indicating if a value is a Buffer instance\n*\n* @example\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( new Buffer( [1,2,3,4] ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( {} );\n* // returns false\n*\n* @example\n* var v = isBuffer( [] );\n* // returns false\n*/\nfunction isBuffer( value ) {\n\treturn (\n\t\tisObjectLike( value ) &&\n\t\t(\n\t\t\t// eslint-disable-next-line no-underscore-dangle\n\t\t\tvalue._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)\n\t\t\t(\n\t\t\t\tvalue.constructor &&\n\n\t\t\t\t// WARNING: `typeof` is not a foolproof check, as certain envs consider RegExp and NodeList instances to be functions\n\t\t\t\ttypeof value.constructor.isBuffer === 'function' &&\n\t\t\t\tvalue.constructor.isBuffer( value )\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is object-like.\n*\n* @module @stdlib/assert/is-object-like\n*\n* @example\n* var isObjectLike = require( '@stdlib/assert/is-object-like' );\n*\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* bool = isObjectLike( [] );\n* // returns true\n*\n* bool = isObjectLike( null );\n* // returns false\n*\n* @example\n* var isObjectLike = require( '@stdlib/assert/is-object-like' ).isObjectLikeArray;\n*\n* var bool = isObjectLike( [ {}, [] ] );\n* // returns true\n*\n* bool = isObjectLike( [ {}, '3.0' ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-function' );\nvar main = require( './main.js' );\n\n\n// VARIABLES //\n\nvar isObjectLikeArray = arrayfun( main );\n\n\n// MAIN //\n\nsetReadOnly( main, 'isObjectLikeArray', isObjectLikeArray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a function which tests if every element in an array passes a test condition.\n*\n* @module @stdlib/assert/tools/array-function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n* var arrayfcn = require( '@stdlib/assert/tools/array-function' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( './../../../is-array' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arrayfcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArray( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = arrayfcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is object-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is object-like\n*\n* @example\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( [] );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( null );\n* // returns false\n*/\nfunction isObjectLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctorName = require( './../../constructor-name' );\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\treturn ctorName( v ).toLowerCase();\n}\n\n\n// EXPORTS //\n\nmodule.exports = typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the prototype of a provided object.\n*\n* @module @stdlib/utils/get-prototype-of\n*\n* @example\n* var getPrototype = require( '@stdlib/utils/get-prototype-of' );\n*\n* var proto = getPrototype( {} );\n* // returns {}\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Object = require( '@stdlib/object/ctor' );\nvar getProto = require( './detect.js' );\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @param {*} value - input value\n* @returns {(Object|null)} prototype\n*\n* @example\n* var proto = getPrototypeOf( {} );\n* // returns {}\n*/\nfunction getPrototypeOf( value ) {\n\tif (\n\t\tvalue === null ||\n\t\tvalue === void 0\n\t) {\n\t\treturn null;\n\t}\n\t// In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:\n\tvalue = Object( value );\n\n\treturn getProto( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Object constructor.\n*\n* @module @stdlib/object/ctor\n*\n* @example\n* var Object = require( '@stdlib/object/ctor' );\n*\n* var o = new Object( null );\n* // returns {}\n*\n* o = new Object( 5.0 );\n* // returns <Number>\n*\n* o = new Object( 'beep' );\n* // returns <String>\n*\n* var o1 = {};\n*\n* var o2 = new Object( o1 );\n* // returns {}\n*\n* var bool = ( o1 === o2 );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an object.\n*\n* @name Object\n* @constructor\n* @type {Function}\n* @param {*} value - input value\n* @returns {Object} object\n*\n* @example\n* var o = new Object( null );\n* // returns {}\n*\n* @example\n* var o = new Object( 5.0 );\n* // returns <Number>\n*\n* @example\n* var o = new Object( 'beep' );\n* // returns <String>\n*\n* @example\n* var o1 = {};\n*\n* var o2 = new Object( o1 );\n* // returns {}\n*\n* var bool = ( o1 === o2 );\n* // returns true\n*/\nvar Obj = Object; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = Obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar builtin = require( './native.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar getProto;\nif ( isFunction( Object.getPrototypeOf ) ) {\n\tgetProto = builtin;\n} else {\n\tgetProto = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar getProto = Object.getPrototypeOf;\n\n\n// EXPORTS //\n\nmodule.exports = getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( './../../native-class' );\nvar getProto = require( './proto.js' );\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {(Object|null)} prototype\n*/\nfunction getPrototypeOf( obj ) {\n\tvar proto = getProto( obj );\n\tif ( proto || proto === null ) {\n\t\treturn proto;\n\t}\n\tif ( nativeClass( obj.constructor ) === '[object Function]' ) {\n\t\t// May break if the constructor has been tampered with...\n\t\treturn obj.constructor.prototype;\n\t}\n\tif ( obj instanceof Object ) {\n\t\treturn Object.prototype;\n\t}\n\t// Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the value of the `__proto__` property.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {*} value of `__proto__` property\n*/\nfunction getProto( obj ) {\n\t// eslint-disable-next-line no-proto\n\treturn obj.__proto__;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a constant function.\n*\n* @module @stdlib/utils/constant-function\n*\n* @example\n* var constantFunction = require( '@stdlib/utils/constant-function' );\n*\n* var fcn = constantFunction( 3.14 );\n*\n* var v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Creates a function which always returns the same value.\n*\n* @param {*} [value] - value to always return\n* @returns {Function} constant function\n*\n* @example\n* var fcn = wrap( 3.14 );\n*\n* var v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*/\nfunction wrap( value ) {\n\treturn constantFunction;\n\n\t/**\n\t* Constant function.\n\t*\n\t* @private\n\t* @returns {*} constant value\n\t*/\n\tfunction constantFunction() {\n\t\treturn value;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* No operation.\n*\n* @module @stdlib/utils/noop\n*\n* @example\n* var noop = require( '@stdlib/utils/noop' );\n*\n* noop();\n* // ...does nothing.\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* No operation.\n*\n* @example\n* noop();\n* // ...does nothing.\n*/\nfunction noop() {\n\t// Empty function...\n}\n\n\n// EXPORTS //\n\nmodule.exports = noop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Normally distributed pseudorandom numbers using the improved Ziggurat method.\n*\n* @module @stdlib/random/base/improved-ziggurat\n*\n* @example\n* var randn = require( '@stdlib/random/base/improved-ziggurat' );\n*\n* var r = randn();\n* // returns <number>\n*\n* @example\n* var factory = require( '@stdlib/random/base/improved-ziggurat' ).factory;\n*\n* var randn = factory({\n*     'seed': 12345\n* });\n*\n* var r = randn();\n* // returns <number>\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\n/**\n* Generates a standard normally distributed random number.\n*\n* ## Method\n*\n* The basic Ziggurat method works as follows:\n*\n*     ```tex\n*     x_{C-1}(r) \\left[ f(0) - f\\left( x_{C-1}(r) \\right) \\right] - V(r) = 0\n*     ```\n*\n*     where\n*\n*     ```tex\n*     V(r) = r \\; f(r) + \\int_r^\\infty \\; f(x) \\; dx\n*     ```\n*\n*     and \\\\( r \\\\) denotes the right-most \\\\( x_1 \\\\).\n*\n* -   We then use the following rejection algorithm:\n*\n*     -   Draw a box \\\\( B_i \\\\) at random with probability \\\\( \\tfrac{1}{C} \\\\).\n*     -   Draw a random number from the box as \\\\( z = U_0 x_i \\\\) for \\\\( i > 0 \\\\) and \\\\( z = U_0 V / f(x_1) \\\\).\n*     -   If \\\\( z < x_{i+1} \\\\), accept \\\\( z \\\\).\n*     -   If \\\\( i = 0 \\\\), accept a \\\\( v \\\\) by transforming the tail of the normal distribution to the unit interval and then use rejection technique by Marsaglia, G. (1964) to generate a standard normal variable. Otherwise, if \\\\( i > 0 \\\\) and \\\\( U_1 \\left[ f(x_i) - f(x_{i+1})\\right] < f(z) - f(x_{i+1}) \\\\) accept \\\\( z \\\\).\n*     -   Go back to the first step.\n*\n* -   The improved version by Doornik (2005) changes step four in order to correct a deficiency of the original Ziggurat algorithm. The updated version requires the generation of two random numbers, a uniform variable drawn from \\\\( U(-1,1) \\\\) and the last seven bits of a random integer.\n*\n* ## References\n*\n* -   Doornik, Jurgen A. 2005. \"An Improved Ziggurat Method to Generate Normal Random Samples.\" <https://www.doornik.com/research/ziggurat.pdf>.\n* -   Marsaglia, George, and Wai Wan Tsang. 2000. \"The Ziggurat Method for Generating Random Variables.\" _Journal of Statistical Software_ 5 (1): 1–7. doi:[10.18637/jss.v005.i08](http://dx.doi.org/10.18637/jss.v005.i08).\n* -   Marsaglia, George. 1964. \"Generating a Variable from the Tail of the Normal Distribution.\" _Technometrics_ 6 (1): 101–2. doi:[10.1080/00401706.1964.10490150](http://dx.doi.org/10.1080/00401706.1964.10490150).\n*\n* @name randn\n* @type {PRNG}\n* @returns {number} pseudorandom number\n*\n* @example\n* var r = randn();\n* // returns <number>\n*/\nvar randn = factory();\n\n\n// EXPORTS //\n\nmodule.exports = randn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar setReadWriteAccessor = require( '@stdlib/utils/define-nonenumerable-read-write-accessor' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isUint32Array = require( '@stdlib/assert/is-uint32array' );\nvar mt19937 = require( './../../../base/mt19937' ).factory;\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar noop = require( '@stdlib/utils/noop' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar UINT32_MAX = require( '@stdlib/constants/uint32/max' );\nvar typedarray2json = require( '@stdlib/array/to-json' );\nvar format = require( '@stdlib/string/format' );\nvar improvedZiggurat = require( './improved_ziggurat.js' );\n\n\n// MAIN //\n\n/**\n* Returns a pseudorandom number generator which implements the improved Ziggurat method to generate normally distributed pseudorandom numbers.\n*\n* @param {Options} [options] - function options\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} must provide an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {PRNG} pseudorandom number generator\n*\n* @example\n* var randn = factory();\n*\n* var r = randn();\n* // returns <number>\n*\n* @example\n* // Return a seeded PRNG:\n* var randn = factory({\n*     'seed': 12345\n* });\n*\n* var r = randn();\n* // returns <number>\n*/\nfunction factory( options ) {\n\tvar randu;\n\tvar randi;\n\tvar randn;\n\tvar opts;\n\n\topts = {\n\t\t'copy': true\n\t};\n\tif ( arguments.length ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\t\topts.copy = options.copy;\n\t\t\tif ( !isBoolean( options.copy ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', options.copy ) );\n\t\t\t}\n\t\t}\n\t\tif ( hasOwnProp( options, 'prng' ) ) {\n\t\t\tif ( !isFunction( options.prng ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', options.prng ) );\n\t\t\t}\n\t\t\trandu = options.prng;\n\t\t}\n\t\t// If provided a PRNG, ignore the `state` option, as we don't support getting or setting PRNG state.\n\t\telse if ( hasOwnProp( options, 'state' ) ) {\n\t\t\topts.state = options.state;\n\t\t\tif ( !isUint32Array( options.state ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a Uint32Array. Option: `%s`.', 'state', options.state ) );\n\t\t\t}\n\t\t}\n\t\t// If provided a PRNG, ignore the `seed` option, as a `seed`, by itself, is insufficient to guarantee reproducibility. If provided a state, ignore the `seed` option, as a PRNG state should contain seed information.\n\t\telse if ( hasOwnProp( options, 'seed' ) ) {\n\t\t\topts.seed = options.seed;\n\t\t\tif ( options.seed === void 0 ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%s`.', 'seed', options.seed ) );\n\t\t\t}\n\t\t}\n\t}\n\tif ( opts.state === void 0 ) {\n\t\tif ( randu === void 0 ) {\n\t\t\trandi = mt19937( opts );\n\t\t\trandu = randi.normalized;\n\t\t} else {\n\t\t\trandi = mt19937({\n\t\t\t\t'seed': floor( 1.0 + ( UINT32_MAX*randu() ) ), // allows seeding via an externally seeded PRNG\n\t\t\t\t'copy': opts.copy\n\t\t\t});\n\t\t\topts.seed = null;\n\t\t}\n\t} else {\n\t\trandi = mt19937( opts );\n\t\trandu = randi.normalized;\n\t}\n\trandn = improvedZiggurat( randu, randi );\n\n\tsetReadOnly( randn, 'NAME', 'improved-ziggurat' );\n\tif ( opts.seed === null ) {\n\t\tsetReadOnly( randn, 'seed', null );\n\t\tsetReadOnly( randn, 'seedLength', null );\n\t} else {\n\t\tsetReadOnlyAccessor( randn, 'seed', getSeed );\n\t\tsetReadOnlyAccessor( randn, 'seedLength', getSeedLength );\n\t}\n\t// If we are provided an \"external\" PRNG, we don't support getting or setting PRNG state, as we'd need to check for compatible state value types, etc, entailing considerable complexity.\n\tif ( options && options.prng ) {\n\t\tsetReadWriteAccessor( randn, 'state', constantFunction( null ), noop );\n\t\tsetReadOnly( randn, 'stateLength', null );\n\t\tsetReadOnly( randn, 'byteLength', null );\n\t\tsetReadOnly( randn, 'toJSON', constantFunction( null ) );\n\t} else {\n\t\tsetReadWriteAccessor( randn, 'state', getState, setState );\n\t\tsetReadOnlyAccessor( randn, 'stateLength', getStateLength );\n\t\tsetReadOnlyAccessor( randn, 'byteLength', getStateSize );\n\t\tsetReadOnly( randn, 'toJSON', toJSON );\n\t}\n\tsetReadOnly( randn, 'PRNG', randu );\n\n\treturn randn;\n\n\t/**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMT19937} seed\n\t*/\n\tfunction getSeed() {\n\t\treturn randi.seed;\n\t}\n\n\t/**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/\n\tfunction getSeedLength() {\n\t\treturn randi.seedLength;\n\t}\n\n\t/**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/\n\tfunction getStateLength() {\n\t\treturn randi.stateLength;\n\t}\n\n\t/**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/\n\tfunction getStateSize() {\n\t\treturn randi.byteLength;\n\t}\n\n\t/**\n\t* Returns the current PRNG state.\n\t*\n\t* @private\n\t* @returns {PRNGStateMT19937} current state\n\t*/\n\tfunction getState() {\n\t\treturn randi.state;\n\t}\n\n\t/**\n\t* Sets the PRNG state.\n\t*\n\t* @private\n\t* @param {PRNGStateMT19937} s - generator state\n\t* @throws {Error} must provide a valid state\n\t*/\n\tfunction setState( s ) {\n\t\trandi.state = s;\n\t}\n\n\t/**\n\t* Serializes the pseudorandom number generator as a JSON object.\n\t*\n\t* ## Notes\n\t*\n\t* -   `JSON.stringify()` implicitly calls this method when stringifying a PRNG.\n\t*\n\t* @private\n\t* @returns {Object} JSON representation\n\t*/\n\tfunction toJSON() {\n\t\tvar out = {};\n\t\tout.type = 'PRNG';\n\t\tout.name = randn.NAME;\n\t\tout.state = typedarray2json( randi.state );\n\t\tout.params = [];\n\t\treturn out;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Uint32Array.\n*\n* @module @stdlib/assert/is-uint32array\n*\n* @example\n* var isUint32Array = require( '@stdlib/assert/is-uint32array' );\n*\n* var bool = isUint32Array( new Uint32Array( 10 ) );\n* // returns true\n*\n* bool = isUint32Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUint32Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUint32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint32Array = ( typeof Uint32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint32Array\n*\n* @example\n* var bool = isUint32Array( new Uint32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint32Array( [] );\n* // returns false\n*/\nfunction isUint32Array( value ) {\n\treturn (\n\t\t( hasUint32Array && value instanceof Uint32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A 32-bit Mersenne Twister pseudorandom number generator.\n*\n* @module @stdlib/random/base/mt19937\n*\n* @example\n* var mt19937 = require( '@stdlib/random/base/mt19937' );\n*\n* var v = mt19937();\n* // returns <number>\n*\n* @example\n* var factory = require( '@stdlib/random/base/mt19937' ).factory;\n*\n* var mt19937 = factory({\n*     'seed': 1234\n* });\n*\n* var v = mt19937();\n* // returns 822569775\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar factory = require( './factory.js' );\nvar randuint32 = require( './rand_uint32.js' );\n\n\n// MAIN //\n\n/**\n* Generates a pseudorandom integer on the interval \\\\( [0, 2^{32}) \\\\).\n*\n* ## Method\n*\n* -   When generating normalized double-precision floating-point numbers, we first generate two pseudorandom integers \\\\( x \\\\) and \\\\( y \\\\) on the interval \\\\( [0, 2^{32}) \\\\) for a combined \\\\( 64 \\\\) random bits.\n*\n* -   We would like \\\\( 53 \\\\) random bits to generate a 53-bit precision integer and, thus, want to discard \\\\( 11 \\\\) of the generated bits.\n*\n* -   We do so by discarding \\\\( 5 \\\\) bits from \\\\( x \\\\) and \\\\( 6 \\\\) bits from \\\\( y \\\\).\n*\n* -   Accordingly, \\\\( x \\\\) contains \\\\( 27 \\\\) random bits, which are subsequently shifted left \\\\( 26 \\\\) bits (multiplied by \\\\( 2^{26} \\\\), and \\\\( y \\\\) contains \\\\( 26 \\\\) random bits to fill in the lower \\\\( 26 \\\\) bits. When summed, they combine to comprise \\\\( 53 \\\\) random bits of a double-precision floating-point integer.\n*\n* -   As an example, suppose, for the sake of argument, the 32-bit PRNG generates the maximum unsigned 32-bit integer \\\\( 2^{32}-1 \\\\) twice in a row. Then,\n*\n*     ```javascript\n*     x = 4294967295 >>> 5; // 00000111111111111111111111111111\n*     y = 4294967295 >>> 6; // 00000011111111111111111111111111\n*     ```\n*\n*     Multiplying \\\\( x \\\\) by \\\\( 2^{26} \\\\) returns \\\\( 9007199187632128 \\\\), which, in binary, is\n*\n*     ```binarystring\n*     0 10000110011 11111111111111111111 11111100000000000000000000000000\n*     ```\n*\n*     Adding \\\\( y \\\\) yields \\\\( 9007199254740991 \\\\) (the maximum \"safe\" double-precision floating-point integer value), which, in binary, is\n*\n*     ```binarystring\n*     0 10000110011 11111111111111111111 11111111111111111111111111111111\n*     ```\n*\n* -   Similarly, suppose the 32-bit PRNG generates the following values\n*\n*     ```javascript\n*     x = 1 >>> 5;  // 0 => 00000000000000000000000000000000\n*     y = 64 >>> 6; // 1 => 00000000000000000000000000000001\n*     ```\n*\n*     Multiplying \\\\( x \\\\) by \\\\( 2^{26} \\\\) returns \\\\( 0 \\\\), which, in binary, is\n*\n*     ```binarystring\n*     0 00000000000 00000000000000000000 00000000000000000000000000000000\n*     ```\n*\n*     Adding \\\\( y \\\\) yields \\\\( 1 \\\\), which, in binary, is\n*\n*     ```binarystring\n*     0 01111111111 00000000000000000000 00000000000000000000000000000000\n*     ```\n*\n* -   As different combinations of \\\\( x \\\\) and \\\\( y \\\\) are generated, different combinations of double-precision floating-point exponent and significand bits will be toggled, thus generating pseudorandom double-precision floating-point numbers.\n*\n* ## References\n*\n* -   Matsumoto, Makoto, and Takuji Nishimura. 1998. \"Mersenne Twister: A 623-dimensionally Equidistributed Uniform Pseudo-random Number Generator.\" _ACM Transactions on Modeling and Computer Simulation_ 8 (1). New York, NY, USA: ACM: 3–30. doi:[10.1145/272991.272995][@matsumoto:1998a].\n* -   Harase, Shin. 2017. \"Conversion of Mersenne Twister to double-precision floating-point numbers.\" _ArXiv_ abs/1708.06018 (September). <https://arxiv.org/abs/1708.06018>.\n*\n* [@matsumoto:1998a]: https://doi.org/10.1145/272991.272995\n*\n* @function mt19937\n* @type {PRNG}\n* @returns {PositiveInteger} pseudorandom integer\n*\n* @example\n* var v = mt19937();\n* // returns <number>\n*/\nvar mt19937 = factory({\n\t'seed': randuint32()\n});\n\n\n// EXPORTS //\n\nmodule.exports = mt19937;\n","/* eslint-disable max-lines, max-len */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code and copyright notice are from the [source implementation][mt19937]. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without\n* modification, are permitted provided that the following conditions\n* are met:\n*\n*   1. Redistributions of source code must retain the above copyright\n*      notice, this list of conditions and the following disclaimer.\n*\n*   2. Redistributions in binary form must reproduce the above copyright\n*      notice, this list of conditions and the following disclaimer in the\n*      documentation and/or other materials provided with the distribution.\n*\n*   3. The names of its contributors may not be used to endorse or promote\n*      products derived from this software without specific prior written\n*      permission.\n*\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n* \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n* A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n* EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n* PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n* PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n* LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* ```\n*\n* [mt19937]: http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/CODES/mt19937ar.c\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar setReadWriteAccessor = require( '@stdlib/utils/define-nonenumerable-read-write-accessor' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isUint32Array = require( '@stdlib/assert/is-uint32array' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar FLOAT64_MAX_SAFE_INTEGER = require( '@stdlib/constants/float64/max-safe-integer' );\nvar UINT32_MAX = require( '@stdlib/constants/uint32/max' );\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar umul = require( '@stdlib/math/base/ops/umul' );\nvar gcopy = require( '@stdlib/blas/base/gcopy' );\nvar typedarray2json = require( '@stdlib/array/to-json' );\nvar format = require( '@stdlib/string/format' );\nvar randuint32 = require( './rand_uint32.js' );\n\n\n// VARIABLES //\n\n// Define the size of the state array (see refs):\nvar N = 624;\n\n// Define a (magic) constant used for indexing into the state array:\nvar M = 397;\n\n// Define the maximum seed: 11111111111111111111111111111111\nvar MAX_SEED = UINT32_MAX >>> 0; // asm type annotation\n\n// For seed arrays, define an initial state (magic) constant: 19650218 => 00000001001010111101011010101010\nvar SEED_ARRAY_INIT_STATE = 19650218 >>> 0; // asm type annotation\n\n// Define a mask for the most significant `w-r` bits, where `w` is the word size (32 bits) and `r` is the separation point of one word (see refs): 2147483648 => 0x80000000 => 10000000000000000000000000000000\nvar UPPER_MASK = 0x80000000 >>> 0; // asm type annotation\n\n// Define a mask for the least significant `r` bits (see refs): 2147483647 => 0x7fffffff => 01111111111111111111111111111111\nvar LOWER_MASK = 0x7fffffff >>> 0; // asm type annotation\n\n// Define a multiplier (see Knuth TAOCP Vol2. 3rd Ed. P.106): 1812433253 => 01101100000001111000100101100101\nvar KNUTH_MULTIPLIER = 1812433253 >>> 0; // asm type annotation\n\n// Define a (magic) multiplier: 1664525 => 00000000000110010110011000001101\nvar MAGIC_MULTIPLIER_1 = 1664525 >>> 0; // asm type annotation\n\n// Define a (magic) multiplier: 1566083941 => 01011101010110001000101101100101\nvar MAGIC_MULTIPLIER_2 = 1566083941 >>> 0; // asm type annotation\n\n// Define a tempering coefficient: 2636928640 => 0x9d2c5680 => 10011101001011000101011010000000\nvar TEMPERING_COEFFICIENT_1 = 0x9d2c5680 >>> 0; // asm type annotation\n\n// Define a tempering coefficient: 4022730752 => 0xefc60000 => 11101111110001100000000000000000\nvar TEMPERING_COEFFICIENT_2 = 0xefc60000 >>> 0; // asm type annotation\n\n// Define a constant vector `a` (see refs): 2567483615 => 0x9908b0df => 10011001000010001011000011011111\nvar MATRIX_A = 0x9908b0df >>> 0; // asm type annotation\n\n// MAG01[x] = x * MATRIX_A; for x = {0,1}\nvar MAG01 = [ 0x0 >>> 0, MATRIX_A >>> 0 ]; // asm type annotation\n\n// Define a normalization constant when generating double-precision floating-point numbers: 2^53 => 9007199254740992\nvar FLOAT64_NORMALIZATION_CONSTANT = 1.0 / ( FLOAT64_MAX_SAFE_INTEGER+1.0 ); // eslint-disable-line id-length\n\n// 2^26: 67108864\nvar TWO_26 = 67108864 >>> 0; // asm type annotation\n\n// 2^32: 2147483648 => 0x80000000 => 10000000000000000000000000000000\nvar TWO_32 = 0x80000000 >>> 0; // asm type annotation\n\n// 1 (as a 32-bit unsigned integer): 1 => 0x1 => 00000000000000000000000000000001\nvar ONE = 0x1 >>> 0; // asm type annotation\n\n// Define the maximum normalized pseudorandom double-precision floating-point number: ( (((2^32-1)>>>5)*2^26)+( (2^32-1)>>>6) ) / 2^53\nvar MAX_NORMALIZED = FLOAT64_MAX_SAFE_INTEGER * FLOAT64_NORMALIZATION_CONSTANT;\n\n// Define the state array schema version:\nvar STATE_ARRAY_VERSION = 1; // NOTE: anytime the state array schema changes, this value should be incremented!!!\n\n// Define the number of sections in the state array:\nvar NUM_STATE_SECTIONS = 3; // state, other, seed\n\n// Define the index offset of the \"state\" section in the state array:\nvar STATE_SECTION_OFFSET = 2; // | version | num_sections | state_length | ...state | other_length | state_index | seed_length | ...seed |\n\n// Define the index offset of the \"other\" section in the state array:\nvar OTHER_SECTION_OFFSET = N + 3; // | version | num_sections | state_length | ...state | other_length | state_index | seed_length | ...seed |\n\n// Define the index offset of the seed section in the state array:\nvar SEED_SECTION_OFFSET = N + 5; // | version | num_sections | state_length | ...state | other_length | state_index | seed_length | ...seed |\n\n// Define the length of the \"fixed\" length portion of the state array:\nvar STATE_FIXED_LENGTH = N + 6; // 1 (version) + 1 (num_sections) + 1 (state_length) + N (state) + 1 (other_length) + 1 (state_index) + 1 (seed_length)\n\n\n// FUNCTIONS //\n\n/**\n* Verifies state array integrity.\n*\n* @private\n* @param {Uint32Array} state - state array\n* @param {boolean} FLG - flag indicating whether the state array was provided as an option (true) or an argument (false)\n* @returns {(Error|null)} an error or `null`\n*/\nfunction verifyState( state, FLG ) {\n\tvar s1;\n\tif ( FLG ) {\n\t\ts1 = 'option';\n\t} else {\n\t\ts1 = 'argument';\n\t}\n\t// The state array must have a minimum length...\n\tif ( state.length < STATE_FIXED_LENGTH+1 ) {\n\t\treturn new RangeError( format( 'invalid %s. `state` array has insufficient length.', s1 ) );\n\t}\n\t// The first element of the state array must equal the supported state array schema version...\n\tif ( state[ 0 ] !== STATE_ARRAY_VERSION ) {\n\t\treturn new RangeError( format( 'invalid %s. `state` array has an incompatible schema version. Expected: `%s`. Actual: `%s.`', s1, STATE_ARRAY_VERSION, state[ 0 ] ) );\n\t}\n\t// The second element of the state array must contain the number of sections...\n\tif ( state[ 1 ] !== NUM_STATE_SECTIONS ) {\n\t\treturn new RangeError( format( 'invalid %s. `state` array has an incompatible number of sections. Expected: `%s`. Actual: `%s`.', s1, NUM_STATE_SECTIONS, state[ 1 ] ) );\n\t}\n\t// The length of the \"state\" section must equal `N`...\n\tif ( state[ STATE_SECTION_OFFSET ] !== N ) {\n\t\treturn new RangeError( format( 'invalid %s. `state` array has an incompatible state length. Expected: `%u`. Actual: `%u`.', s1, N, state[ STATE_SECTION_OFFSET ] ) );\n\t}\n\t// The length of the \"other\" section must equal `1`...\n\tif ( state[ OTHER_SECTION_OFFSET ] !== 1 ) {\n\t\treturn new RangeError( format( 'invalid %s. `state` array has an incompatible section length. Expected: `%u`. Actual: `%u`.', s1, 1, state[ OTHER_SECTION_OFFSET ] ) );\n\t}\n\t// The length of the \"seed\" section much match the empirical length...\n\tif ( state[ SEED_SECTION_OFFSET ] !== state.length-STATE_FIXED_LENGTH ) {\n\t\treturn new RangeError( format( 'invalid %s. `state` array length is incompatible with seed section length. Expected: `%u`. Actual: `%u`.', s1, state.length-STATE_FIXED_LENGTH, state[ SEED_SECTION_OFFSET ] ) );\n\t}\n\treturn null;\n}\n\n/**\n* Returns an initial PRNG state.\n*\n* @private\n* @param {Uint32Array} state - state array\n* @param {PositiveInteger} N - state size\n* @param {uinteger32} s - seed\n* @returns {Uint32Array} state array\n*/\nfunction createState( state, N, s ) {\n\tvar i;\n\n\t// Set the first element of the state array to the provided seed:\n\tstate[ 0 ] = s >>> 0; // equivalent to `s & 0xffffffffUL` in original C implementation\n\n\t// Initialize the remaining state array elements:\n\tfor ( i = 1; i < N; i++ ) {\n\t\t/*\n\t\t* In the original C implementation (see `init_genrand()`),\n\t\t*\n\t\t* ```c\n\t\t* mt[i] = (KNUTH_MULTIPLIER * (mt[i-1] ^ (mt[i-1] >> 30)) + i)\n\t\t* ```\n\t\t*\n\t\t* In order to replicate this in JavaScript, we must emulate C-like multiplication of unsigned 32-bit integers.\n\t\t*/\n\t\ts = state[ i-1 ]>>>0; // asm type annotation\n\t\ts = ( s^(s>>>30) )>>>0; // asm type annotation\n\t\tstate[ i ] = ( umul( s, KNUTH_MULTIPLIER ) + i )>>>0; // asm type annotation\n\t}\n\treturn state;\n}\n\n/**\n* Initializes a PRNG state array according to a seed array.\n*\n* @private\n* @param {Uint32Array} state - state array\n* @param {NonNegativeInteger} N - state array length\n* @param {Collection} seed - seed array\n* @param {NonNegativeInteger} M - seed array length\n* @returns {Uint32Array} state array\n*/\nfunction initState( state, N, seed, M ) {\n\tvar s;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\ti = 1;\n\tj = 0;\n\tfor ( k = max( N, M ); k > 0; k-- ) {\n\t\t/*\n\t\t* In the original C implementation (see `init_by_array()`),\n\t\t*\n\t\t* ```c\n\t\t* mt[i] = (mt[i]^((mt[i-1]^(mt[i-1]>>30))*1664525UL)) + seed[j] + j;\n\t\t* ```\n\t\t*\n\t\t* In order to replicate this in JavaScript, we must emulate C-like multiplication of unsigned 32-bit integers.\n\t\t*/\n\t\ts = state[ i-1 ]>>>0; // asm type annotation\n\t\ts = ( s^(s>>>30) )>>>0; // asm type annotation\n\t\ts = ( umul( s, MAGIC_MULTIPLIER_1 ) )>>>0; // asm type annotation\n\t\tstate[ i ] = ( ((state[i]>>>0)^s) + seed[j] + j )>>>0; /* non-linear */ // asm type annotation\n\n\t\ti += 1;\n\t\tj += 1;\n\t\tif ( i >= N ) {\n\t\t\tstate[ 0 ] = state[ N-1 ];\n\t\t\ti = 1;\n\t\t}\n\t\tif ( j >= M ) {\n\t\t\tj = 0;\n\t\t}\n\t}\n\tfor ( k = N-1; k > 0; k-- ) {\n\t\t/*\n\t\t* In the original C implementation (see `init_by_array()`),\n\t\t*\n\t\t* ```c\n\t\t* mt[i] = (mt[i]^((mt[i-1]^(mt[i-1]>>30))*1566083941UL)) - i;\n\t\t* ```\n\t\t*\n\t\t* In order to replicate this in JavaScript, we must emulate C-like multiplication of unsigned 32-bit integers.\n\t\t*/\n\t\ts = state[ i-1 ]>>>0; // asm type annotation\n\t\ts = ( s^(s>>>30) )>>>0; // asm type annotation\n\t\ts = ( umul( s, MAGIC_MULTIPLIER_2 ) )>>>0; // asm type annotation\n\t\tstate[ i ] = ( ((state[i]>>>0)^s) - i )>>>0; /* non-linear */ // asm type annotation\n\n\t\ti += 1;\n\t\tif ( i >= N ) {\n\t\t\tstate[ 0 ] = state[ N-1 ];\n\t\t\ti = 1;\n\t\t}\n\t}\n\t// Ensure a non-zero initial state array:\n\tstate[ 0 ] = TWO_32; // MSB (most significant bit) is 1\n\n\treturn state;\n}\n\n/**\n* Updates a PRNG's internal state by generating the next `N` words.\n*\n* @private\n* @param {Uint32Array} state - state array\n* @returns {Uint32Array} state array\n*/\nfunction twist( state ) {\n\tvar w;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tk = N - M;\n\tfor ( i = 0; i < k; i++ ) {\n\t\tw = ( state[i]&UPPER_MASK ) | ( state[i+1]&LOWER_MASK );\n\t\tstate[ i ] = state[ i+M ] ^ ( w>>>1 ) ^ MAG01[ w&ONE ];\n\t}\n\tj = N - 1;\n\tfor ( ; i < j; i++ ) {\n\t\tw = ( state[i]&UPPER_MASK ) | ( state[i+1]&LOWER_MASK );\n\t\tstate[ i ] = state[ i-k ] ^ ( w>>>1 ) ^ MAG01[ w&ONE ];\n\t}\n\tw = ( state[j]&UPPER_MASK ) | ( state[0]&LOWER_MASK );\n\tstate[ j ] = state[ M-1 ] ^ ( w>>>1 ) ^ MAG01[ w&ONE ];\n\treturn state;\n}\n\n\n// MAIN //\n\n/**\n* Returns a 32-bit Mersenne Twister pseudorandom number generator.\n*\n* ## Notes\n*\n* -   In contrast to the original C implementation, array seeds of length `1` are considered integer seeds. This ensures that the seed `[ 1234 ]` generates the same output as the seed `1234`. In the original C implementation, the two seeds would yield different output, which is **not** obvious from a user perspective.\n*\n* @param {Options} [options] - options\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} a seed must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integers less than or equal to the maximum unsigned 32-bit integer\n* @throws {RangeError} a numeric seed must be a positive integer less than or equal to the maximum unsigned 32-bit integer\n* @throws {TypeError} state must be a `Uint32Array`\n* @throws {Error} must provide a valid state\n* @throws {TypeError} `copy` option must be a boolean\n* @returns {PRNG} Mersenne Twister PRNG\n*\n* @example\n* var mt19937 = factory();\n*\n* var v = mt19937();\n* // returns <number>\n*\n* @example\n* // Return a seeded Mersenne Twister PRNG:\n* var mt19937 = factory({\n*     'seed': 1234\n* });\n*\n* var v = mt19937();\n* // returns 822569775\n*/\nfunction factory( options ) {\n\tvar STATE;\n\tvar state;\n\tvar opts;\n\tvar seed;\n\tvar slen;\n\tvar err;\n\n\topts = {};\n\tif ( arguments.length ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\t\topts.copy = options.copy;\n\t\t\tif ( !isBoolean( options.copy ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', options.copy ) );\n\t\t\t}\n\t\t}\n\t\tif ( hasOwnProp( options, 'state' ) ) {\n\t\t\tstate = options.state;\n\t\t\topts.state = true;\n\t\t\tif ( !isUint32Array( state ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a Uint32Array. Option: `%s`.', 'state', state ) );\n\t\t\t}\n\t\t\terr = verifyState( state, true );\n\t\t\tif ( err ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tif ( opts.copy === false ) {\n\t\t\t\tSTATE = state;\n\t\t\t} else {\n\t\t\t\tSTATE = new Uint32Array( state.length );\n\t\t\t\tgcopy( state.length, state, 1, STATE, 1 );\n\t\t\t}\n\t\t\t// Create a state \"view\":\n\t\t\tstate = new Uint32Array( STATE.buffer, STATE.byteOffset+((STATE_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), N );\n\n\t\t\t// Create a seed \"view\":\n\t\t\tseed = new Uint32Array( STATE.buffer, STATE.byteOffset+((SEED_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), state[ SEED_SECTION_OFFSET ] );\n\t\t}\n\t\t// If provided a PRNG state, we ignore the `seed` option...\n\t\tif ( seed === void 0 ) {\n\t\t\tif ( hasOwnProp( options, 'seed' ) ) {\n\t\t\t\tseed = options.seed;\n\t\t\t\topts.seed = true;\n\t\t\t\tif ( isPositiveInteger( seed ) ) {\n\t\t\t\t\tif ( seed > MAX_SEED ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid option. `%s` option must be a positive integer less than or equal to the maximum unsigned 32-bit integer. Option: `%u`.', 'seed', seed ) );\n\t\t\t\t\t}\n\t\t\t\t\tseed >>>= 0; // asm type annotation\n\t\t\t\t} else if ( isCollection( seed ) === false || seed.length < 1 ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%s`.', 'seed', seed ) );\n\t\t\t\t} else if ( seed.length === 1 ) {\n\t\t\t\t\tseed = seed[ 0 ];\n\t\t\t\t\tif ( !isPositiveInteger( seed ) ) {\n\t\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%s`.', 'seed', seed ) );\n\t\t\t\t\t}\n\t\t\t\t\tif ( seed > MAX_SEED ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%u`.', 'seed', seed ) );\n\t\t\t\t\t}\n\t\t\t\t\tseed >>>= 0; // asm type annotation\n\t\t\t\t} else {\n\t\t\t\t\tslen = seed.length;\n\t\t\t\t\tSTATE = new Uint32Array( STATE_FIXED_LENGTH+slen );\n\n\t\t\t\t\t// Initialize sections:\n\t\t\t\t\tSTATE[ 0 ] = STATE_ARRAY_VERSION;\n\t\t\t\t\tSTATE[ 1 ] = NUM_STATE_SECTIONS;\n\t\t\t\t\tSTATE[ STATE_SECTION_OFFSET ] = N;\n\t\t\t\t\tSTATE[ OTHER_SECTION_OFFSET ] = 1;\n\t\t\t\t\tSTATE[ OTHER_SECTION_OFFSET+1 ] = N; // state index\n\t\t\t\t\tSTATE[ SEED_SECTION_OFFSET ] = slen;\n\n\t\t\t\t\t// Copy the provided seed array to prevent external mutation, as mutation would lead to an inability to reproduce PRNG values according to the PRNG's stated seed:\n\t\t\t\t\tgcopy.ndarray( slen, seed, 1, 0, STATE, 1, SEED_SECTION_OFFSET+1 );\n\n\t\t\t\t\t// Create a state \"view\":\n\t\t\t\t\tstate = new Uint32Array( STATE.buffer, STATE.byteOffset+((STATE_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), N );\n\n\t\t\t\t\t// Create a seed \"view\":\n\t\t\t\t\tseed = new Uint32Array( STATE.buffer, STATE.byteOffset+((SEED_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), slen );\n\n\t\t\t\t\t// Initialize the internal PRNG state:\n\t\t\t\t\tstate = createState( state, N, SEED_ARRAY_INIT_STATE );\n\t\t\t\t\tstate = initState( state, N, seed, slen );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tseed = randuint32() >>> 0; // asm type annotation\n\t\t\t}\n\t\t}\n\t} else {\n\t\tseed = randuint32() >>> 0; // asm type annotation\n\t}\n\tif ( state === void 0 ) {\n\t\tSTATE = new Uint32Array( STATE_FIXED_LENGTH+1 );\n\n\t\t// Initialize sections:\n\t\tSTATE[ 0 ] = STATE_ARRAY_VERSION;\n\t\tSTATE[ 1 ] = NUM_STATE_SECTIONS;\n\t\tSTATE[ STATE_SECTION_OFFSET ] = N;\n\t\tSTATE[ OTHER_SECTION_OFFSET ] = 1;\n\t\tSTATE[ OTHER_SECTION_OFFSET+1 ] = N; // state index\n\t\tSTATE[ SEED_SECTION_OFFSET ] = 1;\n\t\tSTATE[ SEED_SECTION_OFFSET+1 ] = seed;\n\n\t\t// Create a state \"view\":\n\t\tstate = new Uint32Array( STATE.buffer, STATE.byteOffset+((STATE_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), N );\n\n\t\t// Create a seed \"view\":\n\t\tseed = new Uint32Array( STATE.buffer, STATE.byteOffset+((SEED_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), 1 );\n\n\t\t// Initialize the internal PRNG state:\n\t\tstate = createState( state, N, seed );\n\t}\n\t// Note: property order matters in order to maintain consistency of PRNG \"shape\" (hidden classes).\n\tsetReadOnly( mt19937, 'NAME', 'mt19937' );\n\tsetReadOnlyAccessor( mt19937, 'seed', getSeed );\n\tsetReadOnlyAccessor( mt19937, 'seedLength', getSeedLength );\n\tsetReadWriteAccessor( mt19937, 'state', getState, setState );\n\tsetReadOnlyAccessor( mt19937, 'stateLength', getStateLength );\n\tsetReadOnlyAccessor( mt19937, 'byteLength', getStateSize );\n\tsetReadOnly( mt19937, 'toJSON', toJSON );\n\tsetReadOnly( mt19937, 'MIN', 0 );\n\tsetReadOnly( mt19937, 'MAX', UINT32_MAX );\n\tsetReadOnly( mt19937, 'normalized', normalized );\n\n\tsetReadOnly( normalized, 'NAME', mt19937.NAME );\n\tsetReadOnlyAccessor( normalized, 'seed', getSeed );\n\tsetReadOnlyAccessor( normalized, 'seedLength', getSeedLength );\n\tsetReadWriteAccessor( normalized, 'state', getState, setState );\n\tsetReadOnlyAccessor( normalized, 'stateLength', getStateLength );\n\tsetReadOnlyAccessor( normalized, 'byteLength', getStateSize );\n\tsetReadOnly( normalized, 'toJSON', toJSON );\n\tsetReadOnly( normalized, 'MIN', 0.0 );\n\tsetReadOnly( normalized, 'MAX', MAX_NORMALIZED );\n\n\treturn mt19937;\n\n\t/**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMT19937} seed\n\t*/\n\tfunction getSeed() {\n\t\tvar len = STATE[ SEED_SECTION_OFFSET ];\n\t\treturn gcopy( len, seed, 1, new Uint32Array( len ), 1 );\n\t}\n\n\t/**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/\n\tfunction getSeedLength() {\n\t\treturn STATE[ SEED_SECTION_OFFSET ];\n\t}\n\n\t/**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/\n\tfunction getStateLength() {\n\t\treturn STATE.length;\n\t}\n\n\t/**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/\n\tfunction getStateSize() {\n\t\treturn STATE.byteLength;\n\t}\n\n\t/**\n\t* Returns the current PRNG state.\n\t*\n\t* ## Notes\n\t*\n\t* -   The PRNG state array is comprised of a preamble followed by `3` sections:\n\t*\n\t*     0.  preamble (version + number of sections)\n\t*     1.  internal PRNG state\n\t*     2.  auxiliary state information\n\t*     3.  PRNG seed\n\t*\n\t* -   The first element of the PRNG state array preamble is the state array schema version.\n\t*\n\t* -   The second element of the PRNG state array preamble is the number of state array sections (i.e., `3`).\n\t*\n\t* -   The first element of each section following the preamble specifies the section length. The remaining section elements comprise the section contents.\n\t*\n\t* @private\n\t* @returns {PRNGStateMT19937} current state\n\t*/\n\tfunction getState() {\n\t\tvar len = STATE.length;\n\t\treturn gcopy( len, STATE, 1, new Uint32Array( len ), 1 );\n\t}\n\n\t/**\n\t* Sets the PRNG state.\n\t*\n\t* ## Notes\n\t*\n\t* -   If PRNG state is \"shared\" (meaning a state array was provided during PRNG creation and **not** copied) and one sets the generator state to a state array having a different length, the PRNG does **not** update the existing shared state and, instead, points to the newly provided state array. In order to synchronize PRNG output according to the new shared state array, the state array for **each** relevant PRNG must be **explicitly** set.\n\t* -   If PRNG state is \"shared\" and one sets the generator state to a state array of the same length, the PRNG state is updated (along with the state of all other PRNGs sharing the PRNG's state array).\n\t*\n\t* @private\n\t* @param {PRNGStateMT19937} s - generator state\n\t* @throws {TypeError} must provide a `Uint32Array`\n\t* @throws {Error} must provide a valid state\n\t*/\n\tfunction setState( s ) {\n\t\tvar err;\n\t\tif ( !isUint32Array( s ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a Uint32Array. Value: `%s`.', s ) );\n\t\t}\n\t\terr = verifyState( s, false );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.copy === false ) {\n\t\t\tif ( opts.state && s.length === STATE.length ) {\n\t\t\t\tgcopy( s.length, s, 1, STATE, 1 ); // update current shared state\n\t\t\t} else {\n\t\t\t\tSTATE = s; // point to new shared state\n\t\t\t\topts.state = true; // setting this flag allows updating a shared state even if a state array was not provided at PRNG creation\n\t\t\t}\n\t\t} else {\n\t\t\t// Check if we can reuse allocated memory...\n\t\t\tif ( s.length !== STATE.length ) {\n\t\t\t\tSTATE = new Uint32Array( s.length ); // reallocate\n\t\t\t}\n\t\t\tgcopy( s.length, s, 1, STATE, 1 );\n\t\t}\n\t\t// Create a new state \"view\":\n\t\tstate = new Uint32Array( STATE.buffer, STATE.byteOffset+((STATE_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), N );\n\n\t\t// Create a new seed \"view\":\n\t\tseed = new Uint32Array( STATE.buffer, STATE.byteOffset+((SEED_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), STATE[ SEED_SECTION_OFFSET ] );\n\t}\n\n\t/**\n\t* Serializes the pseudorandom number generator as a JSON object.\n\t*\n\t* ## Notes\n\t*\n\t* -   `JSON.stringify()` implicitly calls this method when stringifying a PRNG.\n\t*\n\t* @private\n\t* @returns {Object} JSON representation\n\t*/\n\tfunction toJSON() {\n\t\tvar out = {};\n\t\tout.type = 'PRNG';\n\t\tout.name = mt19937.NAME;\n\t\tout.state = typedarray2json( STATE );\n\t\tout.params = [];\n\t\treturn out;\n\t}\n\n\t/**\n\t* Generates a pseudorandom integer on the interval \\\\( [0, 2^{32}) \\\\).\n\t*\n\t* @private\n\t* @returns {uinteger32} pseudorandom integer\n\t*\n\t* @example\n\t* var r = mt19937();\n\t* // returns <number>\n\t*/\n\tfunction mt19937() {\n\t\tvar r;\n\t\tvar i;\n\n\t\t// Retrieve the current state index:\n\t\ti = STATE[ OTHER_SECTION_OFFSET+1 ];\n\n\t\t// Determine whether we need to update the PRNG state:\n\t\tif ( i >= N ) {\n\t\t\tstate = twist( state );\n\t\t\ti = 0;\n\t\t}\n\t\t// Get the next word of \"raw\"/untempered state:\n\t\tr = state[ i ];\n\n\t\t// Update the state index:\n\t\tSTATE[ OTHER_SECTION_OFFSET+1 ] = i + 1;\n\n\t\t// Tempering transform to compensate for the reduced dimensionality of equidistribution:\n\t\tr ^= r >>> 11;\n\t\tr ^= ( r << 7 ) & TEMPERING_COEFFICIENT_1;\n\t\tr ^= ( r << 15 ) & TEMPERING_COEFFICIENT_2;\n\t\tr ^= r >>> 18;\n\n\t\treturn r >>> 0;\n\t}\n\n\t/**\n\t* Generates a pseudorandom number on the interval \\\\( [0, 1) \\\\).\n\t*\n\t* ## Notes\n\t*\n\t* -   The original C implementation credits Isaku Wada for this algorithm (2002/01/09).\n\t*\n\t* @private\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var r = normalized();\n\t* // returns <number>\n\t*/\n\tfunction normalized() {\n\t\tvar x = mt19937() >>> 5;\n\t\tvar y = mt19937() >>> 6;\n\t\treturn ( (x*TWO_26)+y ) * FLOAT64_NORMALIZATION_CONSTANT;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a collection.\n*\n* @module @stdlib/assert/is-collection\n*\n* @example\n* var isCollection = require( '@stdlib/assert/is-collection' );\n*\n* var bool = isCollection( [] );\n* // returns true\n*\n* bool = isCollection( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/array/max-typed-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a collection.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a collection\n*\n* @example\n* var bool = isCollection( [] );\n* // returns true\n*\n* @example\n* var bool = isCollection( {} );\n* // returns false\n*/\nfunction isCollection( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isCollection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite double-precision floating-point number is an integer.\n*\n* @module @stdlib/math/base/assert/is-integer\n*\n* @example\n* var isInteger = require( '@stdlib/math/base/assert/is-integer' );\n*\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* bool = isInteger( 3.14 );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( './../../../../base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is an integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an integer\n*\n* @example\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( 3.14 );\n* // returns false\n*/\nfunction isInteger( x ) {\n\treturn (floor(x) === x);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a double-precision floating-point number toward negative infinity.\n*\n* @module @stdlib/math/base/special/floor\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var v = floor( -4.2 );\n* // returns -5.0\n*\n* v = floor( 9.99999 );\n* // returns 9.0\n*\n* v = floor( 0.0 );\n* // returns 0.0\n*\n* v = floor( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a double-precision floating-point number toward negative infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = floor( -4.2 );\n* // returns -5.0\n*\n* @example\n* var v = floor( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = floor( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = floor( NaN );\n* // returns NaN\n*/\nvar floor = Math.floor; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = floor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a typed array.\n*\n* @module @stdlib/constants/array/max-typed-array-length\n*\n* @example\n* var MAX_TYPED_ARRAY_LENGTH = require( '@stdlib/constants/array/max-typed-array-length' );\n* // returns 9007199254740991\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a typed array.\n*\n* ```tex\n* 2^{53} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 9007199254740991\n*/\nvar MAX_TYPED_ARRAY_LENGTH = 9007199254740991;\n\n\n// EXPORTS //\n\nmodule.exports = MAX_TYPED_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive integer.\n*\n* @module @stdlib/assert/is-positive-integer\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\n*\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* bool = isPositiveInteger( null );\n* // returns false\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isObject;\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive integer\n*\n* @example\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( null );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an integer.\n*\n* @module @stdlib/assert/is-integer\n*\n* @example\n* var isInteger = require( '@stdlib/assert/is-integer' );\n*\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isInteger( -3.14 );\n* // returns false\n*\n* bool = isInteger( null );\n* // returns false\n*\n* @example\n* // Use interface to check for integer primitives...\n* var isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\n*\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* // Use interface to check for integer objects...\n* var isInteger = require( '@stdlib/assert/is-integer' ).isObject;\n*\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an integer\n*\n* @example\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isInteger( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isInteger( null );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar isInt = require( './integer.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having an integer value\n*\n* @example\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a number.\n*\n* @module @stdlib/assert/is-number\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' );\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( null );\n* // returns false\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' ).isObject;\n*\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a number\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( null );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar Number = require( '@stdlib/number/ctor' );\nvar test = require( './try2serialize.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\nfunction isNumber( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Number ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Number]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Constructor which returns a `Number` object.\n*\n* @module @stdlib/number/ctor\n*\n* @example\n* var Number = require( '@stdlib/number/ctor' );\n*\n* var v = new Number( 10.0 );\n* // returns <Number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nmodule.exports = Number; // eslint-disable-line stdlib/require-globals\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Number = require( '@stdlib/number/ctor' );\n\n\n// MAIN //\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Number.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar isInt = require( '@stdlib/math/base/assert/is-integer' );\n\n\n// MAIN //\n\n/**\n* Tests if a number primitive is an integer value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a number primitive is an integer value\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tvalue < PINF &&\n\t\tvalue > NINF &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* @module @stdlib/constants/float64/pinf\n* @type {number}\n*\n* @example\n* var FLOAT64_PINF = require( '@stdlib/constants/float64/pinf' );\n* // returns Infinity\n*/\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point positive infinity has the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.POSITIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_PINF = Number.POSITIVE_INFINITY; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_PINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* @module @stdlib/constants/float64/ninf\n* @type {number}\n*\n* @example\n* var FLOAT64_NINF = require( '@stdlib/constants/float64/ninf' );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar Number = require( '@stdlib/number/ctor' );\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point negative infinity has the bit sequence\n*\n* ```binarystring\n* 1 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.NEGATIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_NINF = Number.NEGATIVE_INFINITY;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_NINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar isInt = require( './integer.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having an integer value\n*\n* @example\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum safe double-precision floating-point integer.\n*\n* @module @stdlib/constants/float64/max-safe-integer\n* @type {number}\n*\n* @example\n* var FLOAT64_MAX_SAFE_INTEGER = require( '@stdlib/constants/float64/max-safe-integer' );\n* // returns 9007199254740991\n*/\n\n\n// MAIN //\n\n/**\n* Maximum safe double-precision floating-point integer.\n*\n* ## Notes\n*\n* The integer has the value\n*\n* ```tex\n* 2^{53} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 9007199254740991\n* @see [Safe Integers]{@link http://www.2ality.com/2013/10/safe-integers.html}\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_SAFE_INTEGER = 9007199254740991;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX_SAFE_INTEGER;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* @module @stdlib/constants/uint32/max\n* @type {uinteger32}\n*\n* @example\n* var UINT32_MAX = require( '@stdlib/constants/uint32/max' );\n* // returns 4294967295\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar UINT32_MAX = 4294967295;\n\n\n// EXPORTS //\n\nmodule.exports = UINT32_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 32-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint32\n*\n* @example\n* var ctor = require( '@stdlib/array/uint32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint32Array>\n*/\n\n// MODULES //\n\nvar hasUint32ArraySupport = require( '@stdlib/assert/has-uint32array-support' );\nvar builtin = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint32Array` support.\n*\n* @module @stdlib/assert/has-uint32array-support\n*\n* @example\n* var hasUint32ArraySupport = require( '@stdlib/assert/has-uint32array-support' );\n*\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint32ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint32Array = require( './../../is-uint32array' );\nvar UINT32_MAX = require( '@stdlib/constants/uint32/max' );\nvar GlobalUint32Array = require( './uint32array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint32Array` support\n*\n* @example\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT32_MAX+1, UINT32_MAX+2 ];\n\t\tarr = new GlobalUint32Array( arr );\n\t\tbool = (\n\t\t\tisUint32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT32_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint32Array === 'function' ) ? Uint32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint32Array === 'function' ) ? Uint32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 32-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the maximum value.\n*\n* @module @stdlib/math/base/special/max\n*\n* @example\n* var max = require( '@stdlib/math/base/special/max' );\n*\n* var v = max( 3.14, 4.2 );\n* // returns 4.2\n*\n* v = max( 3.14, NaN );\n* // returns NaN\n*\n* v = max( +0.0, -0.0 );\n* // returns +0.0\n*/\n\n// MODULES //\n\nvar max = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = max;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveZero = require( './../../../../base/assert/is-positive-zero' );\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Returns the maximum value.\n*\n* @param {number} x - first number\n* @param {number} y - second number\n* @returns {number} maximum value\n*\n* @example\n* var v = max( 3.14, 4.2 );\n* // returns 4.2\n*\n* @example\n* var v = max( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = max( +0.0, -0.0 );\n* // returns +0.0\n*/\nfunction max( x, y ) {\n\tif ( isnan( x ) || isnan( y ) ) {\n\t\treturn NaN;\n\t}\n\tif ( x === PINF || y === PINF ) {\n\t\treturn PINF;\n\t}\n\tif ( x === y && x === 0.0 ) {\n\t\tif ( isPositiveZero( x ) ) {\n\t\t\treturn x;\n\t\t}\n\t\treturn y;\n\t}\n\tif ( x > y ) {\n\t\treturn x;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = max;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a double-precision floating-point numeric value is positive zero.\n*\n* @module @stdlib/math/base/assert/is-positive-zero\n*\n* @example\n* var isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );\n*\n* var bool = isPositiveZero( 0.0 );\n* // returns true\n*\n* bool = isPositiveZero( -0.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is positive zero.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is positive zero\n*\n* @example\n* var bool = isPositiveZero( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveZero( -0.0 );\n* // returns false\n*/\nfunction isPositiveZero( x ) {\n\treturn (x === 0.0 && 1.0/x === PINF);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a double-precision floating-point numeric value is `NaN`.\n*\n* @module @stdlib/math/base/assert/is-nan\n*\n* @example\n* var isnan = require( '@stdlib/math/base/assert/is-nan' );\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 7.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is `NaN`.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 7.0 );\n* // returns false\n*/\nfunction isnan( x ) {\n\treturn ( x !== x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Perform C-like multiplication of two unsigned 32-bit integers.\n*\n* @module @stdlib/math/base/ops/umul\n*\n* @example\n* var umul = require( '@stdlib/math/base/ops/umul' );\n*\n* var v = umul( 10>>>0, 4>>>0 );\n* // returns 40\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\n// Define a mask for the least significant 16 bits (low word): 65535 => 0x0000ffff => 00000000000000001111111111111111\nvar LOW_WORD_MASK = 0x0000ffff>>>0; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Performs C-like multiplication of two unsigned 32-bit integers.\n*\n* ## Method\n*\n* -   To emulate C-like multiplication without the aid of 64-bit integers, we recognize that a 32-bit integer can be split into two 16-bit words\n*\n*     ```tex\n*     a = w_h*2^{16} + w_l\n*     ```\n*\n*     where \\\\( w_h \\\\) is the most significant 16 bits and \\\\( w_l \\\\) is the least significant 16 bits. For example, consider the maximum unsigned 32-bit integer \\\\( 2^{32}-1 \\\\)\n*\n*     ```binarystring\n*     11111111111111111111111111111111\n*     ```\n*\n*     The 16-bit high word is then\n*\n*     ```binarystring\n*     1111111111111111\n*     ```\n*\n*     and the 16-bit low word\n*\n*     ```binarystring\n*     1111111111111111\n*     ```\n*\n*     If we cast the high word to 32-bit precision and multiply by \\\\( 2^{16} \\\\) (equivalent to a 16-bit left shift), then the bit sequence is\n*\n*     ```binarystring\n*     11111111111111110000000000000000\n*     ```\n*\n*     Similarly, upon casting the low word to 32-bit precision, the bit sequence is\n*\n*     ```binarystring\n*     00000000000000001111111111111111\n*     ```\n*\n*     From the rules of binary addition, we recognize that adding the two 32-bit values for the high and low words will return our original value \\\\( 2^{32}-1 \\\\).\n*\n* -   Accordingly, the multiplication of two 32-bit integers can be expressed\n*\n*     ```tex\n*     \\begin{align*}\n*     a \\cdot b &= ( a_h \\cdot 2^{16} + a_l) \\cdot ( b_h \\cdot 2^{16} + b_l) \\\\\n*           &= a_l \\cdot b_l + a_h \\cdot b_l \\cdot 2^{16} + a_l \\cdot b_h \\cdot 2^{16} + (a_h \\cdot b_h) \\cdot 2^{32} \\\\\n*           &= a_l \\cdot b_l + (a_h \\cdot b_l + a_l \\cdot b_h) \\cdot 2^{16} + (a_h \\cdot b_h) \\cdot 2^{32}\n*     \\end{align*}\n*     ```\n*\n* -   We note that multiplying (dividing) an integer by \\\\( 2^n \\\\) is equivalent to performing a left (right) shift of \\\\( n \\\\) bits.\n*\n* -   Further, as we want to return an integer of the same precision, for a 32-bit integer, the return value will be modulo \\\\( 2^{32} \\\\). Stated another way, we only care about the low word of a 64-bit result.\n*\n* -   Accordingly, the last term, being evenly divisible by \\\\( 2^{32} \\\\), drops from the equation leaving the remaining two terms as the remainder.\n*\n*     ```tex\n*     a \\cdot b = a_l \\cdot b_l + (a_h \\cdot b_l + a_l \\cdot b_h) << 16\n*     ```\n*\n* -   Lastly, the second term in the above equation contributes to the middle bits and may cause the product to \"overflow\". However, we can disregard (`>>>0`) overflow bits due to modulo arithmetic, as discussed earlier with regard to the term involving the partial product of high words.\n*\n* @param {uinteger32} a - integer\n* @param {uinteger32} b - integer\n* @returns {uinteger32} product\n*\n* @example\n* var v = umul( 10>>>0, 4>>>0 );\n* // returns 40\n*/\nfunction umul( a, b ) {\n\tvar lbits;\n\tvar mbits;\n\tvar ha;\n\tvar hb;\n\tvar la;\n\tvar lb;\n\n\ta >>>= 0; // asm type annotation\n\tb >>>= 0; // asm type annotation\n\n\t// Isolate the most significant 16-bits:\n\tha = ( a>>>16 )>>>0; // asm type annotation\n\thb = ( b>>>16 )>>>0; // asm type annotation\n\n\t// Isolate the least significant 16-bits:\n\tla = ( a&LOW_WORD_MASK )>>>0; // asm type annotation\n\tlb = ( b&LOW_WORD_MASK )>>>0; // asm type annotation\n\n\t// Compute partial sums:\n\tlbits = ( la*lb )>>>0; // asm type annotation; no integer overflow possible\n\tmbits = ( ((ha*lb) + (la*hb))<<16 )>>>0; // asm type annotation; possible integer overflow\n\n\t// The final `>>>0` converts the intermediate sum to an unsigned integer (possible integer overflow during sum):\n\treturn ( lbits + mbits )>>>0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nmodule.exports = umul;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* BLAS level 1 routine to copy values from `x` into `y`.\n*\n* @module @stdlib/blas/base/gcopy\n*\n* @example\n* var gcopy = require( '@stdlib/blas/base/gcopy' );\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy( x.length, x, 1, y, 1 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* @example\n* var gcopy = require( '@stdlib/blas/base/gcopy' );\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy.ndarray( x.length, x, 1, 0, y, 1, 0 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arraylike2object = require( '@stdlib/array/base/arraylike2object' );\nvar accessors = require( './accessors.js' );\n\n\n// VARIABLES //\n\nvar M = 8;\n\n\n// MAIN //\n\n/**\n* Copies values from `x` into `y`.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Collection} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Collection} y - output array\n* @param {integer} strideY - `y` stride length\n* @returns {Collection} output array\n*\n* @example\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy( x.length, x, 1, y, 1 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction gcopy( N, x, strideX, y, strideY ) {\n\tvar ix;\n\tvar iy;\n\tvar ox;\n\tvar oy;\n\tvar m;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tox = arraylike2object( x );\n\toy = arraylike2object( y );\n\tif ( ox.accessorProtocol || oy.accessorProtocol ) {\n\t\tif ( strideX < 0 ) {\n\t\t\tix = (1-N) * strideX;\n\t\t} else {\n\t\t\tix = 0;\n\t\t}\n\t\tif ( strideY < 0 ) {\n\t\t\tiy = (1-N) * strideY;\n\t\t} else {\n\t\t\tiy = 0;\n\t\t}\n\t\taccessors( N, ox, strideX, ix, oy, strideY, iy );\n\t\treturn oy.data;\n\t}\n\t// Use unrolled loops if both strides are equal to `1`...\n\tif ( strideX === 1 && strideY === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\ty[ i ] = x[ i ];\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn y;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\ty[ i ] = x[ i ];\n\t\t\ty[ i+1 ] = x[ i+1 ];\n\t\t\ty[ i+2 ] = x[ i+2 ];\n\t\t\ty[ i+3 ] = x[ i+3 ];\n\t\t\ty[ i+4 ] = x[ i+4 ];\n\t\t\ty[ i+5 ] = x[ i+5 ];\n\t\t\ty[ i+6 ] = x[ i+6 ];\n\t\t\ty[ i+7 ] = x[ i+7 ];\n\t\t}\n\t\treturn y;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] = x[ ix ];\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gcopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert an array-like object to an object likely to have the same \"shape\".\n*\n* @module @stdlib/array/base/arraylike2object\n*\n* @example\n* var arraylike2object = require( '@stdlib/array/base/arraylike2object' );\n*\n* var obj = arraylike2object( [ 1, 2, 3, 4 ] );\n* // returns {...}\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isAccessorArray = require( './../../../base/assert/is-accessor-array' );\nvar getter = require( './../../../base/getter' );\nvar setter = require( './../../../base/setter' );\nvar accessorGetter = require( './../../../base/accessor-getter' );\nvar accessorSetter = require( './../../../base/accessor-setter' );\nvar dtype = require( './../../../dtype' );\n\n\n// MAIN //\n\n/**\n* Converts an array-like to an object likely to have the same \"shape\".\n*\n* ## Notes\n*\n* -   This function is intended as a potential performance optimization. In V8, for example, even if two objects share common properties, if those properties were added in different orders or if one object has additional properties not shared by the other object, then those objects will have different \"hidden\" classes. If a function is provided many objects having different \"shapes\", some JavaScript VMs (e.g., V8) will consider the function \"megamorphic\" and fail to perform various runtime optimizations. Accordingly, the intent of this function is to standardize the \"shape\" of the object holding array meta data to ensure that internal functions operating on arrays are provided consistent argument \"shapes\".\n*\n* -   The returned object has the following properties:\n*\n*     -   **data**: reference to the input array.\n*     -   **dtype**: array data type.\n*     -   **accessorProtocol**: `boolean` indicating whether the input array uses accessors for getting and setting elements.\n*     -   **accessors**: a two-element array whose first element is an accessor for retrieving an array element and whose second element is an accessor for setting an array element.\n*\n* @param {Collection} x - array-like object\n* @returns {Object} object containing array meta data\n*\n* @example\n* var obj = arraylike2object( [ 1, 2, 3, 4 ] );\n* // returns {...}\n*/\nfunction arraylike2object( x ) {\n\tvar dt = dtype( x );\n\tif ( isAccessorArray( x ) ) {\n\t\treturn {\n\t\t\t'data': x,\n\t\t\t'dtype': dt,\n\t\t\t'accessorProtocol': true,\n\t\t\t'accessors': [\n\t\t\t\taccessorGetter( dt ),\n\t\t\t\taccessorSetter( dt )\n\t\t\t]\n\t\t};\n\t}\n\treturn {\n\t\t'data': x,\n\t\t'dtype': dt,\n\t\t'accessorProtocol': false,\n\t\t'accessors': [\n\t\t\tgetter( dt ),\n\t\t\tsetter( dt )\n\t\t]\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = arraylike2object;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if an array-like object supports the accessor (get/set) protocol.\n*\n* @module @stdlib/array/base/assert/is-accessor-array\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128array' );\n* var isAccessorArray = require( '@stdlib/array/base/assert/is-accessor-array' );\n*\n* var bool = isAccessorArray( new Complex128Array( 10 ) );\n* // returns true\n*\n* bool = isAccessorArray( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar TYPE = 'function';\n\n\n// MAIN //\n\n/**\n* Tests if an array-like object supports the accessor (get/set) protocol.\n*\n* @param {Object} value - value to test\n* @returns {boolean} boolean indicating whether a value is an accessor array\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var bool = isAccessorArray( new Complex128Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isAccessorArray( [] );\n* // returns false\n*/\nfunction isAccessorArray( value ) {\n\treturn ( typeof value.get === TYPE && typeof value.set === TYPE ); // eslint-disable-line valid-typeof\n}\n\n\n// EXPORTS //\n\nmodule.exports = isAccessorArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an accessor function for retrieving an element from an indexed array-like object.\n*\n* @module @stdlib/array/base/getter\n*\n* @example\n* var dtype = require( '@stdlib/array/dtype' );\n* var getter = require( '@stdlib/array/base/getter' );\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var get = getter( dtype( arr ) );\n* var v = get( arr, 2 );\n* // returns 3\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar GETTERS = {\n\t'float64': getFloat64,\n\t'float32': getFloat32,\n\t'int32': getInt32,\n\t'int16': getInt16,\n\t'int8': getInt8,\n\t'uint32': getUint32,\n\t'uint16': getUint16,\n\t'uint8': getUint8,\n\t'uint8c': getUint8c,\n\t'generic': getGeneric,\n\t'default': getArrayLike\n};\n\n\n// FUNCTIONS //\n\n/**\n* Returns an element from a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getFloat64( arr, 2 );\n* // returns 3.0\n*/\nfunction getFloat64( arr, idx ) {\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Float32Array = require( '@stdlib/array/float32' );\n*\n* var arr = new Float32Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getFloat32( arr, 2 );\n* // returns 3.0\n*/\nfunction getFloat32( arr, idx ) {\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Int32Array = require( '@stdlib/array/int32' );\n*\n* var arr = new Int32Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getInt32( arr, 2 );\n* // returns 3\n*/\nfunction getInt32( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Int16Array = require( '@stdlib/array/int16' );\n*\n* var arr = new Int16Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getInt16( arr, 2 );\n* // returns 3\n*/\nfunction getInt16( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n*\n* var arr = new Int8Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getInt8( arr, 2 );\n* // returns 3\n*/\nfunction getInt8( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Uint32Array = require( '@stdlib/array/uint32' );\n*\n* var arr = new Uint32Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint32( arr, 2 );\n* // returns 3\n*/\nfunction getUint32( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Uint16Array = require( '@stdlib/array/uint16' );\n*\n* var arr = new Uint16Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint16( arr, 2 );\n* // returns 3\n*/\nfunction getUint16( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Uint8Array = require( '@stdlib/array/uint8' );\n*\n* var arr = new Uint8Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint8( arr, 2 );\n* // returns 3\n*/\nfunction getUint8( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Uint8ClampedArray = require( '@stdlib/array/uint8c' );\n*\n* var arr = new Uint8ClampedArray( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint8c( arr, 2 );\n* // returns 3\n*/\nfunction getUint8c( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a generic `Array`.\n*\n* @private\n* @param {Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element value\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var v = getGeneric( arr, 2 );\n* // returns 3\n*/\nfunction getGeneric( arr, idx ) {\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from an indexed array-like object.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element value\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var v = getArrayLike( arr, 2 );\n* // returns 3\n*/\nfunction getArrayLike( arr, idx ) {\n\treturn arr[ idx ];\n}\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for retrieving an element from an indexed array-like object.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* var dtype = require( '@stdlib/array/dtype' );\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var get = getter( dtype( arr ) );\n* var v = get( arr, 2 );\n* // returns 3\n*/\nfunction getter( dtype ) {\n\tvar f = GETTERS[ dtype ];\n\tif ( typeof f === 'function' ) {\n\t\treturn f;\n\t}\n\treturn GETTERS.default;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an accessor function for setting an element in an indexed array-like object.\n*\n* @module @stdlib/array/base/setter\n*\n* @example\n* var dtype = require( '@stdlib/array/dtype' );\n* var set = require( '@stdlib/array/base/setter' );\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var set = setter( dtype( arr ) );\n* set( arr, 2, 10 );\n*\n* var v = arr[ 2 ];\n* // returns 10\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar SETTERS = {\n\t'float64': setFloat64,\n\t'float32': setFloat32,\n\t'int32': setInt32,\n\t'int16': setInt16,\n\t'int8': setInt8,\n\t'uint32': setUint32,\n\t'uint16': setUint16,\n\t'uint8': setUint8,\n\t'uint8c': setUint8c,\n\t'generic': setGeneric,\n\t'default': setArrayLike\n};\n\n\n// FUNCTIONS //\n\n/**\n* Sets an element in a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( 4 );\n*\n* setFloat64( arr, 2, 3.0 );\n*\n* var v = arr[ 2 ];\n* // returns 3.0\n*/\nfunction setFloat64( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Float32Array = require( '@stdlib/array/float32' );\n*\n* var arr = new Float32Array( 4 );\n*\n* setFloat32( arr, 2, 3.0 );\n*\n* var v = arr[ 2 ];\n* // returns 3.0\n*/\nfunction setFloat32( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Int32Array = require( '@stdlib/array/int32' );\n*\n* var arr = new Int32Array( 4 );\n*\n* setInt32( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setInt32( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Int16Array = require( '@stdlib/array/int16' );\n*\n* var arr = new Int16Array( 4 );\n*\n* setInt16( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setInt16( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n*\n* var arr = new Int8Array( 4 );\n*\n* setInt8( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setInt8( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Uint32Array = require( '@stdlib/array/uint32' );\n*\n* var arr = new Uint32Array( 4 );\n*\n* setUint32( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setUint32( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Uint16Array = require( '@stdlib/array/uint16' );\n*\n* var arr = new Uint16Array( 4 );\n*\n* setUint16( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setUint16( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Uint8Array = require( '@stdlib/array/uint8' );\n*\n* var arr = new Uint8Array( 4 );\n*\n* setUint8( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setUint8( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* var Uint8ClampedArray = require( '@stdlib/array/uint8c' );\n*\n* var arr = new Uint8ClampedArray( 4 );\n*\n* setUint8c( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setUint8c( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a generic `Array`.\n*\n* @private\n* @param {Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* setGeneric( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setGeneric( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in an indexed array-like object.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* setArrayLike( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setArrayLike( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for setting an element in an indexed array-like object.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* var dtype = require( '@stdlib/array/dtype' );\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var set = setter( dtype( arr ) );\n* set( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setter( dtype ) {\n\tvar f = SETTERS[ dtype ];\n\tif ( typeof f === 'function' ) {\n\t\treturn f;\n\t}\n\treturn SETTERS.default;\n}\n\n\n// EXPORTS //\n\nmodule.exports = setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an accessor function for retrieving an element from an array-like object supporting the get/set protocol.\n*\n* @module @stdlib/array/base/accessor-getter\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var dtype = require( '@stdlib/array/dtype' );\n* var getter = require( '@stdlib/array/base/accessor-getter' );\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var get = getter( dtype( arr ) );\n* var v = get( arr, 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 3.0\n*\n* var im = imagf( v );\n* // returns 4.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar GETTERS = {\n\t'complex128': getComplex128,\n\t'complex64': getComplex64,\n\t'default': getArrayLike\n};\n\n\n// FUNCTIONS //\n\n/**\n* Returns an element from a `Complex128Array`.\n*\n* @private\n* @param {Complex128Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getComplex128( arr, 1 );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 3.0\n*\n* var im = imag( v );\n* // returns 4.0\n*/\nfunction getComplex128( arr, idx ) {\n\treturn arr.get( idx );\n}\n\n/**\n* Returns an element from a `Complex64Array`.\n*\n* @private\n* @param {Complex64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getComplex64( arr, 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 3.0\n*\n* var im = imagf( v );\n* // returns 4.0\n*/\nfunction getComplex64( arr, idx ) {\n\treturn arr.get( idx );\n}\n\n/**\n* Returns an element from an array-like object supporting the get/set protocol.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element value\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* function get( idx ) {\n*    return arr[ idx ];\n* }\n*\n* function set( value, idx ) {\n*    arr[ idx ] = value;\n* }\n*\n* arr.get = get;\n* arr.set = set;\n*\n* var v = getArrayLike( arr, 2 );\n* // returns 3\n*/\nfunction getArrayLike( arr, idx ) {\n\treturn arr.get( idx );\n}\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for retrieving an element from an array-like object supporting the get/set protocol.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var dtype = require( '@stdlib/array/dtype' );\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var get = getter( dtype( arr ) );\n* var v = get( arr, 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 3.0\n*\n* var im = imagf( v );\n* // returns 4.0\n*/\nfunction getter( dtype ) {\n\tvar f = GETTERS[ dtype ];\n\tif ( typeof f === 'function' ) {\n\t\treturn f;\n\t}\n\treturn GETTERS.default;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an accessor function for setting an element in an array-like object supporting the get/set protocol.\n*\n* @module @stdlib/array/base/accessor-setter\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var dtype = require( '@stdlib/array/dtype' );\n* var setter = require( '@stdlib/array/base/accessor-setter' );\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var set = setter( dtype( arr ) );\n* set( arr, 1, new Complex64( 10.0, 11.0 ) );\n*\n* var v = arr.get( 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 10.0\n*\n* var im = imagf( v );\n* // returns 11.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar SETTERS = {\n\t'complex128': setComplex128,\n\t'complex64': setComplex64,\n\t'default': setArrayLike\n};\n\n\n// FUNCTIONS //\n\n/**\n* Sets an element in a `Complex128Array`.\n*\n* @private\n* @param {Complex128Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( [ 1, 2, 3, 4 ] );\n*\n* setComplex128( arr, 1, new Complex128( 10.0, 11.0 ) );\n* var v = arr.get( 1 );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 10.0\n*\n* var im = imag( v );\n* // returns 11.0\n*/\nfunction setComplex128( arr, idx, value ) {\n\tarr.set( value, idx );\n}\n\n/**\n* Sets an element in a `Complex64Array`.\n*\n* @private\n* @param {Complex64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* setComplex64( arr, 1, new Complex64( 10.0, 11.0 ) );\n* var v = arr.get( 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 10.0\n*\n* var im = imagf( v );\n* // returns 11.0\n*/\nfunction setComplex64( arr, idx, value ) {\n\tarr.set( value, idx );\n}\n\n/**\n* Sets an element in an array-like object supporting the get/set protocol.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* function get( idx ) {\n*    return arr[ idx ];\n* }\n*\n* function set( value, idx ) {\n*    arr[ idx ] = value;\n* }\n*\n* arr.get = get;\n* arr.set = set;\n*\n* setArrayLike( arr, 2, 10 );\n*\n* var v = arr[ 2 ];\n* // returns 10\n*/\nfunction setArrayLike( arr, idx, value ) {\n\tarr.set( value, idx );\n}\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for setting an element in an array-like object supporting the get/set protocol.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var dtype = require( '@stdlib/array/dtype' );\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var set = setter( dtype( arr ) );\n* set( arr, 1, new Complex64( 10.0, 11.0 ) );\n*\n* var v = arr.get( 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 10.0\n*\n* var im = imagf( v );\n* // returns 11.0\n*/\nfunction setter( dtype ) {\n\tvar f = SETTERS[ dtype ];\n\tif ( typeof f === 'function' ) {\n\t\treturn f;\n\t}\n\treturn SETTERS.default;\n}\n\n\n// EXPORTS //\n\nmodule.exports = setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the data type of an array.\n*\n* @module @stdlib/array/dtype\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var dtype = require( '@stdlib/array/dtype' );\n*\n* var arr = new Float64Array( 10 );\n*\n* var dt = dtype( arr );\n* // returns 'float64'\n*\n* dt = dtype( {} );\n* // returns null\n*\n* dt = dtype( 'beep' );\n* // returns null\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBuffer = require( '@stdlib/assert/is-buffer' );\nvar isArray = require( '@stdlib/assert/is-array' );\nvar constructorName = require( '@stdlib/utils/constructor-name' );\nvar ctor2dtype = require( './ctor2dtype.js' );\nvar CTORS = require( './ctors.js' );\nvar DTYPES = require( './dtypes.js' );\n\n\n// VARIABLES //\n\nvar NTYPES = DTYPES.length;\n\n\n// MAIN //\n\n/**\n* Returns the data type of an array.\n*\n* @param {*} value - input value\n* @returns {(string|null)} data type\n*\n* @example\n* var dt = dtype( [ 1, 2, 3 ] );\n* // returns 'generic'\n*\n* var dt = dtype( 'beep' );\n* // returns null\n*/\nfunction dtype( value ) {\n\tvar i;\n\tif ( isArray( value ) ) {\n\t\treturn 'generic';\n\t}\n\tif ( isBuffer( value ) ) {\n\t\treturn null;\n\t}\n\tfor ( i = 0; i < NTYPES; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn DTYPES[ i ];\n\t\t}\n\t}\n\t// If the above failed, fall back to a more robust (and significantly slower) means for resolving underlying data types:\n\treturn ctor2dtype[ constructorName( value ) ] || null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dtype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n// Mapping from array constructors to data types...\nvar ctor2dtypes = {\n\t'Float32Array': 'float32',\n\t'Float64Array': 'float64',\n\t'Array': 'generic',\n\t'Int16Array': 'int16',\n\t'Int32Array': 'int32',\n\t'Int8Array': 'int8',\n\t'Uint16Array': 'uint16',\n\t'Uint32Array': 'uint32',\n\t'Uint8Array': 'uint8',\n\t'Uint8ClampedArray': 'uint8c',\n\t'Complex64Array': 'complex64',\n\t'Complex128Array': 'complex128',\n\t'BooleanArray': 'bool'\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctor2dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float64Array = require( './../../float64' );\nvar Float32Array = require( './../../float32' );\nvar Uint32Array = require( './../../uint32' );\nvar Int32Array = require( './../../int32' );\nvar Uint16Array = require( './../../uint16' );\nvar Int16Array = require( './../../int16' );\nvar Uint8Array = require( './../../uint8' );\nvar Uint8ClampedArray = require( './../../uint8c' );\nvar Int8Array = require( './../../int8' );\nvar Complex64Array = require( './../../complex64' );\nvar Complex128Array = require( './../../complex128' );\nvar BooleanArray = require( './../../bool' );\n\n\n// MAIN //\n\n// Note: order should match `dtypes` order\nvar CTORS = [\n\tFloat64Array,\n\tFloat32Array,\n\tInt32Array,\n\tUint32Array,\n\tInt16Array,\n\tUint16Array,\n\tInt8Array,\n\tUint8Array,\n\tUint8ClampedArray,\n\tComplex64Array,\n\tComplex128Array,\n\tBooleanArray\n];\n\n\n// EXPORTS //\n\nmodule.exports = CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of double-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float64\n*\n* @example\n* var ctor = require( '@stdlib/array/float64' );\n*\n* var arr = new ctor( 10 );\n* // returns <Float64Array>\n*/\n\n// MODULES //\n\nvar hasFloat64ArraySupport = require( '@stdlib/assert/has-float64array-support' );\nvar builtin = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat64ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Float64Array` support.\n*\n* @module @stdlib/assert/has-float64array-support\n*\n* @example\n* var hasFloat64ArraySupport = require( '@stdlib/assert/has-float64array-support' );\n*\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasFloat64ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFloat64Array = require( './../../is-float64array' );\nvar GlobalFloat64Array = require( './float64array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Float64Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float64Array` support\n*\n* @example\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat64ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat64Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat64Array( [ 1.0, 3.14, -3.14, NaN ] );\n\t\tbool = (\n\t\t\tisFloat64Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.14 &&\n\t\t\tarr[ 2 ] === -3.14 &&\n\t\t\tarr[ 3 ] !== arr[ 3 ]\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Float64Array.\n*\n* @module @stdlib/assert/is-float64array\n*\n* @example\n* var isFloat64Array = require( '@stdlib/assert/is-float64array' );\n*\n* var bool = isFloat64Array( new Float64Array( 10 ) );\n* // returns true\n*\n* bool = isFloat64Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isFloat64Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFloat64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasFloat64Array = ( typeof Float64Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float64Array\n*\n* @example\n* var bool = isFloat64Array( new Float64Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat64Array( [] );\n* // returns false\n*/\nfunction isFloat64Array( value ) {\n\treturn (\n\t\t( hasFloat64Array && value instanceof Float64Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float64Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFloat64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float64Array === 'function' ) ? Float64Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float64Array === 'function' ) ? Float64Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of double-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of single-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float32\n*\n* @example\n* var ctor = require( '@stdlib/array/float32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Float32Array>\n*/\n\n// MODULES //\n\nvar hasFloat32ArraySupport = require( '@stdlib/assert/has-float32array-support' );\nvar builtin = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Float32Array` support.\n*\n* @module @stdlib/assert/has-float32array-support\n*\n* @example\n* var hasFloat32ArraySupport = require( '@stdlib/assert/has-float32array-support' );\n*\n* var bool = hasFloat32ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasFloat32ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFloat32Array = require( './../../is-float32array' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar GlobalFloat32Array = require( './float32array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Float32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float32Array` support\n*\n* @example\n* var bool = hasFloat32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat32Array( [ 1.0, 3.14, -3.14, 5.0e40 ] );\n\t\tbool = (\n\t\t\tisFloat32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.140000104904175 &&\n\t\t\tarr[ 2 ] === -3.140000104904175 &&\n\t\t\tarr[ 3 ] === PINF\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Float32Array.\n*\n* @module @stdlib/assert/is-float32array\n*\n* @example\n* var isFloat32Array = require( '@stdlib/assert/is-float32array' );\n*\n* var bool = isFloat32Array( new Float32Array( 10 ) );\n* // returns true\n*\n* bool = isFloat32Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isFloat32Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFloat32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasFloat32Array = ( typeof Float32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float32Array\n*\n* @example\n* var bool = isFloat32Array( new Float32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat32Array( [] );\n* // returns false\n*/\nfunction isFloat32Array( value ) {\n\treturn (\n\t\t( hasFloat32Array && value instanceof Float32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFloat32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float32Array === 'function' ) ? Float32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float32Array === 'function' ) ? Float32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of single-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int32\n*\n* @example\n* var ctor = require( '@stdlib/array/int32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Int32Array>\n*/\n\n// MODULES //\n\nvar hasInt32ArraySupport = require( '@stdlib/assert/has-int32array-support' );\nvar builtin = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Int32Array` support.\n*\n* @module @stdlib/assert/has-int32array-support\n*\n* @example\n* var hasInt32ArraySupport = require( '@stdlib/assert/has-int32array-support' );\n*\n* var bool = hasInt32ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasInt32ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasInt32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInt32Array = require( './../../is-int32array' );\nvar INT32_MAX = require( '@stdlib/constants/int32/max' );\nvar INT32_MIN = require( '@stdlib/constants/int32/min' );\nvar GlobalInt32Array = require( './int32array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Int32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int32Array` support\n*\n* @example\n* var bool = hasInt32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt32Array( [ 1, 3.14, -3.14, INT32_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&      // truncation\n\t\t\tarr[ 2 ] === -3 &&     // truncation\n\t\t\tarr[ 3 ] === INT32_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasInt32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an Int32Array.\n*\n* @module @stdlib/assert/is-int32array\n*\n* @example\n* var isInt32Array = require( '@stdlib/assert/is-int32array' );\n*\n* var bool = isInt32Array( new Int32Array( 10 ) );\n* // returns true\n*\n* bool = isInt32Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isInt32Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isInt32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasInt32Array = ( typeof Int32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int32Array\n*\n* @example\n* var bool = isInt32Array( new Int32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt32Array( [] );\n* // returns false\n*/\nfunction isInt32Array( value ) {\n\treturn (\n\t\t( hasInt32Array && value instanceof Int32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInt32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum signed 32-bit integer.\n*\n* @module @stdlib/constants/int32/max\n* @type {integer32}\n*\n* @example\n* var INT32_MAX = require( '@stdlib/constants/int32/max' );\n* // returns 2147483647\n*/\n\n\n// MAIN //\n\n/**\n* Maximum signed 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{31} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 01111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 2147483647\n*/\nvar INT32_MAX = 2147483647|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = INT32_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 32-bit integer.\n*\n* @module @stdlib/constants/int32/min\n* @type {integer32}\n*\n* @example\n* var INT32_MIN = require( '@stdlib/constants/int32/min' );\n* // returns -2147483648\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -(2^{31})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 10000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -2147483648\n*/\nvar INT32_MIN = -2147483648|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = INT32_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int32Array === 'function' ) ? Int32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int32Array === 'function' ) ? Int32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 16-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint16\n*\n* @example\n* var ctor = require( '@stdlib/array/uint16' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint16Array>\n*/\n\n// MODULES //\n\nvar hasUint16ArraySupport = require( '@stdlib/assert/has-uint16array-support' );\nvar builtin = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint16Array` support.\n*\n* @module @stdlib/assert/has-uint16array-support\n*\n* @example\n* var hasUint16ArraySupport = require( '@stdlib/assert/has-uint16array-support' );\n*\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint16ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint16Array = require( './../../is-uint16array' );\nvar UINT16_MAX = require( '@stdlib/constants/uint16/max' );\nvar GlobalUint16Array = require( './uint16array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint16Array` support\n*\n* @example\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT16_MAX+1, UINT16_MAX+2 ];\n\t\tarr = new GlobalUint16Array( arr );\n\t\tbool = (\n\t\t\tisUint16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT16_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Uint16Array.\n*\n* @module @stdlib/assert/is-uint16array\n*\n* @example\n* var isUint16Array = require( '@stdlib/assert/is-uint16array' );\n*\n* var bool = isUint16Array( new Uint16Array( 10 ) );\n* // returns true\n*\n* bool = isUint16Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUint16Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUint16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint16Array = ( typeof Uint16Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint16Array\n*\n* @example\n* var bool = isUint16Array( new Uint16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint16Array( [] );\n* // returns false\n*/\nfunction isUint16Array( value ) {\n\treturn (\n\t\t( hasUint16Array && value instanceof Uint16Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint16Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 16-bit integer.\n*\n* @module @stdlib/constants/uint16/max\n* @type {integer32}\n*\n* @example\n* var UINT16_MAX = require( '@stdlib/constants/uint16/max' );\n* // returns 65535\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{16} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 1111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 65535\n*/\nvar UINT16_MAX = 65535|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = UINT16_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint16Array === 'function' ) ? Uint16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint16Array === 'function' ) ? Uint16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 16-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int16\n*\n* @example\n* var ctor = require( '@stdlib/array/int16' );\n*\n* var arr = new ctor( 10 );\n* // returns <Int16Array>\n*/\n\n// MODULES //\n\nvar hasInt16ArraySupport = require( '@stdlib/assert/has-int16array-support' );\nvar builtin = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Int16Array` support.\n*\n* @module @stdlib/assert/has-int16array-support\n*\n* @example\n* var hasInt16ArraySupport = require( '@stdlib/assert/has-int16array-support' );\n*\n* var bool = hasInt16ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasInt16ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasInt16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInt16Array = require( './../../is-int16array' );\nvar INT16_MAX = require( '@stdlib/constants/int16/max' );\nvar INT16_MIN = require( '@stdlib/constants/int16/min' );\nvar GlobalInt16Array = require( './int16array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Int16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int16Array` support\n*\n* @example\n* var bool = hasInt16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt16Array( [ 1, 3.14, -3.14, INT16_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&      // truncation\n\t\t\tarr[ 2 ] === -3 &&     // truncation\n\t\t\tarr[ 3 ] === INT16_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasInt16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an Int16Array.\n*\n* @module @stdlib/assert/is-int16array\n*\n* @example\n* var isInt16Array = require( '@stdlib/assert/is-int16array' );\n*\n* var bool = isInt16Array( new Int16Array( 10 ) );\n* // returns true\n*\n* bool = isInt16Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isInt16Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isInt16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasInt16Array = ( typeof Int16Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int16Array\n*\n* @example\n* var bool = isInt16Array( new Int16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt16Array( [] );\n* // returns false\n*/\nfunction isInt16Array( value ) {\n\treturn (\n\t\t( hasInt16Array && value instanceof Int16Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int16Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInt16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum signed 16-bit integer.\n*\n* @module @stdlib/constants/int16/max\n* @type {integer32}\n*\n* @example\n* var INT16_MAX = require( '@stdlib/constants/int16/max' );\n* // returns 32767\n*/\n\n\n// MAIN //\n\n/**\n* Maximum signed 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{15} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 32767\n*/\nvar INT16_MAX = 32767|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = INT16_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 16-bit integer.\n*\n* @module @stdlib/constants/int16/min\n* @type {integer32}\n*\n* @example\n* var INT16_MIN = require( '@stdlib/constants/int16/min' );\n* // returns -32768\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -(2^{15})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 1000000000000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -32768\n*/\nvar INT16_MIN = -32768|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = INT16_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int16Array === 'function' ) ? Int16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int16Array === 'function' ) ? Int16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint8\n*\n* @example\n* var ctor = require( '@stdlib/array/uint8' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8Array>\n*/\n\n// MODULES //\n\nvar hasUint8ArraySupport = require( '@stdlib/assert/has-uint8array-support' );\nvar builtin = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint8Array` support.\n*\n* @module @stdlib/assert/has-uint8array-support\n*\n* @example\n* var hasUint8ArraySupport = require( '@stdlib/assert/has-uint8array-support' );\n*\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint8ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint8Array = require( './../../is-uint8array' );\nvar UINT8_MAX = require( '@stdlib/constants/uint8/max' );\nvar GlobalUint8Array = require( './uint8array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8Array` support\n*\n* @example\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint8ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint8Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT8_MAX+1, UINT8_MAX+2 ];\n\t\tarr = new GlobalUint8Array( arr );\n\t\tbool = (\n\t\t\tisUint8Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&           // truncation\n\t\t\tarr[ 2 ] === UINT8_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&           // wrap around\n\t\t\tarr[ 4 ] === 1              // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Uint8Array.\n*\n* @module @stdlib/assert/is-uint8array\n*\n* @example\n* var isUint8Array = require( '@stdlib/assert/is-uint8array' );\n*\n* var bool = isUint8Array( new Uint8Array( 10 ) );\n* // returns true\n*\n* bool = isUint8Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUint8Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUint8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint8Array = ( typeof Uint8Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8Array\n*\n* @example\n* var bool = isUint8Array( new Uint8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8Array( [] );\n* // returns false\n*/\nfunction isUint8Array( value ) {\n\treturn (\n\t\t( hasUint8Array && value instanceof Uint8Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint8Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 8-bit integer.\n*\n* @module @stdlib/constants/uint8/max\n* @type {integer32}\n*\n* @example\n* var UINT8_MAX = require( '@stdlib/constants/uint8/max' );\n* // returns 255\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 8-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{8} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 255\n*/\nvar UINT8_MAX = 255|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = UINT8_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint8Array === 'function' ) ? Uint8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8Array === 'function' ) ? Uint8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @module @stdlib/array/uint8c\n*\n* @example\n* var ctor = require( '@stdlib/array/uint8c' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8ClampedArray>\n*/\n\n// MODULES //\n\nvar hasUint8ClampedArraySupport = require( '@stdlib/assert/has-uint8clampedarray-support' ); // eslint-disable-line id-length\nvar builtin = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ClampedArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint8ClampedArray` support.\n*\n* @module @stdlib/assert/has-uint8clampedarray-support\n*\n* @example\n* var hasUint8ClampedArraySupport = require( '@stdlib/assert/has-uint8clampedarray-support' );\n*\n* var bool = hasUint8ClampedArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint8ClampedArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ClampedArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint8ClampedArray = require( './../../is-uint8clampedarray' );\nvar GlobalUint8ClampedArray = require( './uint8clampedarray.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint8ClampedArray` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8ClampedArray` support\n*\n* @example\n* var bool = hasUint8ClampedArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint8ClampedArraySupport() { // eslint-disable-line id-length\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint8ClampedArray !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalUint8ClampedArray( [ -1, 0, 1, 3.14, 4.99, 255, 256 ] );\n\t\tbool = (\n\t\t\tisUint8ClampedArray( arr ) &&\n\t\t\tarr[ 0 ] === 0 &&   // clamped\n\t\t\tarr[ 1 ] === 0 &&\n\t\t\tarr[ 2 ] === 1 &&\n\t\t\tarr[ 3 ] === 3 &&   // round to nearest\n\t\t\tarr[ 4 ] === 5 &&   // round to nearest\n\t\t\tarr[ 5 ] === 255 &&\n\t\t\tarr[ 6 ] === 255    // clamped\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ClampedArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Uint8ClampedArray.\n*\n* @module @stdlib/assert/is-uint8clampedarray\n*\n* @example\n* var isUint8ClampedArray = require( '@stdlib/assert/is-uint8clampedarray' );\n*\n* var bool = isUint8ClampedArray( new Uint8ClampedArray( 10 ) );\n* // returns true\n*\n* bool = isUint8ClampedArray( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUint8ClampedArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUint8ClampedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint8ClampedArray = ( typeof Uint8ClampedArray === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint8ClampedArray.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8ClampedArray\n*\n* @example\n* var bool = isUint8ClampedArray( new Uint8ClampedArray( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8ClampedArray( [] );\n* // returns false\n*/\nfunction isUint8ClampedArray( value ) {\n\treturn (\n\t\t( hasUint8ClampedArray && value instanceof Uint8ClampedArray ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint8ClampedArray]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint8ClampedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint8ClampedArray === 'function' ) ? Uint8ClampedArray : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8ClampedArray === 'function' ) ? Uint8ClampedArray : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int8\n*\n* @example\n* var ctor = require( '@stdlib/array/int8' );\n*\n* var arr = new ctor( 10 );\n* // returns <Int8Array>\n*/\n\n// MODULES //\n\nvar hasInt8ArraySupport = require( '@stdlib/assert/has-int8array-support' );\nvar builtin = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Int8Array` support.\n*\n* @module @stdlib/assert/has-int8array-support\n*\n* @example\n* var hasInt8ArraySupport = require( '@stdlib/assert/has-int8array-support' );\n*\n* var bool = hasInt8ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasInt8ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasInt8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInt8Array = require( './../../is-int8array' );\nvar INT8_MAX = require( '@stdlib/constants/int8/max' );\nvar INT8_MIN = require( '@stdlib/constants/int8/min' );\nvar GlobalInt8Array = require( './int8array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Int8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int8Array` support\n*\n* @example\n* var bool = hasInt8ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt8ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt8Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt8Array( [ 1, 3.14, -3.14, INT8_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt8Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&     // truncation\n\t\t\tarr[ 2 ] === -3 &&    // truncation\n\t\t\tarr[ 3 ] === INT8_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasInt8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an Int8Array.\n*\n* @module @stdlib/assert/is-int8array\n*\n* @example\n* var isInt8Array = require( '@stdlib/assert/is-int8array' );\n*\n* var bool = isInt8Array( new Int8Array( 10 ) );\n* // returns true\n*\n* bool = isInt8Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isInt8Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isInt8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasInt8Array = ( typeof Int8Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int8Array\n*\n* @example\n* var bool = isInt8Array( new Int8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt8Array( [] );\n* // returns false\n*/\nfunction isInt8Array( value ) {\n\treturn (\n\t\t( hasInt8Array && value instanceof Int8Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int8Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInt8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum signed 8-bit integer.\n*\n* @module @stdlib/constants/int8/max\n* @type {integer32}\n*\n* @example\n* var INT8_MAX = require( '@stdlib/constants/int8/max' );\n* // returns 127\n*/\n\n\n// MAIN //\n\n/**\n* Maximum signed 8-bit integer.\n*\n* ## Notes\n*\n* The number is given by\n*\n* ```tex\n* 2^{7} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 01111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 127\n*/\nvar INT8_MAX = 127|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = INT8_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 8-bit integer.\n*\n* @module @stdlib/constants/int8/min\n* @type {integer32}\n*\n* @example\n* var INT8_MIN = require( '@stdlib/constants/int8/min' );\n* // returns -128\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 8-bit integer.\n*\n* ## Notes\n*\n* The number is given by\n*\n* ```tex\n* -(2^{7})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 10000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -128\n*/\nvar INT8_MIN = -128|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = INT8_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int8Array === 'function' ) ? Int8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int8Array === 'function' ) ? Int8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* 64-bit complex number array.\n*\n* @module @stdlib/array/complex64\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var arr = new Complex64Array();\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var arr = new Complex64Array( 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var arr = new Complex64Array( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf, 8 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex64Array( buf, 8, 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/* eslint-disable no-restricted-syntax, max-lines, no-invalid-this */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isArrayBuffer = require( '@stdlib/assert/is-arraybuffer' );\nvar isObject = require( '@stdlib/assert/is-object' );\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isStringArray = require( '@stdlib/assert/is-string-array' ).primitives;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar isEven = require( '@stdlib/math/base/assert/is-even' );\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar isComplex64Array = require( './../../base/assert/is-complex64array' );\nvar isComplex128Array = require( './../../base/assert/is-complex128array' );\nvar hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\nvar ITERATOR_SYMBOL = require( '@stdlib/symbol/iterator' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar Float32Array = require( './../../float32' );\nvar Complex64 = require( '@stdlib/complex/float32/ctor' );\nvar format = require( '@stdlib/string/format' );\nvar realf = require( '@stdlib/complex/float32/real' );\nvar imagf = require( '@stdlib/complex/float32/imag' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\nvar reinterpret128 = require( '@stdlib/strided/base/reinterpret-complex128' );\nvar getter = require( './../../base/getter' );\nvar accessorGetter = require( './../../base/accessor-getter' );\nvar fromIterator = require( './from_iterator.js' );\nvar fromIteratorMap = require( './from_iterator_map.js' );\nvar fromArray = require( './from_array.js' );\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = Float32Array.BYTES_PER_ELEMENT * 2;\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a complex typed array.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*/\nfunction isComplexArray( value ) {\n\treturn (\n\t\tvalue instanceof Complex64Array ||\n\t\t(\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue !== null &&\n\t\t\t(\n\t\t\t\tvalue.constructor.name === 'Complex64Array' ||\n\t\t\t\tvalue.constructor.name === 'Complex128Array'\n\t\t\t) &&\n\t\t\ttypeof value._length === 'number' && // eslint-disable-line no-underscore-dangle\n\n\t\t\t// NOTE: we don't perform a more rigorous test here for a typed array for performance reasons, as robustly checking for a typed array instance could require walking the prototype tree and performing relatively expensive constructor checks...\n\t\t\ttypeof value._buffer === 'object' // eslint-disable-line no-underscore-dangle\n\t\t)\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a complex typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array constructor\n*/\nfunction isComplexArrayConstructor( value ) {\n\treturn (\n\t\tvalue === Complex64Array ||\n\n\t\t// NOTE: weaker test in order to avoid a circular dependency with Complex128Array...\n\t\tvalue.name === 'Complex128Array'\n\t);\n}\n\n/**\n* Retrieves a complex number from a complex number array buffer.\n*\n* @private\n* @param {Float32Array} buf - array buffer\n* @param {NonNegativeInteger} idx - element index\n* @returns {Complex64} complex number\n*/\nfunction getComplex64( buf, idx ) {\n\tidx *= 2;\n\treturn new Complex64( buf[ idx ], buf[ idx+1 ] );\n}\n\n\n// MAIN //\n\n/**\n* 64-bit complex number array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or an iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {RangeError} ArrayBuffer byte length must be a multiple of `8`\n* @throws {RangeError} array-like object and typed array input arguments must have a length which is a multiple of two\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} byte offset must be a multiple of `8`\n* @throws {TypeError} view length must be a positive multiple of `8`\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex64Array} complex number array\n*\n* @example\n* var arr = new Complex64Array();\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Complex64Array( 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Complex64Array( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf, 8 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex64Array( buf, 8, 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction Complex64Array() {\n\tvar byteOffset;\n\tvar nargs;\n\tvar buf;\n\tvar len;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Complex64Array) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Complex64Array();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Complex64Array( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Complex64Array( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Complex64Array( arguments[0], arguments[1], arguments[2] );\n\t}\n\t// Create the underlying data buffer...\n\tif ( nargs === 0 ) {\n\t\tbuf = new Float32Array( 0 ); // backward-compatibility\n\t} else if ( nargs === 1 ) {\n\t\tif ( isNonNegativeInteger( arguments[0] ) ) {\n\t\t\tbuf = new Float32Array( arguments[0]*2 );\n\t\t} else if ( isCollection( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tlen = buf.length;\n\n\t\t\t// If provided a \"generic\" array, peak at the first value, and, if the value is a complex number, try to process as an array of complex numbers, falling back to \"normal\" typed array initialization if we fail and ensuring consistency if the first value had not been a complex number...\n\t\t\tif ( len && isArray( buf ) && isComplexLike( buf[0] ) ) {\n\t\t\t\tbuf = fromArray( new Float32Array( len*2 ), buf );\n\t\t\t\tif ( buf === null ) {\n\t\t\t\t\t// We failed and we are now forced to allocate a new array :-(\n\t\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t\t}\n\t\t\t\t\t// We failed, so fall back to directly setting values...\n\t\t\t\t\tbuf = new Float32Array( arguments[0] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( isComplex64Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret64( buf, 0 );\n\t\t\t\t} else if ( isComplex128Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret128( buf, 0 );\n\t\t\t\t} else if ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object and typed array arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tbuf = new Float32Array( buf );\n\t\t\t}\n\t\t} else if ( isArrayBuffer( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( !isInteger( buf.byteLength/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. ArrayBuffer byte length must be a multiple of %u. Byte length: `%u`.', BYTES_PER_ELEMENT, buf.byteLength ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf );\n\t\t} else if ( isObject( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tif ( !isFunction( buf[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = buf[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) ); // FIXME: `buf` is what is returned from above, NOT the original value\n\t\t\t}\n\t\t\tbuf = fromIterator( buf );\n\t\t\tif ( buf instanceof Error ) {\n\t\t\t\tthrow buf;\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arguments[0] ) );\n\t\t}\n\t} else {\n\t\tbuf = arguments[ 0 ];\n\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf ) );\n\t\t}\n\t\tbyteOffset = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( !isInteger( byteOffset/BYTES_PER_ELEMENT ) ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Byte offset must be a multiple of %u. Value: `%u`.', BYTES_PER_ELEMENT, byteOffset ) );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\tlen = buf.byteLength - byteOffset;\n\t\t\tif ( !isInteger( len/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer view byte length must be a multiple of %u. View byte length: `%u`.', BYTES_PER_ELEMENT, len ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf, byteOffset );\n\t\t} else {\n\t\t\tlen = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t\t\t}\n\t\t\tif ( (len*BYTES_PER_ELEMENT) > (buf.byteLength-byteOffset) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len*BYTES_PER_ELEMENT ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf, byteOffset, len*2 );\n\t\t}\n\t}\n\tsetReadOnly( this, '_buffer', buf );\n\tsetReadOnly( this, '_length', buf.length/2 );\n\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64Array\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var nbytes = Complex64Array.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex64Array, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Complex64Array\n* @readonly\n* @type {string}\n* @default 'Complex64Array'\n*\n* @example\n* var str = Complex64Array.name;\n* // returns 'Complex64Array'\n*/\nsetReadOnly( Complex64Array, 'name', 'Complex64Array' );\n\n/**\n* Creates a new 64-bit complex number array from an array-like object or an iterable.\n*\n* @name from\n* @memberof Complex64Array\n* @type {Function}\n* @param {(Collection|Iterable)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @throws {TypeError} when provided an iterator, a callback must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex64Array} 64-bit complex number array\n*\n* @example\n* var arr = Complex64Array.from( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var arr = Complex64Array.from( [ new Complex64( 1.0, 1.0 ) ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function clbk( v ) {\n*     return new Complex64( realf(v)*2.0, imagf(v)*2.0 );\n* }\n*\n* var arr = Complex64Array.from( [ new Complex64( 1.0, 1.0 ) ], clbk );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*/\nsetReadOnly( Complex64Array, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar get;\n\tvar len;\n\tvar flg;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isComplexArray( src ) ) {\n\t\tlen = src.length;\n\t\tif ( clbk ) {\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, src.get( i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = realf( v );\n\t\t\t\t\tbuf[ j+1 ] = imagf( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\t// Note: array contents affect how we iterate over a provided data source. If only complex number objects, we can extract real and imaginary components. Otherwise, for non-complex number arrays (e.g., `Float64Array`, etc), we assume a strided array where real and imaginary components are interleaved. In the former case, we expect a callback to return real and imaginary components (possibly as a complex number). In the latter case, we expect a callback to return *either* a real or imaginary component.\n\n\t\t\tlen = src.length;\n\t\t\tif ( src.get && src.set ) {\n\t\t\t\tget = accessorGetter( 'default' );\n\t\t\t} else {\n\t\t\t\tget = getter( 'default' );\n\t\t\t}\n\t\t\t// Detect whether we've been provided an array which returns complex number objects...\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( !isComplexLike( get( src, i ) ) ) {\n\t\t\t\t\tflg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If an array does not contain only complex number objects, then we assume interleaved real and imaginary components...\n\t\t\tif ( flg ) {\n\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. First argument must have a length which is a multiple of %u. Length: `%u`.', 2, len ) );\n\t\t\t\t}\n\t\t\t\tout = new this( len/2 );\n\t\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tbuf[ i ] = clbk.call( thisArg, get( src, i ), i );\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\t// If an array contains only complex number objects, then we need to extract real and imaginary components...\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, get( src, i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = realf( v );\n\t\t\t\t\tbuf[ j+1 ] = imagf( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tif ( tmp instanceof Error ) {\n\t\t\tthrow tmp;\n\t\t}\n\t\tlen = tmp.length / 2;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf[ i ] = tmp[ i ];\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n});\n\n/**\n* Creates a new 64-bit complex number array from a variable number of arguments.\n*\n* @name of\n* @memberof Complex64Array\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} 64-bit complex number array\n*\n* @example\n* var arr = Complex64Array.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( Complex64Array, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n/**\n* Returns an array element with support for both nonnegative and negative integer indices.\n*\n* @name at\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide an integer\n* @returns {(Complex64|void)} array element\n*\n* @example\n* var arr = new Complex64Array( 10 );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var z = arr.at( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 9.0, -9.0 ], 9 );\n*\n* z = arr.at( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*\n* z = arr.at( -1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 9.0\n*\n* im = imagf( z );\n* // returns -9.0\n*\n* z = arr.at( 100 );\n* // returns undefined\n*\n* z = arr.at( -100 );\n* // returns undefined\n*/\nsetReadOnly( Complex64Array.prototype, 'at', function at( idx ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx < 0 ) {\n\t\tidx += this._length;\n\t}\n\tif ( idx < 0 || idx >= this._length ) {\n\t\treturn;\n\t}\n\treturn getComplex64( this._buffer, idx );\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'buffer', function get() {\n\treturn this._buffer.buffer;\n});\n\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 80\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'byteLength', function get() {\n\treturn this._buffer.byteLength;\n});\n\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'byteOffset', function get() {\n\treturn this._buffer.byteOffset;\n});\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex64Array.prototype, 'BYTES_PER_ELEMENT', Complex64Array.BYTES_PER_ELEMENT );\n\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} modified array\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( 4 );\n*\n* // Set the array elements:\n* arr.set( new Complex64( 1.0, 1.0 ), 0 );\n* arr.set( new Complex64( 2.0, 2.0 ), 1 );\n* arr.set( new Complex64( 3.0, 3.0 ), 2 );\n* arr.set( new Complex64( 4.0, 4.0 ), 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* // Get the last array element:\n* var z = arr.get( 3 );\n*\n* var re = realf( z );\n* // returns 2.0\n*\n* var im = imagf( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex64Array.prototype, 'copyWithin', function copyWithin( target, start ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\t// FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n\tif ( arguments.length === 2 ) {\n\t\tthis._buffer.copyWithin( target*2, start*2 );\n\t} else {\n\t\tthis._buffer.copyWithin( target*2, start*2, arguments[2]*2 );\n\t}\n\treturn this;\n});\n\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var arr = [\n*     new Complex64( 1.0, 1.0 ),\n*     new Complex64( 2.0, 2.0 ),\n*     new Complex64( 3.0, 3.0 )\n* ];\n* arr = new Complex64Array( arr );\n*\n* // Create an iterator:\n* var it = arr.entries();\n*\n* // Iterate over the key-value pairs...\n* var v = it.next().value;\n* // returns [ 0, <Complex64> ]\n*\n* v = it.next().value;\n* // returns [ 1, <Complex64> ]\n*\n* v = it.next().value;\n* // returns [ 2, <Complex64> ]\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'entries', function entries() {\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar buf;\n\tvar FLG;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuf = this._buffer;\n\tlen = this._length;\n\n\t// Initialize an iteration index:\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': [ i, getComplex64( buf, i ) ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.entries();\n\t}\n});\n\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function.\n*\n* @name every\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var bool = arr.every( predicate );\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'every', function every( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( !predicate.call( thisArg, getComplex64( buf, i ), i, this ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\n/**\n* Returns a modified typed array filled with a fill value.\n*\n* @name fill\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {ComplexLike} value - fill value\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @throws {TypeError} third argument must be an integer\n* @returns {Complex64Array} modified array\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.fill( new Complex64( 1.0, 1.0 ), 1 );\n*\n* var z = arr.get( 1 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns 1.0\n*\n* z = arr.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'fill', function fill( value, start, end ) {\n\tvar buf;\n\tvar len;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', value ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( start ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', start ) );\n\t\t}\n\t\tif ( start < 0 ) {\n\t\t\tstart += len;\n\t\t\tif ( start < 0 ) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length > 2 ) {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t} else {\n\t\t\tend = len;\n\t\t}\n\t} else {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\tre = realf( value );\n\tim = imagf( value );\n\tfor ( i = start; i < end; i++ ) {\n\t\tidx = 2*i;\n\t\tbuf[ idx ] = re;\n\t\tbuf[ idx+1 ] = im;\n\t}\n\treturn this;\n});\n\n/**\n* Returns a new array containing the elements of an array which pass a test implemented by a predicate function.\n*\n* @name filter\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex64Array} complex number array\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var out = arr.filter( predicate );\n* // returns <Complex64Array>\n*\n* var len = out.length;\n* // returns 1\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 2.0\n*\n* var im = imagf( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex64Array.prototype, 'filter', function filter( predicate, thisArg ) {\n\tvar buf;\n\tvar out;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tout = [];\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex64( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\tout.push( z );\n\t\t}\n\t}\n\treturn new this.constructor( out );\n});\n\n/**\n* Returns the first element in an array for which a predicate function returns a truthy value.\n*\n* @name find\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {(Complex64|void)} array element or undefined\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.find( predicate );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'find', function find( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex64( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn z;\n\t\t}\n\t}\n});\n\n/**\n* Returns the index of the first element in an array for which a predicate function returns a truthy value.\n*\n* @name findIndex\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var idx = arr.findIndex( predicate );\n* // returns 2\n*/\nsetReadOnly( Complex64Array.prototype, 'findIndex', function findIndex( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex64( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLast\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {(Complex64|void)} array element or undefined\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.findLast( predicate );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 3.0\n*\n* var im = imagf( z );\n* // returns 3.0\n*/\nsetReadOnly( Complex64Array.prototype, 'findLast', function findLast( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = this._length-1; i >= 0; i-- ) {\n\t\tz = getComplex64( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn z;\n\t\t}\n\t}\n});\n\n/**\n* Returns the index of the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLastIndex\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var idx = arr.findLastIndex( predicate );\n* // returns 1\n*/\nsetReadOnly( Complex64Array.prototype, 'findLastIndex', function findLastIndex( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = this._length-1; i >= 0; i-- ) {\n\t\tz = getComplex64( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Invokes a function once for each array element.\n*\n* @name forEach\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - function invocation context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* function log( v, i ) {\n*     console.log( '%s: %s', i, v.toString() );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* arr.forEach( log );\n*/\nsetReadOnly( Complex64Array.prototype, 'forEach', function forEach( fcn, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex64( buf, i );\n\t\tfcn.call( thisArg, z, i, this );\n\t}\n});\n\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(Complex64|void)} array element\n*\n* @example\n* var arr = new Complex64Array( 10 );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var z = arr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*\n* z = arr.get( 100 );\n* // returns undefined\n*/\nsetReadOnly( Complex64Array.prototype, 'get', function get( idx ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx >= this._length ) {\n\t\treturn;\n\t}\n\treturn getComplex64( this._buffer, idx );\n});\n\n/**\n* Returns a boolean indicating whether an array includes a provided value.\n*\n* @name includes\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - search element\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {boolean} boolean indicating whether an array includes a provided value\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var arr = new Complex64Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var bool = arr.includes( new Complex64( 3.0, -3.0 ) );\n* // returns true\n*\n* bool = arr.includes( new Complex64( 3.0, -3.0 ), 3 );\n* // returns false\n*\n* bool = arr.includes( new Complex64( 4.0, -4.0 ), -3 );\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'includes', function includes( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfromIndex = 0;\n\t}\n\tre = realf( searchElement );\n\tim = imagf( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @name indexOf\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - element to find\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var arr = new Complex64Array( 10 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var idx = arr.indexOf( new Complex64( 3.0, -3.0 ) );\n* // returns 2\n*\n* idx = arr.indexOf( new Complex64( 3.0, -3.0 ), 3 );\n* // returns -1\n*\n* idx = arr.indexOf( new Complex64( 4.0, -4.0 ), -3 );\n* // returns -1\n*/\nsetReadOnly( Complex64Array.prototype, 'indexOf', function indexOf( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfromIndex = 0;\n\t}\n\tre = realf( searchElement );\n\tim = imagf( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns a new string by concatenating all array elements.\n*\n* @name join\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {string} [separator=','] - element separator\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a string\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.join();\n* // returns '1 + 1i,2 + 2i'\n*\n* str = arr.join( '/' );\n* // returns '1 + 1i/2 + 2i'\n*/\nsetReadOnly( Complex64Array.prototype, 'join', function join( separator ) {\n\tvar out;\n\tvar buf;\n\tvar sep;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( arguments.length === 0 ) {\n\t\tsep = ',';\n\t} else if ( isString( separator ) ) {\n\t\tsep = separator;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', separator ) );\n\t}\n\tout = [];\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( getComplex64( buf, i ).toString() );\n\t}\n\treturn out.join( sep );\n});\n\n/**\n* Returns an iterator for iterating over each index key in a typed array.\n*\n* @name keys\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var iter = arr.keys();\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'keys', function keys() {\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tlen = this._length;\n\n\t// Initialize an iteration index:\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': i,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.keys();\n\t}\n});\n\n/**\n* Returns the last index at which a given element can be found.\n*\n* @name lastIndexOf\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - element to find\n* @param {integer} [fromIndex] - index at which to start searching backward (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var arr = new Complex64Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 3.0, -3.0 ], 4 );\n*\n* var idx = arr.lastIndexOf( new Complex64( 3.0, -3.0 ) );\n* // returns 4\n*\n* idx = arr.lastIndexOf( new Complex64( 3.0, -3.0 ), 3 );\n* // returns 2\n*\n* idx = arr.lastIndexOf( new Complex64( 5.0, -5.0 ), 3 );\n* // returns -1\n*\n* idx = arr.lastIndexOf( new Complex64( 2.0, -2.0 ), -3 );\n* // returns 1\n*/\nsetReadOnly( Complex64Array.prototype, 'lastIndexOf', function lastIndexOf( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= this._length ) {\n\t\t\tfromIndex = this._length - 1;\n\t\t} else if ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t}\n\t} else {\n\t\tfromIndex = this._length - 1;\n\t}\n\tre = realf( searchElement );\n\tim = imagf( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i >= 0; i-- ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Returns a new array with each element being the result of a provided callback function.\n*\n* @name map\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} fcn - callback function\n* @param {*} [thisArg] - callback function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex64Array} complex number array\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function scale( v, i ) {\n*     return new Complex64( 2.0*realf( v ), 2.0*imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var out = arr.map( scale );\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 2\n*\n* var im = imagf( z );\n* // returns -2\n*/\nsetReadOnly( Complex64Array.prototype, 'map', function map( fcn, thisArg ) {\n\tvar outbuf;\n\tvar buf;\n\tvar out;\n\tvar i;\n\tvar v;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tbuf = this._buffer;\n\tout = new this.constructor( this._length );\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tv = fcn.call( thisArg, getComplex64( buf, i ), i, this );\n\t\tif ( isComplexLike( v ) ) {\n\t\t\toutbuf[ 2*i ] = realf( v );\n\t\t\toutbuf[ (2*i)+1 ] = imagf( v );\n\t\t} else if ( isArrayLikeObject( v ) && v.length === 2 ) {\n\t\t\toutbuf[ 2*i ] = v[ 0 ];\n\t\t\toutbuf[ (2*i)+1 ] = v[ 1 ];\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t}\n\t}\n\treturn out;\n});\n\n/**\n* Applies a provided callback function to each element of the array, in order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduce\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var caddf = require( '@stdlib/complex/float32/base/add' );\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.reduce( caddf );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 6.0\n*\n* var im = imagf( z );\n* // returns 6.0\n*/\nsetReadOnly( Complex64Array.prototype, 'reduce', function reduce( reducer, initialValue ) {\n\tvar buf;\n\tvar acc;\n\tvar len;\n\tvar v;\n\tvar i;\n\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tacc = initialValue;\n\t\ti = 0;\n\t} else {\n\t\tif ( len === 0 ) {\n\t\t\tthrow new Error( 'invalid operation. If not provided an initial value, an array must contain at least one element.' );\n\t\t}\n\t\tacc = getComplex64( buf, 0 );\n\t\ti = 1;\n\t}\n\tfor ( ; i < len; i++ ) {\n\t\tv = getComplex64( buf, i );\n\t\tacc = reducer( acc, v, i, this );\n\t}\n\treturn acc;\n});\n\n/**\n* Applies a provided callback function to each element of the array, in reverse order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduceRight\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var caddf = require( '@stdlib/complex/float32/base/add' );\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.reduceRight( caddf );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 6.0\n*\n* var im = imagf( z );\n* // returns 6.0\n*/\nsetReadOnly( Complex64Array.prototype, 'reduceRight', function reduceRight( reducer, initialValue ) {\n\tvar buf;\n\tvar acc;\n\tvar len;\n\tvar v;\n\tvar i;\n\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tacc = initialValue;\n\t\ti = len-1;\n\t} else {\n\t\tif ( len === 0 ) {\n\t\t\tthrow new Error( 'invalid operation. If not provided an initial value, an array must contain at least one element.' );\n\t\t}\n\t\tacc = getComplex64( buf, len-1 );\n\t\ti = len-2;\n\t}\n\tfor ( ; i >= 0; i-- ) {\n\t\tv = getComplex64( buf, i );\n\t\tacc = reducer( acc, v, i, this );\n\t}\n\treturn acc;\n});\n\n/**\n* Reverses an array in-place.\n*\n* @name reverse\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} reversed array\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.reverse();\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 3.0\n*\n* var im = imagf( z );\n* // returns 3.0\n*\n* z = out.get( 1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns 2.0\n*\n* z = out.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'reverse', function reverse() {\n\tvar buf;\n\tvar tmp;\n\tvar len;\n\tvar N;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tlen = this._length;\n\tbuf = this._buffer;\n\tN = floor( len / 2 );\n\tfor ( i = 0; i < N; i++ ) {\n\t\tj = len - i - 1;\n\t\ttmp = buf[ (2*i) ];\n\t\tbuf[ (2*i) ] = buf[ (2*j) ];\n\t\tbuf[ (2*j) ] = tmp;\n\t\ttmp = buf[ (2*i)+1 ];\n\t\tbuf[ (2*i)+1 ] = buf[ (2*j)+1 ];\n\t\tbuf[ (2*j)+1 ] = tmp;\n\t}\n\treturn this;\n});\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, real or complex, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values, as intended.\n*\n* @name set\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be either a complex number, an array-like object, or a complex number array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( 10 );\n*\n* var z = arr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'set', function set( value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar sbuf;\n\tvar idx;\n\tvar buf;\n\tvar tmp;\n\tvar flg;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length > 1 ) {\n\t\tidx = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx ) );\n\t\t}\n\t} else {\n\t\tidx = 0;\n\t}\n\tif ( isComplexLike( value ) ) {\n\t\tif ( idx >= this._length ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx ) );\n\t\t}\n\t\tidx *= 2;\n\t\tbuf[ idx ] = realf( value );\n\t\tbuf[ idx+1 ] = imagf( value );\n\t\treturn;\n\t}\n\tif ( isComplexArray( value ) ) {\n\t\tN = value._length;\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tsbuf = value._buffer;\n\n\t\t// Check for overlapping memory...\n\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\tif (\n\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t(\n\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t)\n\t\t) {\n\t\t\t// We need to copy source values...\n\t\t\ttmp = new Float32Array( sbuf.length );\n\t\t\tfor ( i = 0; i < sbuf.length; i++ ) {\n\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t}\n\t\t\tsbuf = tmp;\n\t\t}\n\t\tidx *= 2;\n\t\tj = 0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\tidx += 2; // stride\n\t\t\tj += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tif ( isCollection( value ) ) {\n\t\t// Detect whether we've been provided an array of complex numbers...\n\t\tN = value.length;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tif ( !isComplexLike( value[ i ] ) ) {\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// If an array does not contain only complex numbers, then we assume interleaved real and imaginary components...\n\t\tif ( flg ) {\n\t\t\tif ( !isEven( N ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', N ) );\n\t\t\t}\n\t\t\tif ( idx+(N/2) > this._length ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t\t}\n\t\t\tsbuf = value;\n\n\t\t\t// Check for overlapping memory...\n\t\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\t\tif (\n\t\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t\t(\n\t\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// We need to copy source values...\n\t\t\t\ttmp = new Float32Array( N );\n\t\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\t\ttmp[ i ] = sbuf[ i ]; // TODO: handle accessor arrays\n\t\t\t\t}\n\t\t\t\tsbuf = tmp;\n\t\t\t}\n\t\t\tidx *= 2;\n\t\t\tN /= 2;\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\t\tidx += 2; // stride\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// If an array contains only complex numbers, then we need to extract real and imaginary components...\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tidx *= 2;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tv = value[ i ];\n\t\t\tbuf[ idx ] = realf( v );\n\t\t\tbuf[ idx+1 ] = imagf( v );\n\t\t\tidx += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `%s`.', value ) );\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Copies a portion of a typed array to a new typed array.\n*\n* @name slice\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {Complex64Array} complex number array\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var out = arr.slice();\n* // returns <Complex64Array>\n*\n* var len = out.length;\n* // returns 5\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns -1.0\n*\n* z = out.get( len-1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 5.0\n*\n* im = imagf( z );\n* // returns -5.0\n*\n* out = arr.slice( 1, -2 );\n* // returns <Complex64Array>\n*\n* len = out.length;\n* // returns 2\n*\n* z = out.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns -2.0\n*\n* z = out.get( len-1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 3.0\n*\n* im = imagf( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex64Array.prototype, 'slice', function slice( start, end ) {\n\tvar outlen;\n\tvar outbuf;\n\tvar out;\n\tvar idx;\n\tvar buf;\n\tvar len;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length === 0 ) {\n\t\tstart = 0;\n\t\tend = len;\n\t} else {\n\t\tif ( !isInteger( start ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', start ) );\n\t\t}\n\t\tif ( start < 0 ) {\n\t\t\tstart += len;\n\t\t\tif ( start < 0 ) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length === 1 ) {\n\t\t\tend = len;\n\t\t} else {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t} else if ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t}\n\t}\n\tif ( start < end ) {\n\t\toutlen = end - start;\n\t} else {\n\t\toutlen = 0;\n\t}\n\tout = new this.constructor( outlen );\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < outlen; i++ ) {\n\t\tidx = 2*(i+start);\n\t\toutbuf[ 2*i ] = buf[ idx ];\n\t\toutbuf[ (2*i)+1 ] = buf[ idx+1 ];\n\t}\n\treturn out;\n});\n\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function.\n*\n* @name some\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var bool = arr.some( predicate );\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'some', function some( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( predicate.call( thisArg, getComplex64( buf, i ), i, this ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\n/**\n* Sorts an array in-place.\n*\n* @name sort\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} compareFcn - comparison function\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex64Array} sorted array\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function compare( a, b ) {\n*     var re1;\n*     var re2;\n*     var im1;\n*     var im2;\n*     re1 = realf( a );\n*     re2 = realf( b );\n*     if ( re1 < re2 ) {\n*         return -1;\n*     }\n*     if ( re1 > re2 ) {\n*         return 1;\n*     }\n*     im1 = imagf( a );\n*     im2 = imagf( b );\n*     if ( im1 < im2 ) {\n*         return -1;\n*     }\n*     if ( im1 > im2 ) {\n*         return 1;\n*     }\n*     return 0;\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 3.0, -3.0 ], 0 );\n* arr.set( [ 1.0, -1.0 ], 1 );\n* arr.set( [ 2.0, -2.0 ], 2 );\n*\n* var out = arr.sort( compare );\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns -1.0\n*\n* z = out.get( 1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns -2.0\n*\n* z = out.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 3.0\n*\n* im = imagf( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex64Array.prototype, 'sort', function sort( compareFcn ) {\n\tvar tmp;\n\tvar buf;\n\tvar len;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( compareFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', compareFcn ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\ttmp = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\ttmp.push( getComplex64( buf, i ) );\n\t}\n\ttmp.sort( compareFcn );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tj = 2 * i;\n\t\tbuf[ j ] = realf( tmp[i] );\n\t\tbuf[ j+1 ] = imagf( tmp[i] );\n\t}\n\treturn this;\n});\n\n/**\n* Creates a new typed array view over the same underlying `ArrayBuffer` and with the same underlying data type as the host array.\n*\n* @name subarray\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {Complex64Array} subarray\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var subarr = arr.subarray();\n* // returns <Complex64Array>\n*\n* var len = subarr.length;\n* // returns 5\n*\n* var z = subarr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns -1.0\n*\n* z = subarr.get( len-1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 5.0\n*\n* im = imagf( z );\n* // returns -5.0\n*\n* subarr = arr.subarray( 1, -2 );\n* // returns <Complex64Array>\n*\n* len = subarr.length;\n* // returns 2\n*\n* z = subarr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns -2.0\n*\n* z = subarr.get( len-1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 3.0\n*\n* im = imagf( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex64Array.prototype, 'subarray', function subarray( begin, end ) {\n\tvar offset;\n\tvar buf;\n\tvar len;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length === 0 ) {\n\t\tbegin = 0;\n\t\tend = len;\n\t} else {\n\t\tif ( !isInteger( begin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', begin ) );\n\t\t}\n\t\tif ( begin < 0 ) {\n\t\t\tbegin += len;\n\t\t\tif ( begin < 0 ) {\n\t\t\t\tbegin = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length === 1 ) {\n\t\t\tend = len;\n\t\t} else {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t} else if ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t}\n\t}\n\tif ( begin >= len ) {\n\t\tlen = 0;\n\t\toffset = buf.byteLength;\n\t} else if ( begin >= end ) {\n\t\tlen = 0;\n\t\toffset = buf.byteOffset + (begin*BYTES_PER_ELEMENT);\n\t} else {\n\t\tlen = end - begin;\n\t\toffset = buf.byteOffset + ( begin*BYTES_PER_ELEMENT );\n\t}\n\treturn new this.constructor( buf.buffer, offset, ( len < 0 ) ? 0 : len );\n});\n\n/**\n* Serializes an array as a locale-specific string.\n*\n* @name toLocaleString\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {(string|Array<string>)} [locales] - locale identifier(s)\n* @param {Object} [options] - configuration options\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a string or an array of strings\n* @throws {TypeError} options argument must be an object\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.toLocaleString();\n* // returns '1 + 1i,2 + 2i'\n*/\nsetReadOnly( Complex64Array.prototype, 'toLocaleString', function toLocaleString( locales, options ) {\n\tvar opts;\n\tvar loc;\n\tvar out;\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( arguments.length === 0 ) {\n\t\tloc = [];\n\t} else if ( isString( locales ) || isStringArray( locales ) ) {\n\t\tloc = locales;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string or an array of strings. Value: `%s`.', locales ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\topts = {};\n\t} else if ( isObject( options ) ) {\n\t\topts = options;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tbuf = this._buffer;\n\tout = [];\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( getComplex64( buf, i ).toLocaleString( loc, opts ) );\n\t}\n\treturn out.join( ',' );\n});\n\n/**\n* Returns a new typed array containing the elements in reversed order.\n*\n* @name toReversed\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} reversed array\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.toReversed();\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 3.0\n*\n* var im = imagf( z );\n* // returns 3.0\n*\n* z = out.get( 1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns 2.0\n*\n* z = out.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'toReversed', function toReversed() {\n\tvar outbuf;\n\tvar out;\n\tvar len;\n\tvar buf;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tlen = this._length;\n\tout = new this.constructor( len );\n\tbuf = this._buffer;\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < len; i++ ) {\n\t\tj = len - i - 1;\n\t\toutbuf[ (2*i) ] = buf[ (2*j) ];\n\t\toutbuf[ (2*i)+1 ] = buf[ (2*j)+1 ];\n\t}\n\treturn out;\n});\n\n/**\n* Returns a new typed array containing the elements in sorted order.\n*\n* @name toSorted\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} compareFcn - comparison function\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex64Array} sorted array\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n*\n* function compare( a, b ) {\n*     var re1;\n*     var re2;\n*     var im1;\n*     var im2;\n*     re1 = realf( a );\n*     re2 = realf( b );\n*     if ( re1 < re2 ) {\n*         return -1;\n*     }\n*     if ( re1 > re2 ) {\n*         return 1;\n*     }\n*     im1 = imagf( a );\n*     im2 = imagf( b );\n*     if ( im1 < im2 ) {\n*         return -1;\n*     }\n*     if ( im1 > im2 ) {\n*         return 1;\n*     }\n*     return 0;\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 3.0, -3.0 ], 0 );\n* arr.set( [ 1.0, -1.0 ], 1 );\n* arr.set( [ 2.0, -2.0 ], 2 );\n*\n* var out = arr.sort( compare );\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns -1.0\n*\n* z = out.get( 1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns -2.0\n*\n* z = out.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 3.0\n*\n* im = imagf( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex64Array.prototype, 'toSorted', function toSorted( compareFcn ) {\n\tvar tmp;\n\tvar buf;\n\tvar len;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( compareFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', compareFcn ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\ttmp = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\ttmp.push( getComplex64( buf, i ) );\n\t}\n\ttmp.sort( compareFcn );\n\treturn new Complex64Array( tmp );\n});\n\n/**\n* Serializes an array as a string.\n*\n* @name toString\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.toString();\n* // returns '1 + 1i,2 + 2i'\n*/\nsetReadOnly( Complex64Array.prototype, 'toString', function toString() {\n\tvar out;\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tout = [];\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( getComplex64( buf, i ).toString() );\n\t}\n\treturn out.join( ',' );\n});\n\n/**\n* Returns an iterator for iterating over each value in a typed array.\n*\n* @name values\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n*\n* var iter = arr.values();\n*\n* var v = iter.next().value;\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 1.0\n*\n* var im = imagf( v );\n* // returns -1.0\n*\n* v = iter.next().value;\n* // returns <Complex64>\n*\n* re = realf( v );\n* // returns 2.0\n*\n* im = imagf( v );\n* // returns -2.0\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'values', function values() {\n\tvar iter;\n\tvar self;\n\tvar len;\n\tvar FLG;\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuf = this._buffer;\n\tlen = this._length;\n\n\t// Initialize an iteration index:\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': getComplex64( buf, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.values();\n\t}\n});\n\n/**\n* Returns a new typed array with the element at a provided index replaced with a provided value.\n*\n* @name with\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} index - element index\n* @param {ComplexLike} value - new value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {TypeError} second argument must be a complex number\n* @returns {Complex64Array} new typed array\n*\n* @example\n* var realf = require( '@stdlib/complex/float32/real' );\n* var imagf = require( '@stdlib/complex/float32/imag' );\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.with( 0, new Complex64( 4.0, 4.0 ) );\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 4.0\n*\n* var im = imagf( z );\n* // returns 4.0\n*/\nsetReadOnly( Complex64Array.prototype, 'with', function copyWith( index, value ) {\n\tvar buf;\n\tvar out;\n\tvar len;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isInteger( index ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', index ) );\n\t}\n\tlen = this._length;\n\tif ( index < 0 ) {\n\t\tindex += len;\n\t}\n\tif ( index < 0 || index >= len ) {\n\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%s`.', index ) );\n\t}\n\tif ( !isComplexLike( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a complex number. Value: `%s`.', value ) );\n\t}\n\tout = new this.constructor( this._buffer );\n\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tbuf[ 2*index ] = realf( value );\n\tbuf[ (2*index)+1 ] = imagf( value );\n\treturn out;\n});\n\n\n// EXPORTS //\n\nmodule.exports = Complex64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonnegative integer.\n*\n* @module @stdlib/assert/is-nonnegative-integer\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' );\n*\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* bool = isNonNegativeInteger( null );\n* // returns false\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isObject;\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonnegative integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( null );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object.\n*\n* @module @stdlib/assert/is-array-like-object\n*\n* @example\n* var isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\n*\n* var bool = isArrayLikeObject( [] );\n* // returns true\n*\n* bool = isArrayLikeObject( { 'length':10 } );\n* // returns true\n*\n* bool = isArrayLikeObject( 'beep' );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is an array-like object\n*\n* @example\n* var bool = isArrayLikeObject( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( { 'length':10 } );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( 'beep' );\n* // returns false\n*/\nfunction isArrayLikeObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLikeObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a generic array.\n*\n* @module @stdlib/constants/array/max-array-length\n*\n* @example\n* var MAX_ARRAY_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n* // returns 4294967295\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a generic array.\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar MAX_ARRAY_LENGTH = 4294967295>>>0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = MAX_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an ArrayBuffer.\n*\n* @module @stdlib/assert/is-arraybuffer\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var isArrayBuffer = require( '@stdlib/assert/is-arraybuffer' );\n*\n* var bool = isArrayBuffer( new ArrayBuffer( 10 ) );\n* // returns true\n*\n* bool = isArrayBuffer( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasArrayBuffer = ( typeof ArrayBuffer === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an ArrayBuffer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an ArrayBuffer\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var bool = isArrayBuffer( new ArrayBuffer( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isArrayBuffer( [] );\n* // returns false\n*/\nfunction isArrayBuffer( value ) {\n\treturn (\n\t\t( hasArrayBuffer && value instanceof ArrayBuffer ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object ArrayBuffer]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array of strings.\n*\n* @module @stdlib/assert/is-string-array\n*\n* @example\n* var isStringArray = require( '@stdlib/assert/is-string-array' );\n*\n* var bool = isStringArray( [ 'abc', 'def' ] );\n* // returns true\n*\n* bool = isStringArray( [ 'abc', 123 ] );\n* // returns false\n*\n* @example\n* var isStringArray = require( '@stdlib/assert/is-string-array' ).primitives;\n*\n* var bool = isStringArray( [ 'abc', 'def' ] );\n* // returns true\n*\n* bool = isStringArray( [ 'abc', new String( 'def' ) ] );\n* // returns false\n*\n* @example\n* var isStringArray = require( '@stdlib/assert/is-string-array' ).objects;\n*\n* var bool = isStringArray( [ new String( 'abc' ), new String( 'def' ) ] );\n* // returns true\n*\n* bool = isStringArray( [ new String( 'abc' ), 'def' ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-function' );\nvar isString = require( './../../is-string' );\n\n\n// VARIABLES //\n\nvar isPrimitiveArray = arrayfun( isString.isPrimitive );\nvar isObjectArray = arrayfun( isString.isObject );\n\n\n// MAIN //\n\nvar isStringArray = arrayfun( isString );\nsetReadOnly( isStringArray, 'primitives', isPrimitiveArray );\nsetReadOnly( isStringArray, 'objects', isObjectArray );\n\n\n// EXPORTS //\n\nmodule.exports = isStringArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a string.\n*\n* @module @stdlib/assert/is-string\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' );\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 5 );\n* // returns false\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' ).isObject;\n*\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 'beep' );\n* // returns false\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' ).isPrimitive;\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a string\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*/\nfunction isString( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2valueof.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string object\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns false\n*/\nfunction isString( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof String ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object String]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar valueOf = require( './valueof.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to extract a string value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a string can be extracted\n*/\nfunction test( value ) {\n\ttry {\n\t\tvalueOf.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar valueOf = String.prototype.valueOf; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = valueOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a complex number-like object.\n*\n* @module @stdlib/assert/is-complex-like\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var isComplexLike = require( '@stdlib/assert/is-complex-like' );\n*\n* var x = new Complex128( 4.0, 2.0 );\n* var bool = isComplexLike( x );\n* // returns true\n*\n* x = new Complex64( 4.0, 2.0 );\n* bool = isComplexLike( x );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex128 = require( '@stdlib/complex/float64/ctor' );\nvar Complex64 = require( '@stdlib/complex/float32/ctor' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a complex number-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex number-like object.\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var x = new Complex128( 4.0, 2.0 );\n* var bool = isComplexLike( x );\n* // returns true\n*\n* x = new Complex64( 4.0, 2.0 );\n* bool = isComplexLike( x );\n* // returns true\n*/\nfunction isComplexLike( value ) {\n\tif ( value instanceof Complex128 || value instanceof Complex64 ) {\n\t\treturn true;\n\t}\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.re === 'number' &&\n\t\ttypeof value.im === 'number'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComplexLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* 128-bit complex number constructor.\n*\n* @module @stdlib/complex/float64/ctor\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var z = new Complex128( 5.0, 3.0 );\n* // returns <Complex128>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar defineProperty = require( '@stdlib/utils/define-property' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar format = require( '@stdlib/string/format' );\nvar toStr = require( './tostring.js' );\nvar toJSON = require( './tojson.js' );\n\n\n// MAIN //\n\n/**\n* 128-bit complex number constructor.\n*\n* @constructor\n* @param {number} real - real component\n* @param {number} imag - imaginary component\n* @throws {TypeError} must invoke using the `new` keyword\n* @throws {TypeError} real component must be a number\n* @throws {TypeError} imaginary component must be a number\n* @returns {Complex128} 128-bit complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n* // returns <Complex128>\n*/\nfunction Complex128( real, imag ) {\n\tif ( !( this instanceof Complex128 ) ) {\n\t\tthrow new TypeError( 'invalid invocation. Constructor must be called with the `new` keyword.' );\n\t}\n\tif ( !isNumber( real ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Real component must be a number. Value: `%s`.', real ) );\n\t}\n\tif ( !isNumber( imag ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Imaginary component must be a number. Value: `%s`.', imag ) );\n\t}\n\tdefineProperty( this, 're', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': real\n\t});\n\tdefineProperty( this, 'im', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': imag\n\t});\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var nbytes = Complex128.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex128, 'BYTES_PER_ELEMENT', 8 );\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128.prototype\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var nbytes = z.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex128.prototype, 'BYTES_PER_ELEMENT', 8 );\n\n/**\n* Length (in bytes) of a complex number.\n*\n* @name byteLength\n* @memberof Complex128.prototype\n* @type {integer}\n* @returns {integer} byte length\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var nbytes = z.byteLength;\n* // returns 16\n*/\nsetReadOnly( Complex128.prototype, 'byteLength', 16 );\n\n/**\n* Serializes a complex number as a string.\n*\n* @name toString\n* @memberof Complex128.prototype\n* @type {Function}\n* @returns {string} serialized complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var str = z.toString();\n* // returns '5 + 3i'\n*/\nsetReadOnly( Complex128.prototype, 'toString', toStr );\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `Complex128` instance.\n*\n* @name toJSON\n* @memberof Complex128.prototype\n* @type {Function}\n* @returns {Object} serialized complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var obj = z.toJSON();\n* // returns { 'type': 'Complex128', 're': 5.0, 'im': 3.0 }\n*/\nsetReadOnly( Complex128.prototype, 'toJSON', toJSON );\n\n\n// EXPORTS //\n\nmodule.exports = Complex128;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a string.\n*\n* @private\n* @returns {string} serialized complex number\n*/\nfunction toString() { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar str = '' + this.re;\n\tif ( this.im < 0 ) {\n\t\tstr += ' - ' + (-this.im);\n\t} else {\n\t\tstr += ' + ' + this.im;\n\t}\n\tstr += 'i';\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* @private\n* @returns {Object} JSON representation\n*/\nfunction toJSON() {\n\t/* eslint-disable no-invalid-this */\n\tvar out = {};\n\tout.type = 'Complex128';\n\tout.re = this.re;\n\tout.im = this.im;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* 64-bit complex number constructor.\n*\n* @module @stdlib/complex/float32/ctor\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var z = new Complex64( 5.0, 3.0 );\n* // returns <Complex64>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar defineProperty = require( '@stdlib/utils/define-property' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar float64ToFloat32 = require( '@stdlib/number/float64/base/to-float32' );\nvar format = require( '@stdlib/string/format' );\nvar toStr = require( './tostring.js' );\nvar toJSON = require( './tojson.js' );\n\n\n// MAIN //\n\n/**\n* 64-bit complex number constructor.\n*\n* @constructor\n* @param {number} real - real component\n* @param {number} imag - imaginary component\n* @throws {TypeError} must invoke using the `new` keyword\n* @throws {TypeError} real component must be a number\n* @throws {TypeError} imaginary component must be a number\n* @returns {Complex64} 64-bit complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n* // returns <Complex64>\n*/\nfunction Complex64( real, imag ) {\n\tif ( !( this instanceof Complex64 ) ) {\n\t\tthrow new TypeError( 'invalid invocation. Constructor must be called with the `new` keyword.' );\n\t}\n\tif ( !isNumber( real ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Real component must be a number. Value: `%s`.', real ) );\n\t}\n\tif ( !isNumber( imag ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Imaginary component must be a number. Value: `%s`.', imag ) );\n\t}\n\tdefineProperty( this, 're', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': float64ToFloat32( real )\n\t});\n\tdefineProperty( this, 'im', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': float64ToFloat32( imag )\n\t});\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var nbytes = Complex64.BYTES_PER_ELEMENT;\n* // returns 4\n*/\nsetReadOnly( Complex64, 'BYTES_PER_ELEMENT', 4 );\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64.prototype\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var nbytes = z.BYTES_PER_ELEMENT;\n* // returns 4\n*/\nsetReadOnly( Complex64.prototype, 'BYTES_PER_ELEMENT', 4 );\n\n/**\n* Length (in bytes) of a complex number.\n*\n* @name byteLength\n* @memberof Complex64.prototype\n* @type {integer}\n* @returns {integer} byte length\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var nbytes = z.byteLength;\n* // returns 8\n*/\nsetReadOnly( Complex64.prototype, 'byteLength', 8 );\n\n/**\n* Serializes a complex number as a string.\n*\n* @name toString\n* @memberof Complex64.prototype\n* @type {Function}\n* @returns {string} serialized complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var str = z.toString();\n* // returns '5 + 3i'\n*/\nsetReadOnly( Complex64.prototype, 'toString', toStr );\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `Complex64` instance.\n*\n* @name toJSON\n* @memberof Complex64.prototype\n* @type {Function}\n* @returns {Object} serialized complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var obj = z.toJSON();\n* // returns { 'type': 'Complex64', 're': 5.0, 'im': 3.0 }\n*/\nsetReadOnly( Complex64.prototype, 'toJSON', toJSON );\n\n\n// EXPORTS //\n\nmodule.exports = Complex64;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a double-precision floating-point number to the nearest single-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/to-float32\n*\n* @example\n* var float64ToFloat32 = require( '@stdlib/number/float64/base/to-float32' );\n*\n* var y = float64ToFloat32( 1.337 );\n* // returns 1.3370000123977661\n*/\n\n// MODULES //\n\nvar builtin = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar float64ToFloat32;\nif ( typeof builtin === 'function' ) {\n\tfloat64ToFloat32 = builtin;\n} else {\n\tfloat64ToFloat32 = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = float64ToFloat32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar fround = ( typeof Math.fround === 'function' ) ? Math.fround : null; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = fround;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float32Array = require( '@stdlib/array/float32' );\n\n\n// VARIABLES //\n\nvar FLOAT32_VIEW = new Float32Array( 1 );\n\n\n// MAIN //\n\n/**\n* Converts a double-precision floating-point number to the nearest single-precision floating-point number.\n*\n* @param {number} x - double-precision floating-point number\n* @returns {number} nearest single-precision floating-point number\n*\n* @example\n* var y = float64ToFloat32( 1.337 );\n* // returns 1.3370000123977661\n*/\nfunction float64ToFloat32( x ) {\n\tFLOAT32_VIEW[ 0 ] = x;\n\treturn FLOAT32_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = float64ToFloat32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a string.\n*\n* @private\n* @returns {string} serialized complex number\n*/\nfunction toString() { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar str = '' + this.re;\n\tif ( this.im < 0 ) {\n\t\tstr += ' - ' + (-this.im);\n\t} else {\n\t\tstr += ' + ' + this.im;\n\t}\n\tstr += 'i';\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* @private\n* @returns {Object} JSON representation\n*/\nfunction toJSON() {\n\t/* eslint-disable no-invalid-this */\n\tvar out = {};\n\tout.type = 'Complex64';\n\tout.re = this.re;\n\tout.im = this.im;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite numeric value is an even number.\n*\n* @module @stdlib/math/base/assert/is-even\n*\n* @example\n* var isEven = require( '@stdlib/math/base/assert/is-even' );\n*\n* var bool = isEven( 5.0 );\n* // returns false\n*\n* bool = isEven( -2.0 );\n* // returns true\n*\n* bool = isEven( 0.0 );\n* // returns true\n*\n* bool = isEven( NaN );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../../../base/assert/is-integer' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite numeric value is an even number.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an even number\n*\n* @example\n* var bool = isEven( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isEven( -2.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( NaN );\n* // returns false\n*/\nfunction isEven( x ) {\n\treturn isInteger( x/2.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEven;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a `Complex64Array`.\n*\n* @module @stdlib/array/base/assert/is-complex64array\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var isComplex64Array = require( '@stdlib/array/base/assert/is-complex64array' );\n*\n* var bool = isComplex64Array( new Complex64Array( 10 ) );\n* // returns true\n*\n* bool = isComplex64Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = 8; // 4 bytes per float32 x (1 real + 1 imag component)\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if a value is a `Complex64Array`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex64Array`\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var bool = isComplex64Array( new Complex64Array( 10 ) );\n* // returns true\n*\n* bool = isComplex64Array( [] );\n* // returns false\n*/\nfunction isComplex64Array( value ) {\n\t// Note: the following is not robust and that is intentional. In this case, we are seeking a lower cost way to reasonably determine whether an input value is a `Complex64Array` in order to avoid walking the prototype chain and resolving constructors, which is necessary for robust identification of cross-realm instances. For more robust validation, see `@stdlib/assert/is-complex64array`.\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex64Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComplex64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a `Complex128Array`.\n*\n* @module @stdlib/array/base/assert/is-complex128array\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n* var isComplex128Array = require( '@stdlib/array/base/assert/is-complex128array' );\n*\n* var bool = isComplex128Array( new Complex128Array( 10 ) );\n* // returns true\n*\n* bool = isComplex128Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = 16; // 8 bytes per float64 x (1 real + 1 imag component)\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if a value is a `Complex128Array`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex128Array`\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var bool = isComplex128Array( new Complex128Array( 10 ) );\n* // returns true\n*\n* bool = isComplex128Array( [] );\n* // returns false\n*/\nfunction isComplex128Array( value ) {\n\t// Note: the following is not robust and that is intentional. In this case, we are seeking a lower cost way to reasonably determine whether an input value is a `Complex128Array` in order to avoid walking the prototype chain and resolving constructors, which is necessary for robust identification of cross-realm instances. For more robust validation, see `@stdlib/assert/is-complex128array`.\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex128Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComplex128Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Symbol.iterator` support.\n*\n* @module @stdlib/assert/has-iterator-symbol-support\n*\n* @example\n* var hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\n*\n* var bool = hasIteratorSymbolSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( './../../has-own-property' );\nvar Symbol = require( '@stdlib/symbol/ctor' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Symbol.iterator` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol.iterator` support\n*\n* @example\n* var bool = hasIteratorSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasIteratorSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol' &&\n\t\thasOwnProp( Symbol, 'iterator' ) &&\n\t\ttypeof Symbol.iterator === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasIteratorSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Iterator symbol.\n*\n* @module @stdlib/symbol/iterator\n*\n* @example\n* var IteratorSymbol = require( '@stdlib/symbol/iterator' );\n*\n* function iterator() {\n*     var it;\n*     var i;\n*\n*     i = -1;\n*\n*     it = {};\n*     it.next = next;\n*     it.return = done;\n*\n*     if ( IteratorSymbol ) {\n*         it[ IteratorSymbol ] = iterator;\n*     }\n*     return it;\n*\n*     function next() {\n*         i += 1;\n*         return {\n*             'value': i,\n*             'done': false\n*         };\n*     }\n*\n*     function done( value ) {\n*         if ( arguments.length === 0 ) {\n*             return {\n*                 'done': true\n*             };\n*         }\n*         return {\n*             'value': value,\n*             'done': true\n*         };\n*     }\n* }\n*\n* var obj = iterator();\n*/\n\n// MAIN //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\n\n\n// MAIN //\n\n/**\n* Iterator symbol.\n*\n* @name IteratorSymbol\n* @constant\n* @type {(symbol|null)}\n*\n* @example\n* function iterator() {\n*     var it;\n*     var i;\n*\n*     i = -1;\n*\n*     it = {};\n*     it.next = next;\n*     it.return = done;\n*\n*     if ( IteratorSymbol ) {\n*         it[ IteratorSymbol ] = iterator;\n*     }\n*     return it;\n*\n*     function next() {\n*         i += 1;\n*         return {\n*             'value': i,\n*             'done': false\n*         };\n*     }\n*\n*     function done( value ) {\n*         if ( arguments.length === 0 ) {\n*             return {\n*                 'done': true\n*             };\n*         }\n*         return {\n*             'value': value,\n*             'done': true\n*         };\n*     }\n* }\n*\n* var obj = iterator();\n*/\nvar IteratorSymbol = ( hasIteratorSymbolSupport() ) ? Symbol.iterator : null;\n\n\n// EXPORTS //\n\nmodule.exports = IteratorSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the real component of a single-precision complex floating-point number.\n*\n* @module @stdlib/complex/float32/real\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var real = require( '@stdlib/complex/float32/real' );\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var re = real( z );\n* // returns 5.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the real component of a single-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} real component\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var re = real( z );\n* // returns 5.0\n*/\nfunction real( z ) {\n\treturn z.re;\n}\n\n\n// EXPORTS //\n\nmodule.exports = real;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the imaginary component of a single-precision complex floating-point number.\n*\n* @module @stdlib/complex/float32/imag\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var imag = require( '@stdlib/complex/float32/imag' );\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var im = imag( z );\n* // returns 3.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the imaginary component of a single-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} imaginary component\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var im = imag( z );\n* // returns 3.0\n*/\nfunction imag( z ) {\n\treturn z.im;\n}\n\n\n// EXPORTS //\n\nmodule.exports = imag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Reinterpret a `Complex64Array` as a `Float32Array`.\n*\n* @module @stdlib/strided/base/reinterpret-complex64\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var reinterpret = require( '@stdlib/strided/base/reinterpret-complex64' );\n*\n* var x = new Complex64Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float32Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float32Array = require( '@stdlib/array/float32' );\n\n\n// MAIN //\n\n/**\n* Reinterprets a `Complex64Array` as a `Float32Array`.\n*\n* @param {Complex64Array} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Float32Array} `Float32Array` view\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var x = new Complex64Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float32Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\nfunction reinterpret( x, offset ) {\n\treturn new Float32Array( x.buffer, x.byteOffset+(x.BYTES_PER_ELEMENT*offset), 2*(x.length-offset) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = reinterpret;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Reinterpret a `Complex128Array` as a `Float64Array`.\n*\n* @module @stdlib/strided/base/reinterpret-complex128\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n* var reinterpret = require( '@stdlib/strided/base/reinterpret-complex128' );\n*\n* var x = new Complex128Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float64Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float64Array = require( '@stdlib/array/float64' );\n\n\n// MAIN //\n\n/**\n* Reinterprets a `Complex128Array` as a `Float64Array`.\n*\n* @param {Complex128Array} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Float64Array} `Float64Array` view\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var x = new Complex128Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float64Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\nfunction reinterpret( x, offset ) {\n\treturn new Float64Array( x.buffer, x.byteOffset+(x.BYTES_PER_ELEMENT*offset), 2*(x.length-offset) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = reinterpret;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar realf = require( '@stdlib/complex/float32/real' );\nvar imagf = require( '@stdlib/complex/float32/imag' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tz = v.value;\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( realf( z ), imagf( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar realf = require( '@stdlib/complex/float32/real' );\nvar imagf = require( '@stdlib/complex/float32/imag' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tz = clbk.call( thisArg, v.value, i );\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( realf( z ), imagf( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar realf = require( '@stdlib/complex/float32/real' );\nvar imagf = require( '@stdlib/complex/float32/imag' );\n\n\n// MAIN //\n\n/**\n* Returns a strided array of real and imaginary components.\n*\n* @private\n* @param {Float32Array} buf - output array\n* @param {Array} arr - array containing complex numbers\n* @returns {(Float32Array|null)} output array or null\n*/\nfunction fromArray( buf, arr ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tlen = arr.length;\n\tj = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( !isComplexLike( v ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tbuf[ j ] = realf( v );\n\t\tbuf[ j+1 ] = imagf( v );\n\t\tj += 2; // stride\n\t}\n\treturn buf;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* 128-bit complex number array.\n*\n* @module @stdlib/array/complex128\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var arr = new Complex128Array();\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var arr = new Complex128Array( 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var arr = new Complex128Array( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf, 16 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = new Complex128Array( buf, 16, 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/* eslint-disable no-restricted-syntax, max-lines, no-invalid-this */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isArrayBuffer = require( '@stdlib/assert/is-arraybuffer' );\nvar isObject = require( '@stdlib/assert/is-object' );\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isStringArray = require( '@stdlib/assert/is-string-array' ).primitives;\nvar isString = require( '@stdlib/assert/is-string' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar isEven = require( '@stdlib/math/base/assert/is-even' );\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar isComplex64Array = require( './../../base/assert/is-complex64array' );\nvar isComplex128Array = require( './../../base/assert/is-complex128array' );\nvar hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\nvar ITERATOR_SYMBOL = require( '@stdlib/symbol/iterator' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar Float64Array = require( './../../float64' );\nvar Complex128 = require( '@stdlib/complex/float64/ctor' );\nvar real = require( '@stdlib/complex/float64/real' );\nvar imag = require( '@stdlib/complex/float64/imag' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\nvar reinterpret128 = require( '@stdlib/strided/base/reinterpret-complex128' );\nvar getter = require( './../../base/getter' );\nvar accessorGetter = require( './../../base/accessor-getter' );\nvar format = require( '@stdlib/string/format' );\nvar fromIterator = require( './from_iterator.js' );\nvar fromIteratorMap = require( './from_iterator_map.js' );\nvar fromArray = require( './from_array.js' );\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = Float64Array.BYTES_PER_ELEMENT * 2;\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a complex typed array.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*/\nfunction isComplexArray( value ) {\n\treturn (\n\t\tvalue instanceof Complex128Array ||\n\t\t(\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue !== null &&\n\t\t\t(\n\t\t\t\tvalue.constructor.name === 'Complex64Array' ||\n\t\t\t\tvalue.constructor.name === 'Complex128Array'\n\t\t\t) &&\n\t\t\ttypeof value._length === 'number' && // eslint-disable-line no-underscore-dangle\n\n\t\t\t// NOTE: we don't perform a more rigorous test here for a typed array for performance reasons, as robustly checking for a typed array instance could require walking the prototype tree and performing relatively expensive constructor checks...\n\t\t\ttypeof value._buffer === 'object' // eslint-disable-line no-underscore-dangle\n\t\t)\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a complex typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array constructor\n*/\nfunction isComplexArrayConstructor( value ) {\n\treturn (\n\t\tvalue === Complex128Array ||\n\n\t\t// NOTE: weaker test in order to avoid a circular dependency with Complex64Array...\n\t\tvalue.name === 'Complex64Array'\n\t);\n}\n\n/**\n* Retrieves a complex number from a complex number array buffer.\n*\n* @private\n* @param {Float64Array} buf - array buffer\n* @param {NonNegativeInteger} idx - element index\n* @returns {Complex128} complex number\n*/\nfunction getComplex128( buf, idx ) {\n\tidx *= 2;\n\treturn new Complex128( buf[ idx ], buf[ idx+1 ] );\n}\n\n\n// MAIN //\n\n/**\n* 128-bit complex number array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {RangeError} ArrayBuffer byte length must be a multiple of `16`\n* @throws {RangeError} array-like object and typed array input arguments must have a length which is a multiple of two\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} byte offset must be a multiple of `16`\n* @throws {TypeError} view length must be a positive multiple of `16`\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex128Array} complex number array\n*\n* @example\n* var arr = new Complex128Array();\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Complex128Array( 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Complex128Array( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf, 16 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = new Complex128Array( buf, 16, 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction Complex128Array() {\n\tvar byteOffset;\n\tvar nargs;\n\tvar buf;\n\tvar len;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Complex128Array) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Complex128Array();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Complex128Array( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Complex128Array( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Complex128Array( arguments[0], arguments[1], arguments[2] );\n\t}\n\t// Create the underlying data buffer...\n\tif ( nargs === 0 ) {\n\t\tbuf = new Float64Array( 0 ); // backward-compatibility\n\t} else if ( nargs === 1 ) {\n\t\tif ( isNonNegativeInteger( arguments[0] ) ) {\n\t\t\tbuf = new Float64Array( arguments[0]*2 );\n\t\t} else if ( isCollection( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tlen = buf.length;\n\n\t\t\t// If provided a \"generic\" array, peak at the first value, and, if the value is a complex number, try to process as an array of complex numbers, falling back to \"normal\" typed array initialization if we fail and ensuring consistency if the first value had not been a complex number...\n\t\t\tif ( len && isArray( buf ) && isComplexLike( buf[0] ) ) {\n\t\t\t\tbuf = fromArray( new Float64Array( len*2 ), buf );\n\t\t\t\tif ( buf === null ) {\n\t\t\t\t\t// We failed and we are now forced to allocate a new array :-(\n\t\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t\t}\n\t\t\t\t\t// We failed, so fall back to directly setting values...\n\t\t\t\t\tbuf = new Float64Array( arguments[0] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( isComplex64Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret64( buf, 0 );\n\t\t\t\t} else if ( isComplex128Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret128( buf, 0 );\n\t\t\t\t} else if ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object and typed array arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tbuf = new Float64Array( buf );\n\t\t\t}\n\t\t} else if ( isArrayBuffer( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( !isInteger( buf.byteLength/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. ArrayBuffer byte length must be a multiple of %u. Byte length: `%u`.', BYTES_PER_ELEMENT, buf.byteLength ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf );\n\t\t} else if ( isObject( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tif ( !isFunction( buf[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = buf[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = fromIterator( buf );\n\t\t\tif ( buf instanceof Error ) {\n\t\t\t\tthrow buf;\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arguments[0] ) );\n\t\t}\n\t} else {\n\t\tbuf = arguments[ 0 ];\n\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf ) );\n\t\t}\n\t\tbyteOffset = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( !isInteger( byteOffset/BYTES_PER_ELEMENT ) ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Byte offset must be a multiple of %u. Value: `%u`.', BYTES_PER_ELEMENT, byteOffset ) );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\tlen = buf.byteLength - byteOffset;\n\t\t\tif ( !isInteger( len/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer view byte length must be a multiple of %u. View byte length: `%u`.', BYTES_PER_ELEMENT, len ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf, byteOffset );\n\t\t} else {\n\t\t\tlen = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t\t\t}\n\t\t\tif ( (len*BYTES_PER_ELEMENT) > (buf.byteLength-byteOffset) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len*BYTES_PER_ELEMENT ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf, byteOffset, len*2 );\n\t\t}\n\t}\n\tsetReadOnly( this, '_buffer', buf );\n\tsetReadOnly( this, '_length', buf.length/2 );\n\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128Array\n* @readonly\n* @type {PositiveInteger}\n* @default 16\n*\n* @example\n* var nbytes = Complex128Array.BYTES_PER_ELEMENT;\n* // returns 16\n*/\nsetReadOnly( Complex128Array, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Complex128Array\n* @readonly\n* @type {string}\n* @default 'Complex128Array'\n*\n* @example\n* var name = Complex128Array.name;\n* // returns 'Complex128Array'\n*/\nsetReadOnly( Complex128Array, 'name', 'Complex128Array' );\n\n/**\n* Creates a new 128-bit complex number array from an array-like object or an iterable.\n*\n* @name from\n* @memberof Complex128Array\n* @type {Function}\n* @param {(Collection|Object)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @throws {TypeError} when provided an iterator, a callback must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex128Array} 128-bit complex number array\n*\n* @example\n* var arr = Complex128Array.from( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var arr = Complex128Array.from( [ new Complex128( 1.0, 1.0 ) ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function clbk( v ) {\n*     return new Complex128( real(v)*2.0, imag(v)*2.0 );\n* }\n*\n* var arr = Complex128Array.from( [ new Complex128( 1.0, 1.0 ) ], clbk );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*/\nsetReadOnly( Complex128Array, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar get;\n\tvar len;\n\tvar flg;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isComplexArray( src ) ) {\n\t\tlen = src.length;\n\t\tif ( clbk ) {\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, src.get( i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = real( v );\n\t\t\t\t\tbuf[ j+1 ] = imag( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\t// Note: array contents affect how we iterate over a provided data source. If only complex number objects, we can extract real and imaginary components. Otherwise, for non-complex number arrays (e.g., `Float64Array`, etc), we assume a strided array where real and imaginary components are interleaved. In the former case, we expect a callback to return real and imaginary components (possibly as a complex number). In the latter case, we expect a callback to return *either* a real or imaginary component.\n\n\t\t\tlen = src.length;\n\t\t\tif ( src.get && src.set ) {\n\t\t\t\tget = accessorGetter( 'default' );\n\t\t\t} else {\n\t\t\t\tget = getter( 'default' );\n\t\t\t}\n\t\t\t// Detect whether we've been provided an array which returns complex number objects...\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( !isComplexLike( get( src, i ) ) ) {\n\t\t\t\t\tflg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If an array does not contain only complex number objects, then we assume interleaved real and imaginary components...\n\t\t\tif ( flg ) {\n\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. First argument must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tout = new this( len/2 );\n\t\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tbuf[ i ] = clbk.call( thisArg, get( src, i ), i );\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\t// If an array contains only complex number objects, then we need to extract real and imaginary components...\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, get( src, i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = real( v );\n\t\t\t\t\tbuf[ j+1 ] = imag( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tif ( tmp instanceof Error ) {\n\t\t\tthrow tmp;\n\t\t}\n\t\tlen = tmp.length / 2;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf[ i ] = tmp[ i ];\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n});\n\n/**\n* Creates a new 128-bit complex number array from a variable number of arguments.\n*\n* @name of\n* @memberof Complex128Array\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} 128-bit complex number array\n*\n* @example\n* var arr = Complex128Array.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( Complex128Array, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n/**\n* Returns an array element with support for both nonnegative and negative integer indices.\n*\n* @name at\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide an integer\n* @returns {(Complex128|void)} array element\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( 10 );\n*\n* var z = arr.at( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 9.0, -9.0 ], 9 );\n*\n* z = arr.at( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*\n* z = arr.at( -1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 9.0\n*\n* im = imag( z );\n* // returns -9.0\n*\n* z = arr.at( 100 );\n* // returns undefined\n*\n* z = arr.at( -100 );\n* // returns undefined\n*/\nsetReadOnly( Complex128Array.prototype, 'at', function at( idx ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx < 0 ) {\n\t\tidx += this._length;\n\t}\n\tif ( idx < 0 || idx >= this._length ) {\n\t\treturn;\n\t}\n\treturn getComplex128( this._buffer, idx );\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'buffer', function get() {\n\treturn this._buffer.buffer;\n});\n\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 160\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'byteLength', function get() {\n\treturn this._buffer.byteLength;\n});\n\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'byteOffset', function get() {\n\treturn this._buffer.byteOffset;\n});\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 16\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 16\n*/\nsetReadOnly( Complex128Array.prototype, 'BYTES_PER_ELEMENT', Complex128Array.BYTES_PER_ELEMENT );\n\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} modified array\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( 4 );\n*\n* // Set the array elements:\n* arr.set( new Complex128( 1.0, 1.0 ), 0 );\n* arr.set( new Complex128( 2.0, 2.0 ), 1 );\n* arr.set( new Complex128( 3.0, 3.0 ), 2 );\n* arr.set( new Complex128( 4.0, 4.0 ), 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* // Get the last array element:\n* var z = arr.get( 3 );\n*\n* var re = real( z );\n* // returns 2.0\n*\n* var im = imag( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex128Array.prototype, 'copyWithin', function copyWithin( target, start ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\t// FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n\tif ( arguments.length === 2 ) {\n\t\tthis._buffer.copyWithin( target*2, start*2 );\n\t} else {\n\t\tthis._buffer.copyWithin( target*2, start*2, arguments[2]*2 );\n\t}\n\treturn this;\n});\n\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var arr = [\n*     new Complex128( 1.0, 1.0 ),\n*     new Complex128( 2.0, 2.0 ),\n*     new Complex128( 3.0, 3.0 )\n* ];\n* arr = new Complex128Array( arr );\n*\n* // Create an iterator:\n* var it = arr.entries();\n*\n* // Iterate over the key-value pairs...\n* var v = it.next().value;\n* // returns [ 0, <Complex128> ]\n*\n* v = it.next().value;\n* // returns [ 1, <Complex128> ]\n*\n* v = it.next().value;\n* // returns [ 2, <Complex128> ]\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'entries', function entries() {\n\tvar buffer;\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuffer = this._buffer;\n\tlen = this._length;\n\n\t// Initialize the iteration indices:\n\ti = -1;\n\tj = -2;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar z;\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj += 2;\n\t\tz = new Complex128( buffer[ j ], buffer[ j+1 ] );\n\t\treturn {\n\t\t\t'value': [ i, z ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.entries();\n\t}\n});\n\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function.\n*\n* @name every\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var bool = arr.every( predicate );\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'every', function every( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( !predicate.call( thisArg, getComplex128( buf, i ), i, this ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\n/**\n* Returns a modified typed array filled with a fill value.\n*\n* @name fill\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {ComplexLike} value - fill value\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @throws {TypeError} third argument must be an integer\n* @returns {Complex128Array} modified array\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.fill( new Complex128( 1.0, 1.0 ), 1 );\n*\n* var z = arr.get( 1 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns 1.0\n*\n* z = arr.get( 2 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'fill', function fill( value, start, end ) {\n\tvar buf;\n\tvar len;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', value ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( start ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', start ) );\n\t\t}\n\t\tif ( start < 0 ) {\n\t\t\tstart += len;\n\t\t\tif ( start < 0 ) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length > 2 ) {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t} else {\n\t\t\tend = len;\n\t\t}\n\t} else {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\tre = real( value );\n\tim = imag( value );\n\tfor ( i = start; i < end; i++ ) {\n\t\tidx = 2*i;\n\t\tbuf[ idx ] = re;\n\t\tbuf[ idx+1 ] = im;\n\t}\n\treturn this;\n});\n\n/**\n* Returns a new array containing the elements of an array which pass a test implemented by a predicate function.\n*\n* @name filter\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex128Array} complex number array\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var out = arr.filter( predicate );\n* // returns <Complex128Array>\n*\n* var len = out.length;\n* // returns 1\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 2.0\n*\n* var im = imag( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex128Array.prototype, 'filter', function filter( predicate, thisArg ) {\n\tvar buf;\n\tvar out;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tout = [];\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex128( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\tout.push( z );\n\t\t}\n\t}\n\treturn new this.constructor( out );\n});\n\n/**\n* Returns the first element in an array for which a predicate function returns a truthy value.\n*\n* @name find\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {(Complex128|void)} array element or undefined\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.find( predicate );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'find', function find( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex128( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn z;\n\t\t}\n\t}\n});\n\n/**\n* Returns the index of the first element in an array for which a predicate function returns a truthy value.\n*\n* @name findIndex\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var idx = arr.findIndex( predicate );\n* // returns 2\n*/\nsetReadOnly( Complex128Array.prototype, 'findIndex', function findIndex( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex128( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLast\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {(Complex128|void)} array element or undefined\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.findLast( predicate );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 3.0\n*\n* var im = imag( z );\n* // returns 3.0\n*/\nsetReadOnly( Complex128Array.prototype, 'findLast', function findLast( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = this._length-1; i >= 0; i-- ) {\n\t\tz = getComplex128( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn z;\n\t\t}\n\t}\n});\n\n/**\n* Returns the index of the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLastIndex\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var idx = arr.findLastIndex( predicate );\n* // returns 1\n*/\nsetReadOnly( Complex128Array.prototype, 'findLastIndex', function findLastIndex( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = this._length-1; i >= 0; i-- ) {\n\t\tz = getComplex128( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Invokes a function once for each array element.\n*\n* @name forEach\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - function invocation context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* function log( v, i ) {\n*     console.log( '%s: %s', i, v.toString() );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* arr.forEach( log );\n*/\nsetReadOnly( Complex128Array.prototype, 'forEach', function forEach( fcn, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex128( buf, i );\n\t\tfcn.call( thisArg, z, i, this );\n\t}\n});\n\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(Complex128|void)} array element\n*\n* @example\n* var arr = new Complex128Array( 10 );\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var z = arr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*\n* z = arr.get( 100 );\n* // returns undefined\n*/\nsetReadOnly( Complex128Array.prototype, 'get', function get( idx ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx >= this._length ) {\n\t\treturn;\n\t}\n\treturn getComplex128( this._buffer, idx );\n});\n\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Returns a boolean indicating whether an array includes a provided value.\n*\n* @name includes\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - search element\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {boolean} boolean indicating whether an array includes a provided value\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var bool = arr.includes( new Complex128( 3.0, -3.0 ) );\n* // returns true\n*\n* bool = arr.includes( new Complex128( 3.0, -3.0 ), 3 );\n* // returns false\n*\n* bool = arr.includes( new Complex128( 4.0, -4.0 ), -3 );\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'includes', function includes( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfromIndex = 0;\n\t}\n\tre = real( searchElement );\n\tim = imag( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @name indexOf\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - element to find\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var idx = arr.indexOf( new Complex128( 3.0, -3.0 ) );\n* // returns 2\n*\n* idx = arr.indexOf( new Complex128( 3.0, -3.0 ), 3 );\n* // returns -1\n*\n* idx = arr.indexOf( new Complex128( 4.0, -4.0 ), -3 );\n* // returns 3\n*/\nsetReadOnly( Complex128Array.prototype, 'indexOf', function indexOf( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfromIndex = 0;\n\t}\n\tre = real( searchElement );\n\tim = imag( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns a new string by concatenating all array elements.\n*\n* @name join\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {string} [separator=','] - element separator\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a string\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.join();\n* // returns '1 + 1i,2 + 2i'\n*\n* str = arr.join( '/' );\n* // returns '1 + 1i/2 + 2i'\n*/\nsetReadOnly( Complex128Array.prototype, 'join', function join( separator ) {\n\tvar out;\n\tvar buf;\n\tvar sep;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( arguments.length === 0 ) {\n\t\tsep = ',';\n\t} else if ( isString( separator ) ) {\n\t\tsep = separator;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', separator ) );\n\t}\n\tout = [];\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( getComplex128( buf, i ).toString() );\n\t}\n\treturn out.join( sep );\n});\n\n/**\n* Returns an iterator for iterating over each index key in a typed array.\n*\n* @name keys\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var iter = arr.keys();\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'keys', function keys() {\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tlen = this._length;\n\n\t// Initialize an iteration index:\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': i,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.keys();\n\t}\n});\n\n/**\n* Returns the last index at which a given element can be found.\n*\n* @name lastIndexOf\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - element to find\n* @param {integer} [fromIndex] - index at which to start searching backward (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 3.0, -3.0 ], 4 );\n*\n* var idx = arr.lastIndexOf( new Complex128( 3.0, -3.0 ) );\n* // returns 4\n*\n* idx = arr.lastIndexOf( new Complex128( 3.0, -3.0 ), 3 );\n* // returns 2\n*\n* idx = arr.lastIndexOf( new Complex128( 5.0, -5.0 ), 3 );\n* // returns -1\n*\n* idx = arr.lastIndexOf( new Complex128( 2.0, -2.0 ), -3 );\n* // returns 1\n*/\nsetReadOnly( Complex128Array.prototype, 'lastIndexOf', function lastIndexOf( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= this._length ) {\n\t\t\tfromIndex = this._length - 1;\n\t\t} else if ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t}\n\t} else {\n\t\tfromIndex = this._length - 1;\n\t}\n\tre = real( searchElement );\n\tim = imag( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i >= 0; i-- ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns a new array with each element being the result of a provided callback function.\n*\n* @name map\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} fcn - callback function\n* @param {*} [thisArg] - callback function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex128Array} complex number array\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function scale( v, i ) {\n*     return new Complex128( 2.0*real( v ), 2.0*imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var out = arr.map( scale );\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 2.0\n*\n* var im = imag( z );\n* // returns -2.0\n*/\nsetReadOnly( Complex128Array.prototype, 'map', function map( fcn, thisArg ) {\n\tvar outbuf;\n\tvar buf;\n\tvar out;\n\tvar i;\n\tvar v;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tbuf = this._buffer;\n\tout = new this.constructor( this._length );\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tv = fcn.call( thisArg, getComplex128( buf, i ), i, this );\n\t\tif ( isComplexLike( v ) ) {\n\t\t\toutbuf[ 2*i ] = real( v );\n\t\t\toutbuf[ (2*i)+1 ] = imag( v );\n\t\t} else if ( isArrayLikeObject( v ) && v.length === 2 ) {\n\t\t\toutbuf[ 2*i ] = v[ 0 ];\n\t\t\toutbuf[ (2*i)+1 ] = v[ 1 ];\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t}\n\t}\n\treturn out;\n});\n\n/**\n* Applies a provided callback function to each element of the array, in order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduce\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n* var cadd = require( '@stdlib/complex/float64/base/add' );\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.reduce( cadd );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 6.0\n*\n* var im = imag( z );\n* // returns 6.0\n*/\nsetReadOnly( Complex128Array.prototype, 'reduce', function reduce( reducer, initialValue ) {\n\tvar buf;\n\tvar acc;\n\tvar len;\n\tvar v;\n\tvar i;\n\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tacc = initialValue;\n\t\ti = 0;\n\t} else {\n\t\tif ( len === 0 ) {\n\t\t\tthrow new Error( 'invalid operation. If not provided an initial value, an array must contain at least one element.' );\n\t\t}\n\t\tacc = getComplex128( buf, 0 );\n\t\ti = 1;\n\t}\n\tfor ( ; i < len; i++ ) {\n\t\tv = getComplex128( buf, i );\n\t\tacc = reducer( acc, v, i, this );\n\t}\n\treturn acc;\n});\n\n/**\n* Applies a provided callback function to each element of the array, in reverse order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduceRight\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n* var cadd = require( '@stdlib/complex/float64/base/add' );\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.reduceRight( cadd );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 6.0\n*\n* var im = imag( z );\n* // returns 6.0\n*/\nsetReadOnly( Complex128Array.prototype, 'reduceRight', function reduceRight( reducer, initialValue ) {\n\tvar buf;\n\tvar acc;\n\tvar len;\n\tvar v;\n\tvar i;\n\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tacc = initialValue;\n\t\ti = len-1;\n\t} else {\n\t\tif ( len === 0 ) {\n\t\t\tthrow new Error( 'invalid operation. If not provided an initial value, an array must contain at least one element.' );\n\t\t}\n\t\tacc = getComplex128( buf, len-1 );\n\t\ti = len-2;\n\t}\n\tfor ( ; i >= 0; i-- ) {\n\t\tv = getComplex128( buf, i );\n\t\tacc = reducer( acc, v, i, this );\n\t}\n\treturn acc;\n});\n\n/**\n* Reverses an array in-place.\n*\n* @name reverse\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} reversed array\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.reverse();\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 3.0\n*\n* var im = imag( z );\n* // returns 3.0\n*\n* z = out.get( 1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns 2.0\n*\n* z = out.get( 2 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'reverse', function reverse() {\n\tvar buf;\n\tvar tmp;\n\tvar len;\n\tvar N;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tlen = this._length;\n\tbuf = this._buffer;\n\tN = floor( len / 2 );\n\tfor ( i = 0; i < N; i++ ) {\n\t\tj = len - i - 1;\n\t\ttmp = buf[ (2*i) ];\n\t\tbuf[ (2*i) ] = buf[ (2*j) ];\n\t\tbuf[ (2*j) ] = tmp;\n\t\ttmp = buf[ (2*i)+1 ];\n\t\tbuf[ (2*i)+1 ] = buf[ (2*j)+1 ];\n\t\tbuf[ (2*j)+1 ] = tmp;\n\t}\n\treturn this;\n});\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, real or complex, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values as intended.\n*\n* @name set\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be either a complex number, an array-like object, or a complex number array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( 10 );\n*\n* var z = arr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'set', function set( value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar sbuf;\n\tvar idx;\n\tvar buf;\n\tvar tmp;\n\tvar flg;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length > 1 ) {\n\t\tidx = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx ) );\n\t\t}\n\t} else {\n\t\tidx = 0;\n\t}\n\tif ( isComplexLike( value ) ) {\n\t\tif ( idx >= this._length ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx ) );\n\t\t}\n\t\tidx *= 2;\n\t\tbuf[ idx ] = real( value );\n\t\tbuf[ idx+1 ] = imag( value );\n\t\treturn;\n\t}\n\tif ( isComplexArray( value ) ) {\n\t\tN = value._length;\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tsbuf = value._buffer;\n\n\t\t// Check for overlapping memory...\n\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\tif (\n\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t(\n\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t)\n\t\t) {\n\t\t\t// We need to copy source values...\n\t\t\ttmp = new Float64Array( sbuf.length );\n\t\t\tfor ( i = 0; i < sbuf.length; i++ ) {\n\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t}\n\t\t\tsbuf = tmp;\n\t\t}\n\t\tidx *= 2;\n\t\tj = 0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\tidx += 2; // stride\n\t\t\tj += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tif ( isCollection( value ) ) {\n\t\t// Detect whether we've been provided an array of complex numbers...\n\t\tN = value.length;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tif ( !isComplexLike( value[ i ] ) ) {\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// If an array does not contain only complex numbers, then we assume interleaved real and imaginary components...\n\t\tif ( flg ) {\n\t\t\tif ( !isEven( N ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', N ) );\n\t\t\t}\n\t\t\tif ( idx+(N/2) > this._length ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t\t}\n\t\t\tsbuf = value;\n\n\t\t\t// Check for overlapping memory...\n\t\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\t\tif (\n\t\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t\t(\n\t\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// We need to copy source values...\n\t\t\t\ttmp = new Float64Array( N );\n\t\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t\t}\n\t\t\t\tsbuf = tmp;\n\t\t\t}\n\t\t\tidx *= 2;\n\t\t\tN /= 2;\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\t\tidx += 2; // stride\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// If an array contains only complex numbers, then we need to extract real and imaginary components...\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tidx *= 2;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tv = value[ i ];\n\t\t\tbuf[ idx ] = real( v );\n\t\t\tbuf[ idx+1 ] = imag( v );\n\t\t\tidx += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `%s`.', value ) );\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Copies a portion of a typed array to a new typed array.\n*\n* @name slice\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {Complex128Array} complex number array\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var out = arr.slice();\n* // returns <Complex128Array>\n*\n* var len = out.length;\n* // returns 5\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns -1.0\n*\n* z = out.get( len-1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 5.0\n*\n* im = imag( z );\n* // returns -5.0\n*\n* out = arr.slice( 1, -2 );\n* // returns <Complex128Array>\n*\n* len = out.length;\n* // returns 2\n*\n* z = out.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns -2.0\n*\n* z = out.get( len-1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 3.0\n*\n* im = imag( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex128Array.prototype, 'slice', function slice( start, end ) {\n\tvar outlen;\n\tvar outbuf;\n\tvar out;\n\tvar idx;\n\tvar buf;\n\tvar len;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length === 0 ) {\n\t\tstart = 0;\n\t\tend = len;\n\t} else {\n\t\tif ( !isInteger( start ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', start ) );\n\t\t}\n\t\tif ( start < 0 ) {\n\t\t\tstart += len;\n\t\t\tif ( start < 0 ) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length === 1 ) {\n\t\t\tend = len;\n\t\t} else {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t} else if ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t}\n\t}\n\tif ( start < end ) {\n\t\toutlen = end - start;\n\t} else {\n\t\toutlen = 0;\n\t}\n\tout = new this.constructor( outlen );\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < outlen; i++ ) {\n\t\tidx = 2*(i+start);\n\t\toutbuf[ 2*i ] = buf[ idx ];\n\t\toutbuf[ (2*i)+1 ] = buf[ idx+1 ];\n\t}\n\treturn out;\n});\n\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function.\n*\n* @name some\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var bool = arr.some( predicate );\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'some', function some( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( predicate.call( thisArg, getComplex128( buf, i ), i, this ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\n/**\n* Sorts an array in-place.\n*\n* @name sort\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} compareFcn - comparison function\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex128Array} sorted array\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function compare( a, b ) {\n*     var re1;\n*     var re2;\n*     var im1;\n*     var im2;\n*     re1 = real( a );\n*     re2 = real( b );\n*     if ( re1 < re2 ) {\n*         return -1;\n*     }\n*     if ( re1 > re2 ) {\n*         return 1;\n*     }\n*     im1 = imag( a );\n*     im2 = imag( b );\n*     if ( im1 < im2 ) {\n*         return -1;\n*     }\n*     if ( im1 > im2 ) {\n*         return 1;\n*     }\n*     return 0;\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 3.0, -3.0 ], 0 );\n* arr.set( [ 1.0, -1.0 ], 1 );\n* arr.set( [ 2.0, -2.0 ], 2 );\n*\n* var out = arr.sort( compare );\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns -1.0\n*\n* z = out.get( 1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns -2.0\n*\n* z = out.get( 2 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 3.0\n*\n* im = imag( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex128Array.prototype, 'sort', function sort( compareFcn ) {\n\tvar tmp;\n\tvar buf;\n\tvar len;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( compareFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', compareFcn ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\ttmp = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\ttmp.push( getComplex128( buf, i ) );\n\t}\n\ttmp.sort( compareFcn );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tj = 2 * i;\n\t\tbuf[ j ] = real( tmp[i] );\n\t\tbuf[ j+1 ] = imag( tmp[i] );\n\t}\n\treturn this;\n});\n\n/**\n* Creates a new typed array view over the same underlying `ArrayBuffer` and with the same underlying data type as the host array.\n*\n* @name subarray\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {Complex64Array} subarray\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var subarr = arr.subarray();\n* // returns <Complex128Array>\n*\n* var len = subarr.length;\n* // returns 5\n*\n* var z = subarr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns -1.0\n*\n* z = subarr.get( len-1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 5.0\n*\n* im = imag( z );\n* // returns -5.0\n*\n* subarr = arr.subarray( 1, -2 );\n* // returns <Complex128Array>\n*\n* len = subarr.length;\n* // returns 2\n*\n* z = subarr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns -2.0\n*\n* z = subarr.get( len-1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 3.0\n*\n* im = imag( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex128Array.prototype, 'subarray', function subarray( begin, end ) {\n\tvar offset;\n\tvar buf;\n\tvar len;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length === 0 ) {\n\t\tbegin = 0;\n\t\tend = len;\n\t} else {\n\t\tif ( !isInteger( begin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', begin ) );\n\t\t}\n\t\tif ( begin < 0 ) {\n\t\t\tbegin += len;\n\t\t\tif ( begin < 0 ) {\n\t\t\t\tbegin = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length === 1 ) {\n\t\t\tend = len;\n\t\t} else {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t} else if ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t}\n\t}\n\tif ( begin >= len ) {\n\t\tlen = 0;\n\t\toffset = buf.byteLength;\n\t} else if ( begin >= end ) {\n\t\tlen = 0;\n\t\toffset = buf.byteOffset + ( begin*BYTES_PER_ELEMENT );\n\t} else {\n\t\tlen = end - begin;\n\t\toffset = buf.byteOffset + ( begin*BYTES_PER_ELEMENT );\n\t}\n\treturn new this.constructor( buf.buffer, offset, ( len < 0 ) ? 0 : len );\n});\n\n/**\n* Serializes an array as a locale-specific string.\n*\n* @name toLocaleString\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {(string|Array<string>)} [locales] - locale identifier(s)\n* @param {Object} [options] - configuration options\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a string or an array of strings\n* @throws {TypeError} options argument must be an object\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.toLocaleString();\n* // returns '1 + 1i,2 + 2i'\n*/\nsetReadOnly( Complex128Array.prototype, 'toLocaleString', function toLocaleString( locales, options ) {\n\tvar opts;\n\tvar loc;\n\tvar out;\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( arguments.length === 0 ) {\n\t\tloc = [];\n\t} else if ( isString( locales ) || isStringArray( locales ) ) {\n\t\tloc = locales;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string or an array of strings. Value: `%s`.', locales ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\topts = {};\n\t} else if ( isObject( options ) ) {\n\t\topts = options;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tbuf = this._buffer;\n\tout = [];\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( getComplex128( buf, i ).toLocaleString( loc, opts ) );\n\t}\n\treturn out.join( ',' );\n});\n\n/**\n* Returns a new typed array containing the elements in reversed order.\n*\n* @name toReversed\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} reversed array\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.toReversed();\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 3.0\n*\n* var im = imag( z );\n* // returns 3.0\n*\n* z = out.get( 1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns 2.0\n*\n* z = out.get( 2 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'toReversed', function toReversed() {\n\tvar outbuf;\n\tvar out;\n\tvar len;\n\tvar buf;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tlen = this._length;\n\tout = new this.constructor( len );\n\tbuf = this._buffer;\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < len; i++ ) {\n\t\tj = len - i - 1;\n\t\toutbuf[ (2*i) ] = buf[ (2*j) ];\n\t\toutbuf[ (2*i)+1 ] = buf[ (2*j)+1 ];\n\t}\n\treturn out;\n});\n\n/**\n* Returns a new typed array containing the elements in sorted order.\n*\n* @name toSorted\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} compareFcn - comparison function\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex128Array} sorted array\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* function compare( a, b ) {\n*     var re1;\n*     var re2;\n*     var im1;\n*     var im2;\n*     re1 = real( a );\n*     re2 = real( b );\n*     if ( re1 < re2 ) {\n*         return -1;\n*     }\n*     if ( re1 > re2 ) {\n*         return 1;\n*     }\n*     im1 = imag( a );\n*     im2 = imag( b );\n*     if ( im1 < im2 ) {\n*         return -1;\n*     }\n*     if ( im1 > im2 ) {\n*         return 1;\n*     }\n*     return 0;\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 3.0, -3.0 ], 0 );\n* arr.set( [ 1.0, -1.0 ], 1 );\n* arr.set( [ 2.0, -2.0 ], 2 );\n*\n* var out = arr.sort( compare );\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns -1.0\n*\n* z = out.get( 1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns -2.0\n*\n* z = out.get( 2 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 3.0\n*\n* im = imag( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex128Array.prototype, 'toSorted', function toSorted( compareFcn ) {\n\tvar tmp;\n\tvar buf;\n\tvar len;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( compareFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', compareFcn ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\ttmp = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\ttmp.push( getComplex128( buf, i ) );\n\t}\n\ttmp.sort( compareFcn );\n\treturn new Complex128Array( tmp );\n});\n\n/**\n* Serializes an array as a string.\n*\n* @name toString\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.toString();\n* // returns '1 + 1i,2 + 2i'\n*/\nsetReadOnly( Complex128Array.prototype, 'toString', function toString() {\n\tvar out;\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tout = [];\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( getComplex128( buf, i ).toString() );\n\t}\n\treturn out.join( ',' );\n});\n\n/**\n* Returns an iterator for iterating over each value in a typed array.\n*\n* @name values\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n*\n* var iter = arr.values();\n*\n* var v = iter.next().value;\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 1.0\n*\n* var im = imag( v );\n* // returns -1.0\n*\n* v = iter.next().value;\n* // returns <Complex128>\n*\n* re = real( v );\n* // returns 2.0\n*\n* im = imag( v );\n* // returns -2.0\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'values', function values() {\n\tvar iter;\n\tvar self;\n\tvar len;\n\tvar FLG;\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuf = this._buffer;\n\tlen = this._length;\n\n\t// Initialize an iteration index:\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': getComplex128( buf, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.values();\n\t}\n});\n\n/**\n* Returns a new typed array with the element at a provided index replaced with a provided value.\n*\n* @name with\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} index - element index\n* @param {ComplexLike} value - new value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {TypeError} second argument must be a complex number\n* @returns {Complex128Array} new typed array\n*\n* @example\n* var real = require( '@stdlib/complex/float64/real' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.with( 0, new Complex128( 4.0, 4.0 ) );\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 4.0\n*\n* var im = imag( z );\n* // returns 4.0\n*/\nsetReadOnly( Complex128Array.prototype, 'with', function copyWith( index, value ) {\n\tvar buf;\n\tvar out;\n\tvar len;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isInteger( index ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', index ) );\n\t}\n\tlen = this._length;\n\tif ( index < 0 ) {\n\t\tindex += len;\n\t}\n\tif ( index < 0 || index >= len ) {\n\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%s`.', index ) );\n\t}\n\tif ( !isComplexLike( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a complex number. Value: `%s`.', value ) );\n\t}\n\tout = new this.constructor( this._buffer );\n\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tbuf[ 2*index ] = real( value );\n\tbuf[ (2*index)+1 ] = imag( value );\n\treturn out;\n});\n\n\n// EXPORTS //\n\nmodule.exports = Complex128Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the real component of a double-precision complex floating-point number.\n*\n* @module @stdlib/complex/float64/real\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n* var real = require( '@stdlib/complex/float64/real' );\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var re = real( z );\n* // returns 5.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the real component of a double-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} real component\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var re = real( z );\n* // returns 5.0\n*/\nfunction real( z ) {\n\treturn z.re;\n}\n\n\n// EXPORTS //\n\nmodule.exports = real;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the imaginary component of a double-precision complex floating-point number.\n*\n* @module @stdlib/complex/float64/imag\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n* var imag = require( '@stdlib/complex/float64/imag' );\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var im = imag( z );\n* // returns 3.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the imaginary component of a double-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} imaginary component\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64/ctor' );\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var im = imag( z );\n* // returns 3.0\n*/\nfunction imag( z ) {\n\treturn z.im;\n}\n\n\n// EXPORTS //\n\nmodule.exports = imag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar format = require( '@stdlib/string/format' );\nvar real = require( '@stdlib/complex/float64/real' );\nvar imag = require( '@stdlib/complex/float64/imag' );\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tz = v.value;\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( real( z ), imag( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar format = require( '@stdlib/string/format' );\nvar real = require( '@stdlib/complex/float64/real' );\nvar imag = require( '@stdlib/complex/float64/imag' );\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tz = clbk.call( thisArg, v.value, i );\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( real( z ), imag( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar real = require( '@stdlib/complex/float64/real' );\nvar imag = require( '@stdlib/complex/float64/imag' );\n\n\n// MAIN //\n\n/**\n* Returns a strided array of real and imaginary components.\n*\n* @private\n* @param {Float64Array} buf - output array\n* @param {Array} arr - array containing complex numbers\n* @returns {(Float64Array|null)} output array or null\n*/\nfunction fromArray( buf, arr ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tlen = arr.length;\n\tj = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( !isComplexLike( v ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tbuf[ j ] = real( v );\n\t\tbuf[ j+1 ] = imag( v );\n\t\tj += 2; // stride\n\t}\n\treturn buf;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean array.\n*\n* @module @stdlib/array/bool\n*\n* @example\n* var BooleanArray = require( '@stdlib/array/bool' );\n*\n* var arr = new BooleanArray();\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var BooleanArray = require( '@stdlib/array/bool' );\n*\n* var arr = new BooleanArray( 2 );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var BooleanArray = require( '@stdlib/array/bool' );\n*\n* var arr = new BooleanArray( [ true, false ] );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var BooleanArray = require( '@stdlib/array/bool' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new BooleanArray( buf );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 16\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var BooleanArray = require( '@stdlib/array/bool' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new BooleanArray( buf, 8 );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 8\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var BooleanArray = require( '@stdlib/array/bool' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new BooleanArray( buf, 8, 2 );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isArrayBuffer = require( '@stdlib/assert/is-arraybuffer' );\nvar isObject = require( '@stdlib/assert/is-object' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isStringArray = require( '@stdlib/assert/is-string-array' ).primitives;\nvar hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\nvar ITERATOR_SYMBOL = require( '@stdlib/symbol/iterator' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar Uint8Array = require( './../../uint8' );\nvar Boolean = require( '@stdlib/boolean/ctor' );\nvar getter = require( './../../base/getter' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar accessorGetter = require( './../../base/accessor-getter' );\nvar format = require( '@stdlib/string/format' );\nvar fromIterator = require( './from_iterator.js' );\nvar fromIteratorMap = require( './from_iterator_map.js' );\nvar fromArray = require( './from_array.js' );\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = Uint8Array.BYTES_PER_ELEMENT;\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a `BooleanArray`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `BooleanArray`\n*/\nfunction isBooleanArray( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'BooleanArray' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a boolean typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean typed array constructor\n*/\nfunction isBooleanArrayConstructor( value ) {\n\treturn ( value === BooleanArray );\n}\n\n\n// MAIN //\n\n/**\n* Boolean array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or an iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @returns {BooleanArray} boolean array\n*\n* @example\n* var arr = new BooleanArray();\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new BooleanArray( 2 );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new BooleanArray( [ true, false ] );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new BooleanArray( buf );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 16\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new BooleanArray( buf, 8 );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 8\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new BooleanArray( buf, 8, 2 );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction BooleanArray() {\n\tvar byteOffset;\n\tvar nargs;\n\tvar buf;\n\tvar len;\n\tvar arg;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof BooleanArray) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new BooleanArray();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new BooleanArray( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new BooleanArray( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new BooleanArray( arguments[0], arguments[1], arguments[2] );\n\t}\n\t// Create the underlying data buffer...\n\tif ( nargs === 0 ) {\n\t\tbuf = new Uint8Array( 0 ); // backward-compatibility\n\t} else if ( nargs === 1 ) {\n\t\targ = arguments[ 0 ];\n\t\tif ( isNonNegativeInteger( arg ) ) {\n\t\t\tbuf = new Uint8Array( arg );\n\t\t} else if ( isCollection( arg ) ) {\n\t\t\tbuf = fromArray( new Uint8Array( arg.length ), arg );\n\t\t} else if ( isArrayBuffer( arg ) ) {\n\t\t\tbuf = new Uint8Array( arg );\n\t\t} else if ( isObject( arg ) ) {\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\tif ( !isFunction( arg[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\tbuf = arg[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\tbuf = new Uint8Array( fromIterator( buf ) );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t}\n\t} else {\n\t\tbuf = arguments[ 0 ];\n\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf ) );\n\t\t}\n\t\tbyteOffset = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\tbuf = new Uint8Array( buf, byteOffset );\n\t\t} else {\n\t\t\tlen = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t\t\t}\n\t\t\tif ( (len*BYTES_PER_ELEMENT) > (buf.byteLength-byteOffset) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len*BYTES_PER_ELEMENT ) );\n\t\t\t}\n\t\t\tbuf = new Uint8Array( buf, byteOffset, len );\n\t\t}\n\t}\n\tsetReadOnly( this, '_buffer', buf );\n\tsetReadOnly( this, '_length', buf.length );\n\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof BooleanArray\n* @readonly\n* @type {PositiveInteger}\n* @default 1\n*\n* @example\n* var nbytes = BooleanArray.BYTES_PER_ELEMENT;\n* // returns 1\n*/\nsetReadOnly( BooleanArray, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof BooleanArray\n* @readonly\n* @type {string}\n* @default 'BooleanArray'\n*\n* @example\n* var str = BooleanArray.name;\n* // returns 'BooleanArray'\n*/\nsetReadOnly( BooleanArray, 'name', 'BooleanArray' );\n\n/**\n* Creates a new boolean array from an array-like object or an iterable.\n*\n* @name from\n* @memberof BooleanArray\n* @type {Function}\n* @param {(Collection|Iterable)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @returns {BooleanArray} boolean array\n*\n* @example\n* var arr = BooleanArray.from( [ true, false ] );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* function clbk( v ) {\n*     return !v;\n* }\n*\n* var arr = BooleanArray.from( [ true, false ], clbk );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( BooleanArray, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar get;\n\tvar len;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isBooleanArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\tlen = src.length;\n\t\t\tif ( src.get && src.set ) {\n\t\t\t\tget = accessorGetter( 'default' );\n\t\t\t} else {\n\t\t\t\tget = getter( 'default' );\n\t\t\t}\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tbuf[ i ] = Boolean( clbk.call( thisArg, get( src, i ), i ) );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tlen = tmp.length;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf[ i ] = tmp[ i ];\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n});\n\n/**\n* Creates a new boolean array from a variable number of arguments.\n*\n* @name of\n* @memberof BooleanArray\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a boolean array\n* @returns {BooleanArray} boolean array\n*\n* @example\n* var arr = BooleanArray.of( true, true, true, true );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 4\n*/\nsetReadOnly( BooleanArray, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isBooleanArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n/**\n* Returns an array element located at integer position (index) `i`, with support for both nonnegative and negative integer indices.\n*\n* @name at\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {integer} idx - element index\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} must provide an integer\n* @returns {(boolean|void)} array element\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var v = arr.at( 0 );\n* // returns true\n*\n* v = arr.at( -1 );\n* // returns true\n*\n* v = arr.at( 100 );\n* // returns undefined\n*/\nsetReadOnly( BooleanArray.prototype, 'at', function at( idx ) {\n\tvar buf;\n\tvar len;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an integer. Value: `%s`.', idx ) );\n\t}\n\tlen = this._length;\n\tbuf = this._buffer;\n\tif ( idx < 0 ) {\n\t\tidx += len;\n\t}\n\tif ( idx < 0 || idx >= len ) {\n\t\treturn;\n\t}\n\treturn Boolean( buf[ idx ] );\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof BooleanArray.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/\nsetReadOnlyAccessor( BooleanArray.prototype, 'buffer', function get() {\n\treturn this._buffer.buffer;\n});\n\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof BooleanArray.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 10\n*/\nsetReadOnlyAccessor( BooleanArray.prototype, 'byteLength', function get() {\n\treturn this._buffer.byteLength;\n});\n\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof BooleanArray.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/\nsetReadOnlyAccessor( BooleanArray.prototype, 'byteOffset', function get() {\n\treturn this._buffer.byteOffset;\n});\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof BooleanArray.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 1\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 1\n*/\nsetReadOnly( BooleanArray.prototype, 'BYTES_PER_ELEMENT', BooleanArray.BYTES_PER_ELEMENT );\n\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a boolean array\n* @returns {BooleanArray} modified array\n*\n* @example\n* var arr = new BooleanArray( 4 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( false, 2 );\n* arr.set( true, 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* var v = arr.get( 2 );\n* // returns true\n*\n* v = arr.get( 3 );\n* // returns false\n*/\nsetReadOnly( BooleanArray.prototype, 'copyWithin', function copyWithin( target, start ) {\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\t// FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n\tif ( arguments.length === 2 ) {\n\t\tthis._buffer.copyWithin( target, start );\n\t} else {\n\t\tthis._buffer.copyWithin( target, start, arguments[2] );\n\t}\n\treturn this;\n});\n\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {Iterator} iterator\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var it = arr.entries();\n*\n* var v = it.next().value;\n* // returns [ 0, true ]\n*\n* v = it.next().value;\n* // returns [ 1, false ]\n*\n* v = it.next().value;\n* // returns [ 2, true ]\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'entries', function entries() {\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar buf;\n\tvar FLG;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tself = this;\n\tbuf = this._buffer;\n\tlen = this._length;\n\n\t// Initialize an iteration index:\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': [ i, Boolean( buf[ i ] ) ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.entries();\n\t}\n});\n\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function.\n*\n* @name every\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( true, 1 );\n* arr.set( true, 2 );\n*\n* var bool = arr.every( predicate );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'every', function every( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( !predicate.call( thisArg, Boolean( buf[ i ] ), i, this ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\n/**\n* Returns a modified typed array filled with a fill value.\n*\n* @name fill\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {boolean} value - fill value\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a boolean\n* @throws {TypeError} second argument must be an integer\n* @throws {TypeError} third argument must be an integer\n* @returns {BooleanArray} modified array\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.fill( true, 1 );\n*\n* var v = arr.get( 0 );\n* // returns false\n*\n* v = arr.get( 1 );\n* // returns true\n*\n* v = arr.get( 2 );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'fill', function fill( value, start, end ) {\n\tvar buf;\n\tvar len;\n\tvar val;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isBoolean( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a boolean. Value: `%s`.', value ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( start ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', start ) );\n\t\t}\n\t\tif ( start < 0 ) {\n\t\t\tstart += len;\n\t\t\tif ( start < 0 ) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length > 2 ) {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t} else {\n\t\t\tend = len;\n\t\t}\n\t} else {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\tif ( value ) {\n\t\tval = 1;\n\t} else {\n\t\tval = 0;\n\t}\n\tfor ( i = start; i < end; i++ ) {\n\t\tbuf[ i ] = val;\n\t}\n\treturn this;\n});\n\n/**\n* Returns a new array containing the elements of an array which pass a test implemented by a predicate function.\n*\n* @name filter\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {BooleanArray} boolean array\n*\n* @example\n* function predicate( v ) {\n*     return ( v === true );\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.filter( predicate );\n* // returns <BooleanArray>\n*\n* var len = out.length;\n* // returns 2\n*\n* var v = out.get( 0 );\n* // returns true\n*\n* v = out.get( 1 );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'filter', function filter( predicate, thisArg ) {\n\tvar buf;\n\tvar out;\n\tvar i;\n\tvar v;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tout = [];\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tv = Boolean( buf[ i ] );\n\t\tif ( predicate.call( thisArg, v, i, this ) ) {\n\t\t\tout.push( v );\n\t\t}\n\t}\n\treturn new this.constructor( out );\n});\n\n/**\n* Returns the first element in an array for which a predicate function returns a truthy value.\n*\n* @name find\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {(boolean|void)} array element or undefined\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var v = arr.find( predicate );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'find', function find( predicate, thisArg ) {\n\tvar buf;\n\tvar v;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tv = Boolean( buf[ i ] );\n\t\tif ( predicate.call( thisArg, v, i, this ) ) {\n\t\t\treturn v;\n\t\t}\n\t}\n});\n\n/**\n* Returns the index of the first element in an array for which a predicate function returns a truthy value.\n*\n* @name findIndex\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var v = arr.findIndex( predicate );\n* // returns 0\n*/\nsetReadOnly( BooleanArray.prototype, 'findIndex', function findIndex( predicate, thisArg ) {\n\tvar buf;\n\tvar v;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tv = Boolean( buf[ i ] );\n\t\tif ( predicate.call( thisArg, v, i, this ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLast\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {(boolean|void)} array element or undefined\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var v = arr.findLast( predicate );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'findLast', function findLast( predicate, thisArg ) {\n\tvar buf;\n\tvar v;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = this._length-1; i >= 0; i-- ) {\n\t\tv = Boolean( buf[ i ] );\n\t\tif ( predicate.call( thisArg, v, i, this ) ) {\n\t\t\treturn v;\n\t\t}\n\t}\n});\n\n/**\n* Returns the index of the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLastIndex\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var v = arr.findLastIndex( predicate );\n* // returns 2\n*/\nsetReadOnly( BooleanArray.prototype, 'findLastIndex', function findLastIndex( predicate, thisArg ) {\n\tvar buf;\n\tvar v;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = this._length-1; i >= 0; i-- ) {\n\t\tv = Boolean( buf[ i ] );\n\t\tif ( predicate.call( thisArg, v, i, this ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Invokes a function once for each array element.\n*\n* @name forEach\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - function invocation context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n*\n* @example\n* function log( v, i ) {\n*     console.log( '%s: %s', i, v.toString() );\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* arr.forEach( log );\n*/\nsetReadOnly( BooleanArray.prototype, 'forEach', function forEach( fcn, thisArg ) {\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tfcn.call( thisArg, Boolean( buf[ i ] ), i, this );\n\t}\n});\n\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(boolean|void)} array element\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var v = arr.get( 0 );\n* // returns false\n*\n* arr.set( [ true, false ], 0 );\n*\n* v = arr.get( 0 );\n* // returns true\n*\n* v = arr.get( 100 );\n* // returns undefined\n*/\nsetReadOnly( BooleanArray.prototype, 'get', function get( idx ) {\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx >= this._length ) {\n\t\treturn;\n\t}\n\treturn Boolean( this._buffer[ idx ] );\n});\n\n/**\n* Returns a boolean indicating whether an array includes a provided value.\n*\n* @name includes\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {boolean} searchElement - search element\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a boolean value\n* @throws {TypeError} second argument must be an integer\n* @returns {boolean} boolean indicating whether an array includes a value\n*\n* @example\n* var arr = new BooleanArray( 5 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n* arr.set( true, 3 );\n* arr.set( true, 4 );\n*\n* var bool = arr.includes( true );\n* // returns true\n*\n* bool = arr.includes( false, 2 );\n* // returns false\n*/\nsetReadOnly( BooleanArray.prototype, 'includes', function includes( searchElement, fromIndex ) {\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isBoolean( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a boolean. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfromIndex = 0;\n\t}\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\tif ( searchElement === Boolean( buf[ i ] ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @name indexOf\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {boolean} searchElement - element to find\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a boolean value\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var arr = new BooleanArray( 5 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n* arr.set( true, 3 );\n* arr.set( true, 4 );\n*\n* var idx = arr.indexOf( true );\n* // returns 0\n*\n* idx = arr.indexOf( false, 2 );\n* // returns -1\n*\n* idx = arr.indexOf( false, -3 );\n* // returns -1\n*/\nsetReadOnly( BooleanArray.prototype, 'indexOf', function indexOf( searchElement, fromIndex ) {\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isBoolean( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a boolean. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfromIndex = 0;\n\t}\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\tif ( searchElement === Boolean( buf[ i ] ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns a new string by concatenating all array elements.\n*\n* @name join\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {string} [separator=','] - element separator\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a string\n* @returns {string} string representation\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var str = arr.join();\n* // returns 'true,false,true'\n*\n* str = arr.join( '|' );\n* // returns 'true|false|true'\n*/\nsetReadOnly( BooleanArray.prototype, 'join', function join( separator ) {\n\tvar buf;\n\tvar out;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isString( separator ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', separator ) );\n\t\t}\n\t} else {\n\t\tseparator = ',';\n\t}\n\tbuf = this._buffer;\n\tout = [];\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( buf[i] ) {\n\t\t\tout.push( 'true' );\n\t\t} else {\n\t\t\tout.push( 'false' );\n\t\t}\n\t}\n\treturn out.join( separator );\n});\n\n/**\n* Returns an iterator for iterating over each index key in a typed array.\n*\n* @name keys\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {Iterator} iterator\n*\n* @example\n* var arr = new BooleanArray( 2 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n*\n* var iter = arr.keys();\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'keys', function keys() {\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tself = this;\n\tlen = this._length;\n\n\t// Initialize an iteration index:\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': i,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.keys();\n\t}\n});\n\n/**\n* Returns the last index at which a given element can be found.\n*\n* @name lastIndexOf\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {boolean} searchElement - element to find\n* @param {integer} [fromIndex] - starting index (inclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a boolean value\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var arr = new BooleanArray( 5 );\n*\n* arr.set( true, 0 );\n* arr.set( true, 1 );\n* arr.set( true, 2 );\n* arr.set( false, 3 );\n* arr.set( true, 4 );\n*\n* var idx = arr.lastIndexOf( true );\n* // returns 4\n*\n* idx = arr.lastIndexOf( false, 2 );\n* // returns -1\n*\n* idx = arr.lastIndexOf( false, -3 );\n* // returns -1\n*/\nsetReadOnly( BooleanArray.prototype, 'lastIndexOf', function lastIndexOf( searchElement, fromIndex ) {\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isBoolean( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a boolean. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= this._length ) {\n\t\t\tfromIndex = this._length - 1;\n\t\t} else if ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t}\n\t} else {\n\t\tfromIndex = this._length - 1;\n\t}\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i >= 0; i-- ) {\n\t\tif ( searchElement === Boolean( buf[ i ] ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof BooleanArray.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/\nsetReadOnlyAccessor( BooleanArray.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Returns a new array with each element being the result of a provided callback function.\n*\n* @name map\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} fcn - callback function\n* @param {*} [thisArg] - callback function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {BooleanArray} new boolean array\n*\n* @example\n* function invert( v ) {\n*     return !v;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.map( invert );\n* // returns <BooleanArray>\n*\n* var z = out.get( 0 );\n* // returns false\n*\n* z = out.get( 1 );\n* // returns true\n*\n* z = out.get( 2 );\n* // returns false\n*/\nsetReadOnly( BooleanArray.prototype, 'map', function map( fcn, thisArg ) {\n\tvar outbuf;\n\tvar out;\n\tvar buf;\n\tvar i;\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be a function. Value: `%s`.', fcn );\n\t}\n\tbuf = this._buffer;\n\tout = new this.constructor( this._length );\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\toutbuf[ i ] = Boolean( fcn.call( thisArg, Boolean( buf[ i ] ), i, this ) );\n\t}\n\treturn out;\n});\n\n/**\n* Applies a provided callback function to each element of the array, in order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduce\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a boolean array\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* function reducer( acc, v ) {\n*     if ( v ) {\n*          return acc + 1;\n*     }\n*     return acc;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.reduce( reducer, 0 );\n* // returns 2\n*/\nsetReadOnly( BooleanArray.prototype, 'reduce', function reduce( reducer, initialValue ) {\n\tvar buf;\n\tvar len;\n\tvar acc;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tacc = initialValue;\n\t\ti = 0;\n\t} else {\n\t\tif ( len === 0 ) {\n\t\t\tthrow new Error( 'invalid operation. If not provided an initial value, an array must contain at least one element.' );\n\t\t}\n\t\tacc = Boolean( buf[ 0 ] );\n\t\ti = 1;\n\t}\n\tfor ( ; i < len; i++ ) {\n\t\tacc = reducer( acc, Boolean( buf[ i ] ), i, this );\n\t}\n\treturn acc;\n});\n\n/**\n* Applies a provided callback function to each element of the array, in reverse order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduceRight\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a boolean array\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* function reducer( acc, v ) {\n*     if ( v ) {\n*          return acc + 1;\n*     }\n*     return acc;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.reduceRight( reducer, 0 );\n* // returns 2\n*/\nsetReadOnly( BooleanArray.prototype, 'reduceRight', function reduceRight( reducer, initialValue ) {\n\tvar buf;\n\tvar len;\n\tvar acc;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tacc = initialValue;\n\t\ti = len - 1;\n\t} else {\n\t\tif ( len === 0 ) {\n\t\t\tthrow new Error( 'invalid operation. If not provided an initial value, an array must contain at least one element.' );\n\t\t}\n\t\tacc = Boolean( buf[ len-1 ] );\n\t\ti = len - 2;\n\t}\n\tfor ( ; i >= 0; i-- ) {\n\t\tacc = reducer( acc, Boolean( buf[ i ] ), i, this );\n\t}\n\treturn acc;\n});\n\n/**\n* Reverses an array in-place.\n*\n* @name reverse\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {BooleanArray} reversed array\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( false, 2 );\n*\n* var out = arr.reverse();\n* // returns <BooleanArray>\n*\n* var v = out.get( 0 );\n* // returns false\n*\n* v = out.get( 1 );\n* // returns false\n*\n* v = out.get( 2 );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'reverse', function reverse() {\n\tvar buf;\n\tvar tmp;\n\tvar len;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tN = floor( len / 2 );\n\tfor ( i = 0; i < N; i++ ) {\n\t\tj = len - i - 1;\n\t\ttmp = buf[ i ];\n\t\tbuf[ i ] = buf[ j ];\n\t\tbuf[ j ] = tmp;\n\t}\n\treturn this;\n});\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values, as intended.\n*\n* @name set\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {(Collection|BooleanArray|*)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var v = arr.get( 0 );\n* // returns false\n*\n* arr.set( [ true, false ], 0 );\n*\n* v = arr.get( 0 );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'set', function set( value ) {\n\tvar sbuf;\n\tvar idx;\n\tvar buf;\n\tvar tmp;\n\tvar N;\n\tvar i;\n\tvar j;\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length > 1 ) {\n\t\tidx = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx ) );\n\t\t}\n\t} else {\n\t\tidx = 0;\n\t}\n\tif ( isCollection( value ) ) {\n\t\tN = value.length;\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tif ( isBooleanArray( value ) ) {\n\t\t\tsbuf = value._buffer; // eslint-disable-line no-underscore-dangle\n\t\t} else {\n\t\t\tsbuf = value;\n\t\t}\n\t\t// Check for overlapping memory...\n\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\tif (\n\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t(\n\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t)\n\t\t) {\n\t\t\t// We need to copy source values...\n\t\t\ttmp = new Uint8Array( sbuf.length );\n\t\t\tfor ( i = 0; i < sbuf.length; i++ ) {\n\t\t\t\ttmp[ i ] = sbuf[ i ]; // TODO: handle accessor arrays\n\t\t\t}\n\t\t\tsbuf = tmp;\n\t\t}\n\t\tfor ( i = 0; i < N; idx++, i++ ) {\n\t\t\tbuf[ idx ] = ( sbuf[ i ] ) ? 1 : 0;\n\t\t}\n\t\treturn;\n\t}\n\tif ( idx >= this._length ) {\n\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx ) );\n\t}\n\tbuf[ idx ] = ( value ) ? 1 : 0;\n});\n\n/**\n* Copies a portion of a typed array to a new typed array.\n*\n* @name slice\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {integer} [begin] - start index (inclusive)\n* @param {integer} [end] - end index (exclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be integer\n* @throws {TypeError} second argument must be integer\n* @returns {BooleanArray} boolean array\n*\n* @example\n* var arr = new BooleanArray( 5 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n* arr.set( false, 3 );\n* arr.set( true, 4 );\n*\n* var out = arr.slice();\n* // returns <BooleanArray>\n*\n* var len = out.length;\n* // returns 5\n*\n* var bool = out.get( 0 );\n* // returns true\n*\n* bool = out.get( len-1 );\n* // returns true\n*\n* out = arr.slice( 1, -2 );\n* // returns <BooleanArray>\n*\n* len = out.length;\n* // returns 2\n*\n* bool = out.get( 0 );\n* // returns false\n*\n* bool = out.get( len-1 );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'slice', function slice( begin, end ) {\n\tvar outlen;\n\tvar outbuf;\n\tvar out;\n\tvar buf;\n\tvar len;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length === 0 ) {\n\t\tbegin = 0;\n\t\tend = len;\n\t} else {\n\t\tif ( !isInteger( begin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', begin ) );\n\t\t}\n\t\tif ( begin < 0 ) {\n\t\t\tbegin += len;\n\t\t\tif ( begin < 0 ) {\n\t\t\t\tbegin = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length === 1 ) {\n\t\t\tend = len;\n\t\t} else {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t} else if ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t}\n\t}\n\tif ( begin < end ) {\n\t\toutlen = end - begin;\n\t} else {\n\t\toutlen = 0;\n\t}\n\tout = new this.constructor( outlen );\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < outlen; i++ ) {\n\t\toutbuf[ i ] = buf[ i+begin ];\n\t}\n\treturn out;\n});\n\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function.\n*\n* @name some\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( false, 0 );\n* arr.set( true, 1 );\n* arr.set( false, 2 );\n*\n* var bool = arr.some( predicate );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'some', function some( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( predicate.call( thisArg, Boolean( buf[ i ] ), i, this ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\n/**\n* Sorts an array in-place.\n*\n* @name sort\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} [compareFcn] - comparison function\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {BooleanArray} sorted array\n*\n* @example\n* function compare( a, b ) {\n*    if ( a === false ) {\n*        if ( b === false ) {\n*            return 0;\n*        }\n*        return 1;\n*    }\n*    if ( b === true ) {\n*        return 0;\n*    }\n*    return -1;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* arr.sort( compare );\n*\n* var v = arr.get( 0 );\n* // returns true\n*\n* v = arr.get( 1 );\n* // returns true\n*\n* v = arr.get( 2 );\n* // returns false\n*/\nsetReadOnly( BooleanArray.prototype, 'sort', function sort( compareFcn ) {\n\tvar buf;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length === 0 ) {\n\t\tbuf.sort();\n\t\treturn this;\n\t}\n\tif ( !isFunction( compareFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', compareFcn ) );\n\t}\n\tbuf.sort( compare );\n\treturn this;\n\n\t/**\n\t* Comparison function for sorting.\n\t*\n\t* @private\n\t* @param {boolean} a - first boolean value for comparison\n\t* @param {boolean} b - second boolean value for comparison\n\t* @returns {number} comparison result\n\t*/\n\tfunction compare( a, b ) {\n\t\treturn compareFcn( Boolean( a ), Boolean( b ) );\n\t}\n});\n\n/**\n* Creates a new typed array view over the same underlying `ArrayBuffer` and with the same underlying data type as the host array.\n*\n* @name subarray\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {integer} [begin] - start index (inclusive)\n* @param {integer} [end] - end index (exclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {BooleanArray} subarray\n*\n* @example\n* var arr = new BooleanArray( 5 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n* arr.set( false, 3 );\n* arr.set( true, 4 );\n*\n* var subarr = arr.subarray();\n* // returns <BooleanArray>\n*\n* var len = subarr.length;\n* // returns 5\n*\n* var bool = subarr.get( 0 );\n* // returns true\n*\n* bool = subarr.get( len-1 );\n* // returns true\n*\n* subarr = arr.subarray( 1, -2 );\n* // returns <BooleanArray>\n*\n* len = subarr.length;\n* // returns 2\n*\n* bool = subarr.get( 0 );\n* // returns false\n*\n* bool = subarr.get( len-1 );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'subarray', function subarray( begin, end ) {\n\tvar offset;\n\tvar buf;\n\tvar len;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length === 0 ) {\n\t\tbegin = 0;\n\t\tend = len;\n\t} else {\n\t\tif ( !isInteger( begin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', begin ) );\n\t\t}\n\t\tif ( begin < 0 ) {\n\t\t\tbegin += len;\n\t\t\tif ( begin < 0 ) {\n\t\t\t\tbegin = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length === 1 ) {\n\t\t\tend = len;\n\t\t} else {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t} else if ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t}\n\t}\n\tif ( begin >= len ) {\n\t\tlen = 0;\n\t\toffset = buf.byteLength;\n\t} else if ( begin >= end ) {\n\t\tlen = 0;\n\t\toffset = buf.byteOffset + ( begin*BYTES_PER_ELEMENT );\n\t} else {\n\t\tlen = end - begin;\n\t\toffset = buf.byteOffset + ( begin*BYTES_PER_ELEMENT );\n\t}\n\treturn new this.constructor( buf.buffer, offset, ( len < 0 ) ? 0 : len );\n});\n\n/**\n* Serializes an array as a locale-specific string.\n*\n* @name toLocaleString\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {(string|Array<string>)} [locales] - locale identifier(s)\n* @param {Object} [options] - configuration options\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a string or an array of strings\n* @throws {TypeError} options argument must be an object\n* @returns {string} string representation\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var str = arr.toLocaleString();\n* // returns 'true,false,true'\n*/\nsetReadOnly( BooleanArray.prototype, 'toLocaleString', function toLocaleString( locales, options ) {\n\tvar opts;\n\tvar loc;\n\tvar out;\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( arguments.length === 0 ) {\n\t\tloc = [];\n\t} else if ( isString( locales ) || isStringArray( locales ) ) {\n\t\tloc = locales;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string or an array of strings. Value: `%s`.', locales ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\topts = {};\n\t} else if ( isObject( options ) ) {\n\t\topts = options;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tbuf = this._buffer;\n\tout = [];\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( Boolean( buf[ i ] ).toLocaleString( loc, opts ) );\n\t}\n\treturn out.join( ',' );\n});\n\n/**\n* Returns a new typed array containing the elements in reversed order.\n*\n* @name toReversed\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {BooleanArray} reversed array\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( false, 2 );\n*\n* var out = arr.toReversed();\n* // returns <BooleanArray>\n*\n* var v = out.get( 0 );\n* // returns false\n*\n* v = out.get( 1 );\n* // returns false\n*\n* v = out.get( 2 );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'toReversed', function toReversed() {\n\tvar outbuf;\n\tvar out;\n\tvar len;\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tlen = this._length;\n\tout = new this.constructor( len );\n\tbuf = this._buffer;\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < len; i++ ) {\n\t\toutbuf[ i ] = buf[ len - i - 1 ];\n\t}\n\treturn out;\n});\n\n/**\n* Returns a new typed array containing the elements in sorted order.\n*\n* @name toSorted\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} [compareFcn] - comparison function\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {BooleanArray} sorted array\n*\n* @example\n* function compare( a, b ) {\n*    if ( a === false ) {\n*        if ( b === false ) {\n*            return 0;\n*        }\n*        return 1;\n*    }\n*    if ( b === true ) {\n*        return 0;\n*    }\n*    return -1;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.sort( compare );\n* // returns <BooleanArray>\n*\n* var v = out.get( 0 );\n* // returns true\n*\n* v = out.get( 1 );\n* // returns true\n*\n* v = out.get( 2 );\n* // returns false\n*/\nsetReadOnly( BooleanArray.prototype, 'toSorted', function toSorted( compareFcn ) {\n\tvar outbuf;\n\tvar out;\n\tvar len;\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tlen = this._length;\n\tout = new this.constructor( len );\n\tbuf = this._buffer;\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < len; i++ ) {\n\t\toutbuf[ i ] = buf[ i ];\n\t}\n\tif ( arguments.length === 0 ) {\n\t\toutbuf.sort();\n\t\treturn out;\n\t}\n\tif ( !isFunction( compareFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', compareFcn ) );\n\t}\n\toutbuf.sort( compare );\n\treturn out;\n\n\t/**\n\t* Comparison function for sorting.\n\t*\n\t* @private\n\t* @param {boolean} a - first boolean value for comparison\n\t* @param {boolean} b - second boolean value for comparison\n\t* @returns {number} comparison result\n\t*/\n\tfunction compare( a, b ) {\n\t\treturn compareFcn( Boolean( a ), Boolean( b ) );\n\t}\n});\n\n/**\n* Serializes an array as a string.\n*\n* @name toString\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {string} string representation\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var str = arr.toString();\n* // returns 'true,false,true'\n*/\nsetReadOnly( BooleanArray.prototype, 'toString', function toString() {\n\tvar out;\n\tvar buf;\n\tvar i;\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tout = [];\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( buf[i] ) {\n\t\t\tout.push( 'true' );\n\t\t} else {\n\t\t\tout.push( 'false' );\n\t\t}\n\t}\n\treturn out.join( ',' );\n});\n\n/**\n* Returns an iterator for iterating over each value in a typed array.\n*\n* @name values\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {Iterator} iterator\n*\n* @example\n* var arr = new BooleanArray( 2 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n*\n* var iter = arr.values();\n*\n* var v = iter.next().value;\n* // returns true\n*\n* v = iter.next().value;\n* // returns false\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'values', function values() {\n\tvar iter;\n\tvar self;\n\tvar len;\n\tvar FLG;\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tself = this;\n\tbuf = this._buffer;\n\tlen = this._length;\n\n\t// Initialize an iteration index:\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': Boolean( buf[ i ] ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.values();\n\t}\n});\n\n/**\n* Returns a new typed array with the element at a provided index replaced with a provided value.\n*\n* @name with\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {integer} index - element index\n* @param {boolean} value - new value\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be an integer\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {TypeError} second argument must be a boolean\n* @returns {BooleanArray} new typed array\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.with( 0, false );\n* // returns <BooleanArray>\n*\n* var v = out.get( 0 );\n* // returns false\n*/\nsetReadOnly( BooleanArray.prototype, 'with', function copyWith( index, value ) {\n\tvar buf;\n\tvar out;\n\tvar len;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isInteger( index ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', index ) );\n\t}\n\tlen = this._length;\n\tif ( index < 0 ) {\n\t\tindex += len;\n\t}\n\tif ( index < 0 || index >= len ) {\n\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%s`.', index ) );\n\t}\n\tif ( !isBoolean( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a boolean. Value: `%s`.', value ) );\n\t}\n\tout = new this.constructor( this._buffer );\n\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tif ( value ) {\n\t\tbuf[ index ] = 1;\n\t} else {\n\t\tbuf[ index ] = 0;\n\t}\n\treturn out;\n});\n\n\n// EXPORTS //\n\nmodule.exports = BooleanArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Boolean = require( '@stdlib/boolean/ctor' );\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {Array} output array\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tout.push( Boolean( v.value ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Boolean = require( '@stdlib/boolean/ctor' );\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {Array} output array\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tout.push( Boolean( clbk.call( thisArg, v.value, i ) ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Boolean = require( '@stdlib/boolean/ctor' );\n\n\n// MAIN //\n\n/**\n* Fills an output array with \"boolean\" values.\n*\n* @private\n* @param {Uint8Array} buf - output array\n* @param {Array} arr - input array\n* @returns {Uint8Array} output array\n*/\nfunction fromArray( buf, arr ) {\n\tvar len;\n\tvar i;\n\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tbuf[ i ] = Boolean( arr[ i ] );\n\t}\n\treturn buf;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n// Note: order should match `ctors` order\nvar DTYPES = [\n\t'float64',\n\t'float32',\n\t'int32',\n\t'uint32',\n\t'int16',\n\t'uint16',\n\t'int8',\n\t'uint8',\n\t'uint8c',\n\t'complex64',\n\t'complex128',\n\t'bool'\n];\n\n\n// EXPORTS //\n\nmodule.exports = DTYPES;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Copies values from `x` into `y`.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Object} y - output array object\n* @param {Collection} y.data - output array data\n* @param {Array<Function>} y.accessors - array element accessors\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @returns {Object} output array object\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var Complex64 = require( '@stdlib/complex/float32/ctor' );\n* var reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\n*\n* function setter( data, idx, value ) {\n*     data.set( value, idx );\n* }\n*\n* function getter( data, idx ) {\n*     return data.get( idx );\n* }\n*\n* var x = {\n*     'data': new Complex64Array( [ 1.0, 2.0, 3.0, 4.0 ] ),\n*     'accessors': [ getter, setter ]\n* };\n*\n* var y = {\n*     'data': new Complex64Array( [ 5.0, 6.0, 7.0, 8.0 ] ),\n*     'accessors': [ getter, setter ]\n* };\n*\n* gcopy( x.data.length, x, 1, 0, y, 1, 0 );\n*\n* var view = reinterpret64( y.data, 0 );\n* // view => <Float32Array>[ 1.0, 2.0, 3.0, 4.0 ]\n*/\nfunction gcopy( N, x, strideX, offsetX, y, strideY, offsetY ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar set;\n\tvar get;\n\tvar ix;\n\tvar iy;\n\tvar i;\n\n\t// Cache references to array data:\n\txbuf = x.data;\n\tybuf = y.data;\n\n\t// Cache a reference to the element accessors:\n\tget = x.accessors[ 0 ];\n\tset = y.accessors[ 1 ];\n\n\tix = offsetX;\n\tiy = offsetY;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tset( ybuf, iy, get( xbuf, ix ) );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gcopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arraylike2object = require( '@stdlib/array/base/arraylike2object' );\nvar accessors = require( './accessors.js' );\n\n\n// VARIABLES //\n\nvar M = 8;\n\n\n// MAIN //\n\n/**\n* Copies values from `x` into `y`.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Collection} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Collection} y - output array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @returns {Collection} output array\n*\n* @example\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy( x.length, x, 1, 0, y, 1, 0 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction gcopy( N, x, strideX, offsetX, y, strideY, offsetY ) {\n\tvar ix;\n\tvar iy;\n\tvar ox;\n\tvar oy;\n\tvar m;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tox = arraylike2object( x );\n\toy = arraylike2object( y );\n\tif ( ox.accessorProtocol || oy.accessorProtocol ) {\n\t\taccessors( N, ox, strideX, offsetX, oy, strideY, offsetY );\n\t\treturn oy.data;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\n\t// Use unrolled loops if both strides are equal to `1`...\n\tif ( strideX === 1 && strideY === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\ty[ iy ] = x[ ix ];\n\t\t\t\tix += strideX;\n\t\t\t\tiy += strideY;\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn y;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\ty[ iy ] = x[ ix ];\n\t\t\ty[ iy+1 ] = x[ ix+1 ];\n\t\t\ty[ iy+2 ] = x[ ix+2 ];\n\t\t\ty[ iy+3 ] = x[ ix+3 ];\n\t\t\ty[ iy+4 ] = x[ ix+4 ];\n\t\t\ty[ iy+5 ] = x[ ix+5 ];\n\t\t\ty[ iy+6 ] = x[ ix+6 ];\n\t\t\ty[ iy+7 ] = x[ ix+7 ];\n\t\t\tix += M;\n\t\t\tiy += M;\n\t\t}\n\t\treturn y;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] = x[ ix ];\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gcopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a JSON representation of a typed array.\n*\n* @module @stdlib/array/to-json\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var typedarray2json = require( '@stdlib/array/to-json' );\n*\n* var arr = new Float64Array( [ 5.0, 3.0 ] );\n* var json = typedarray2json( arr );\n* // returns { 'type': 'Float64Array', 'data': [ 5.0, 3.0 ] }\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isTypedArray = require( '@stdlib/assert/is-typed-array' );\nvar isComplexTypedArray = require( '@stdlib/assert/is-complex-typed-array' );\nvar isBooleanArray = require( '@stdlib/assert/is-booleanarray' );\nvar reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\nvar reinterpret128 = require( '@stdlib/strided/base/reinterpret-complex128' );\nvar reinterpretBoolean = require( '@stdlib/strided/base/reinterpret-boolean' );\nvar format = require( '@stdlib/string/format' );\nvar typeName = require( './type.js' );\n\n\n// MAIN //\n\n/**\n* Returns a JSON representation of a typed array.\n*\n* ## Notes\n*\n* -   We build a JSON object representing a typed array similar to how Node.js `Buffer` objects are represented. See [Buffer][1].\n*\n* [1]: https://nodejs.org/api/buffer.html#buffer_buf_tojson\n*\n* @param {TypedArray} arr - typed array to serialize\n* @throws {TypeError} first argument must be a typed array\n* @returns {Object} JSON representation\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( [ 5.0, 3.0 ] );\n* var json = typedarray2json( arr );\n* // returns { 'type': 'Float64Array', 'data': [ 5.0, 3.0 ] }\n*/\nfunction typedarray2json( arr ) {\n\tvar data;\n\tvar out;\n\tvar i;\n\n\tif ( isTypedArray( arr ) ) {\n\t\tdata = arr;\n\t} else if ( isComplexTypedArray( arr ) ) {\n\t\tif ( arr.BYTES_PER_ELEMENT === 8 ) {\n\t\t\tdata = reinterpret64( arr, 0 );\n\t\t} else { // arr.BYTES_PER_ELEMENT === 16\n\t\t\tdata = reinterpret128( arr, 0 );\n\t\t}\n\t} else if ( isBooleanArray( arr ) ) {\n\t\tdata = reinterpretBoolean( arr, 0 );\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a typed array. Value: `%s`.', arr ) );\n\t}\n\tout = {\n\t\t'type': typeName( arr ),\n\t\t'data': []\n\t};\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tout.data.push( data[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = typedarray2json;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a typed array.\n*\n* @module @stdlib/assert/is-typed-array\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n* var isTypedArray = require( '@stdlib/assert/is-typed-array' );\n*\n* var bool = isTypedArray( new Int8Array( 10 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctorName = require( '@stdlib/utils/constructor-name' );\nvar fcnName = require( '@stdlib/utils/function-name' );\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar hasFloat64ArraySupport = require( './../../has-float64array-support' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar CTORS = require( './ctors.js' );\nvar NAMES = require( './names.json' );\n\n\n// VARIABLES //\n\n// Abstract `TypedArray` class:\nvar TypedArray = ( hasFloat64ArraySupport() ) ? getPrototypeOf( Float64Array ) : Dummy; // eslint-disable-line max-len\n\n// Ensure abstract typed array class has expected name:\nTypedArray = ( fcnName( TypedArray ) === 'TypedArray' ) ? TypedArray : Dummy;\n\n\n// FUNCTIONS //\n\n/**\n* Dummy constructor.\n*\n* @private\n*/\nfunction Dummy() {} // eslint-disable-line no-empty-function\n\n\n// MAIN //\n\n/**\n* Tests if a value is a typed array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a typed array\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n*\n* var bool = isTypedArray( new Int8Array( 10 ) );\n* // returns true\n*/\nfunction isTypedArray( value ) {\n\tvar v;\n\tvar i;\n\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for the abstract class...\n\tif ( value instanceof TypedArray ) {\n\t\treturn true;\n\t}\n\t// Check for typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired class...\n\twhile ( value ) {\n\t\tv = ctorName( value );\n\t\tfor ( i = 0; i < NAMES.length; i++ ) {\n\t\t\tif ( NAMES[ i ] === v ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isTypedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the name of a function.\n*\n* @module @stdlib/utils/function-name\n*\n* @example\n* var functionName = require( '@stdlib/utils/function-name' );\n*\n* var v = functionName( String );\n* // returns 'String'\n*\n* v = functionName( function foo(){} );\n* // returns 'foo'\n*\n* v = functionName( function(){} );\n* // returns '' || 'anonymous'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar hasFunctionNameSupport = require( '@stdlib/assert/has-function-name-support' );\nvar format = require( '@stdlib/string/format' );\nvar RE = require( '@stdlib/regexp/function-name' ).REGEXP;\n\n\n// VARIABLES //\n\nvar isFunctionNameSupported = hasFunctionNameSupport();\n\n\n// MAIN //\n\n/**\n* Returns the name of a function.\n*\n* @param {Function} fcn - input function\n* @throws {TypeError} must provide a function\n* @returns {string} function name\n*\n* @example\n* var v = functionName( Math.sqrt );\n* // returns 'sqrt'\n*\n* @example\n* var v = functionName( function foo(){} );\n* // returns 'foo'\n*\n* @example\n* var v = functionName( function(){} );\n* // returns '' || 'anonymous'\n*\n* @example\n* var v = functionName( String );\n* // returns 'String'\n*/\nfunction functionName( fcn ) {\n\t// TODO: add support for generator functions?\n\tif ( isFunction( fcn ) === false ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( isFunctionNameSupported ) {\n\t\treturn fcn.name;\n\t}\n\treturn RE.exec( fcn.toString() )[ 1 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = functionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native function `name` support.\n*\n* @module @stdlib/assert/has-function-name-support\n*\n* @example\n* var hasFunctionNameSupport = require( '@stdlib/assert/has-function-name-support' );\n*\n* var bool = hasFunctionNameSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar foo = require( './foo.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native function `name` support.\n*\n* @returns {boolean} boolean indicating if an environment has function `name` support\n*\n* @example\n* var bool = hasFunctionNameSupport();\n* // returns <boolean>\n*/\nfunction hasFunctionNameSupport() {\n\treturn ( foo.name === 'foo' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasFunctionNameSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Dummy function.\n*\n* @private\n*/\nfunction foo() {\n\t// No-op...\n}\n\n\n// EXPORTS //\n\nmodule.exports = foo;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Int8Array = require( '@stdlib/array/int8' );\nvar Uint8Array = require( '@stdlib/array/uint8' );\nvar Uint8ClampedArray = require( '@stdlib/array/uint8c' );\nvar Int16Array = require( '@stdlib/array/int16' );\nvar Uint16Array = require( '@stdlib/array/uint16' );\nvar Int32Array = require( '@stdlib/array/int32' );\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float32Array = require( '@stdlib/array/float32' );\nvar Float64Array = require( '@stdlib/array/float64' );\n\n\n// MAIN //\n\nvar CTORS = [\n\tFloat64Array,\n\tFloat32Array,\n\tInt32Array,\n\tUint32Array,\n\tInt16Array,\n\tUint16Array,\n\tInt8Array,\n\tUint8Array,\n\tUint8ClampedArray\n];\n\n\n// EXPORTS //\n\nmodule.exports = CTORS;\n","[\n\t\"Int8Array\",\n\t\"Uint8Array\",\n\t\"Uint8ClampedArray\",\n\t\"Int16Array\",\n\t\"Uint16Array\",\n\t\"Int32Array\",\n\t\"Uint32Array\",\n\t\"Float32Array\",\n\t\"Float64Array\"\n]\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a complex typed array.\n*\n* @module @stdlib/assert/is-complex-typed-array\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n* var isComplexTypedArray = require( '@stdlib/assert/is-complex-typed-array' );\n*\n* var bool = isComplexTypedArray( new Complex128Array( 10 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctorName = require( '@stdlib/utils/constructor-name' );\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar CTORS = require( './ctors.js' );\nvar NAMES = require( './names.json' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a complex typed array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var bool = isComplexTypedArray( new Complex128Array( 10 ) );\n* // returns true\n*/\nfunction isComplexTypedArray( value ) {\n\tvar v;\n\tvar i;\n\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for complex typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired class...\n\twhile ( value ) {\n\t\tv = ctorName( value );\n\t\tfor ( i = 0; i < NAMES.length; i++ ) {\n\t\t\tif ( NAMES[ i ] === v ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComplexTypedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex64Array = require( '@stdlib/array/complex64' );\nvar Complex128Array = require( '@stdlib/array/complex128' );\n\n\n// MAIN //\n\nvar CTORS = [\n\tComplex128Array,\n\tComplex64Array\n];\n\n\n// EXPORTS //\n\nmodule.exports = CTORS;\n","[\n\t\"Complex64Array\",\n\t\"Complex128Array\"\n]\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a BooleanArray.\n*\n* @module @stdlib/assert/is-booleanarray\n*\n* @example\n* var BooleanArray = require( '@stdlib/array/bool' );\n* var isBooleanArray = require( '@stdlib/assert/is-booleanarray' );\n*\n* var bool = isBooleanArray( new BooleanArray( 10 ) );\n* // returns true\n*\n* bool = isBooleanArray( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isBooleanArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isBooleanArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar BooleanArray = require( '@stdlib/array/bool' );\nvar constructorName = require( '@stdlib/utils/constructor-name' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Complex64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a BooleanArray\n*\n* @example\n* var BooleanArray = require( '@stdlib/array/bool' );\n*\n* var bool = isBooleanArray( new BooleanArray( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isBooleanArray( [] );\n* // returns false\n*/\nfunction isBooleanArray( value ) {\n\treturn (\n\t\tvalue instanceof BooleanArray ||\n\t\tconstructorName( value ) === 'BooleanArray'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBooleanArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Reinterpret a `BooleanArray` as a `Uint8Array`.\n*\n* @module @stdlib/strided/base/reinterpret-boolean\n*\n* @example\n* var BooleanArray = require( '@stdlib/array/bool' );\n* var reinterpret = require( '@stdlib/strided/base/reinterpret-boolean' );\n*\n* var x = new BooleanArray( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Uint8Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint8Array = require( '@stdlib/array/uint8' );\n\n\n// MAIN //\n\n/**\n* Reinterprets a `BooleanArray` as a `Uint8Array`.\n*\n* @param {BooleanArray} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Uint8Array} `Uint8Array` view\n*\n* @example\n* var BooleanArray = require( '@stdlib/array/bool' );\n*\n* var x = new BooleanArray( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Uint8Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\nfunction reinterpret( x, offset ) {\n\treturn new Uint8Array( x.buffer, x.byteOffset+(x.BYTES_PER_ELEMENT*offset), x.length-offset ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = reinterpret;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar instanceOf = require( '@stdlib/assert/instance-of' );\nvar ctorName = require( '@stdlib/utils/constructor-name' );\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar CTORS = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Returns the typed array type.\n*\n* @private\n* @param {TypedArray} arr - typed array\n* @returns {(string|void)} typed array type\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( 5 );\n* var str = typeName( arr );\n* // returns 'Float64Array'\n*/\nfunction typeName( arr ) {\n\tvar v;\n\tvar i;\n\n\t// Check for typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( instanceOf( arr, CTORS[ i ][ 0 ] ) ) {\n\t\t\treturn CTORS[ i ][ 1 ];\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired native class...\n\twhile ( arr ) {\n\t\tv = ctorName( arr );\n\t\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\t\tif ( v === CTORS[ i ][ 1 ] ) {\n\t\t\t\treturn CTORS[ i ][ 1 ];\n\t\t\t}\n\t\t}\n\t\tarr = getPrototypeOf( arr );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = typeName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a value has in its prototype chain a specified constructor as a prototype property.\n*\n* @module @stdlib/assert/instance-of\n*\n* @example\n* var instanceOf = require( '@stdlib/assert/instance-of' );\n*\n* var bool = instanceOf( [], Array );\n* // returns true\n*\n* bool = instanceOf( {}, Object ); // exception\n* // returns true\n*\n* bool = instanceOf( 'beep', String );\n* // returns false\n*\n* bool = instanceOf( null, Object );\n* // returns false\n*\n* bool = instanceOf( 5, Object );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether a value has in its prototype chain a specified constructor as a prototype property.\n*\n* @param {*} value - value to test\n* @param {Function} constructor - constructor to test against\n* @throws {TypeError} constructor must be callable\n* @returns {boolean} boolean indicating whether a value is an instance of a provided constructor\n*\n* @example\n* var bool = instanceOf( [], Array );\n* // returns true\n*\n* @example\n* var bool = instanceOf( {}, Object ); // exception\n* // returns true\n*\n* @example\n* var bool = instanceOf( 'beep', String );\n* // returns false\n*\n* @example\n* var bool = instanceOf( null, Object );\n* // returns false\n*\n* @example\n* var bool = instanceOf( 5, Object );\n* // returns false\n*/\nfunction instanceOf( value, constructor ) {\n\t// TODO: replace with `isCallable` check\n\tif ( typeof constructor !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be callable. Value: `%s`.', constructor ) );\n\t}\n\treturn ( value instanceof constructor );\n}\n\n\n// EXPORTS //\n\nmodule.exports = instanceOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Int8Array = require( './../../int8' );\nvar Uint8Array = require( './../../uint8' );\nvar Uint8ClampedArray = require( './../../uint8c' );\nvar Int16Array = require( './../../int16' );\nvar Uint16Array = require( './../../uint16' );\nvar Int32Array = require( './../../int32' );\nvar Uint32Array = require( './../../uint32' );\nvar Float32Array = require( './../../float32' );\nvar Float64Array = require( './../../float64' );\nvar Complex64Array = require( './../../complex64' );\nvar Complex128Array = require( './../../complex128' );\nvar BooleanArray = require( './../../bool' );\n\n\n// MAIN //\n\nvar CTORS = [\n\t[ Float64Array, 'Float64Array' ],\n\t[ Float32Array, 'Float32Array' ],\n\t[ Int32Array, 'Int32Array' ],\n\t[ Uint32Array, 'Uint32Array' ],\n\t[ Int16Array, 'Int16Array' ],\n\t[ Uint16Array, 'Uint16Array' ],\n\t[ Int8Array, 'Int8Array' ],\n\t[ Uint8Array, 'Uint8Array' ],\n\t[ Uint8ClampedArray, 'Uint8ClampedArray' ],\n\t[ Complex64Array, 'Complex64Array' ],\n\t[ Complex128Array, 'Complex128Array' ],\n\t[ BooleanArray, 'BooleanArray' ]\n];\n\n\n// EXPORTS //\n\nmodule.exports = CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar UINT32_MAX = require( '@stdlib/constants/uint32/max' );\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// VARIABLES //\n\nvar MAX = UINT32_MAX - 1;\n\n\n// MAIN //\n\n/**\n* Returns a pseudorandom integer on the interval \\\\( [1, 2^{32}-1) \\\\).\n*\n* @private\n* @returns {PositiveInteger} pseudorandom integer\n*\n* @example\n* var v = randuint32();\n* // returns <number>\n*/\nfunction randuint32() {\n\tvar v = floor( 1.0 + (MAX*Math.random()) ); // eslint-disable-line stdlib/no-builtin-math\n\treturn v >>> 0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nmodule.exports = randuint32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar coordsArray = require( './coords_array.js' );\nvar ratioArray = require( './ratio_array.js' );\nvar sampleTail = require( './sample_tail.js' );\n\n\n// VARIABLES //\n\n// Number of blocks:\nvar NUM_BLOCKS = 128;\n\n// Start of right tail (R):\nvar START_RIGHT_TAIL = 3.442619855899;\n\n// `X` holds coordinates, such that each rectangle has same area:\nvar X = coordsArray( NUM_BLOCKS, START_RIGHT_TAIL );\n\n// `R` holds `X[ i+1 ] / X[ i ]`:\nvar R = ratioArray( X );\n\n// 127 => 0x7F => 00000000000000000000000001111111\nvar LAST_7_BITS_MASK = 127|0; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Returns a pseudorandom number generator which implements the improved Ziggurat algorithm for generating normally distributed pseudorandom numbers.\n*\n* @private\n* @param {PRNG} randu - PRNG for generating uniformly distributed numbers\n* @param {PRNG} randi - PRNG for generating uniformly distributed integers\n* @returns {number} pseudorandom number\n*/\nfunction wrap( randu, randi ) {\n\treturn randn;\n\n\t/**\n\t* Generates a normally distributed pseudorandom number.\n\t*\n\t* @private\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var r = randn();\n\t* // returns <number>\n\t*/\n\tfunction randn() {\n\t\tvar f0;\n\t\tvar f1;\n\t\tvar x2;\n\t\tvar x;\n\t\tvar u;\n\t\tvar i;\n\t\tvar j;\n\t\twhile ( true ) {\n\t\t\tu = ( 2.0*randu() ) - 1.0;\n\t\t\ti = randi() & LAST_7_BITS_MASK;\n\n\t\t\t// First try the rectangular boxes...\n\t\t\tif ( abs( u ) < R[ i ] ) {\n\t\t\t\treturn u * X[ i ];\n\t\t\t}\n\t\t\t// If bottom box, sample from the tail...\n\t\t\tif ( i === 0 ) {\n\t\t\t\treturn sampleTail( randu, START_RIGHT_TAIL, u < 0.0 );\n\t\t\t}\n\t\t\t// Is this a sample from the wedges?\n\t\t\tx = u * X[ i ];\n\t\t\tx2 = x * x;\n\t\t\tj = i + 1;\n\t\t\tf0 = exp( -0.5 * ( (X[ i ]*X[ i ]) - x2 ) );\n\t\t\tf1 = exp( -0.5 * ( (X[ j ]*X[ j ]) - x2 ) );\n\t\t\tif ( f1 + (randu()*(f0-f1)) < 1.0 ) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an absolute value of a double-precision floating-point number.\n*\n* @module @stdlib/math/base/special/abs\n*\n* @example\n* var abs = require( '@stdlib/math/base/special/abs' );\n*\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* v = abs( 2.0 );\n* // returns 2.0\n*\n* v = abs( 0.0 );\n* // returns 0.0\n*\n* v = abs( -0.0 );\n* // returns 0.0\n*\n* v = abs( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the absolute value of a double-precision floating-point number `x`.\n*\n* @param {number} x - input value\n* @returns {number} absolute value\n*\n* @example\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* @example\n* var v = abs( 2.0 );\n* // returns 2.0\n*\n* @example\n* var v = abs( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( -0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( NaN );\n* // returns NaN\n*/\nfunction abs( x ) {\n\treturn Math.abs( x ); // eslint-disable-line stdlib/no-builtin-math\n}\n\n\n// EXPORTS //\n\nmodule.exports = abs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural exponential function.\n*\n* @module @stdlib/math/base/special/exp\n*\n* @example\n* var exp = require( '@stdlib/math/base/special/exp' );\n*\n* var v = exp( 4.0 );\n* // returns ~54.5982\n*\n* v = exp( -9.0 );\n* // returns ~1.234e-4\n*\n* v = exp( 0.0 );\n* // returns 1.0\n*\n* v = exp( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyrights, licenses, and long comment were part of the original implementation available as part of [Go]{@link https://github.com/golang/go/blob/cb07765045aed5104a3df31507564ac99e6ddce8/src/math/exp.go}, which in turn was based on an implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_exp.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (c) 2009 The Go Authors. All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without\n* modification, are permitted provided that the following conditions are\n* met:\n*\n*    * Redistributions of source code must retain the above copyright\n* notice, this list of conditions and the following disclaimer.\n*    * Redistributions in binary form must reproduce the above\n* copyright notice, this list of conditions and the following disclaimer\n* in the documentation and/or other materials provided with the\n* distribution.\n*    * Neither the name of Google Inc. nor the names of its\n* contributors may be used to endorse or promote products derived from\n* this software without specific prior written permission.\n*\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n* \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* ```\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar trunc = require( './../../../../base/special/trunc' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar expmulti = require( './expmulti.js' );\n\n\n// VARIABLES //\n\nvar LN2_HI = 6.93147180369123816490e-01;\nvar LN2_LO = 1.90821492927058770002e-10;\nvar LOG2_E = 1.44269504088896338700e+00;\nvar OVERFLOW = 7.09782712893383973096e+02;\nvar UNDERFLOW = -7.45133219101941108420e+02;\nvar NEARZERO = 1.0 / (1 << 28); // 2^-28\nvar NEG_NEARZERO = -NEARZERO;\n\n\n// MAIN //\n\n/**\n* Evaluates the natural exponential function.\n*\n* ## Method\n*\n* 1.  We reduce \\\\( x \\\\) to an \\\\( r \\\\) so that \\\\( |r| \\leq 0.5 \\cdot \\ln(2) \\approx 0.34658 \\\\). Given \\\\( x \\\\), we find an \\\\( r \\\\) and integer \\\\( k \\\\) such that\n*\n*     ```tex\n*     \\begin{align*}\n*     x &= k \\cdot \\ln(2) + r \\\\\n*     |r| &\\leq 0.5 \\cdot \\ln(2)\n*     \\end{align*}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     \\\\( r \\\\) can be represented as \\\\( r = \\mathrm{hi} - \\mathrm{lo} \\\\) for better accuracy.\n*\n*     <!-- </note> -->\n*\n* 2.  We approximate of \\\\( e^{r} \\\\) by a special rational function on the interval \\\\(\\[0,0.34658]\\\\):\n*\n*     ```tex\n*     \\begin{align*}\n*     R\\left(r^2\\right) &= r \\cdot \\frac{ e^{r}+1 }{ e^{r}-1 } \\\\\n*     &= 2 + \\frac{r^2}{6} - \\frac{r^4}{360} + \\ldots\n*     \\end{align*}\n*     ```\n*\n*     We use a special Remes algorithm on \\\\(\\[0,0.34658]\\\\) to generate a polynomial of degree \\\\(5\\\\) to approximate \\\\(R\\\\). The maximum error of this polynomial approximation is bounded by \\\\(2^{-59}\\\\). In other words,\n*\n*     ```tex\n*     R(z) \\sim 2 + P_1 z + P_2 z^2 + P_3 z^3 + P_4 z^4 + P_5 z^5\n*     ```\n*\n*     where \\\\( z = r^2 \\\\) and\n*\n*     ```tex\n*     \\left|  2 + P_1 z + \\ldots + P_5 z^5  - R(z) \\right| \\leq 2^{-59}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     The values of \\\\( P_1 \\\\) to \\\\( P_5 \\\\) are listed in the source code.\n*\n*     <!-- </note> -->\n*\n*     The computation of \\\\( e^{r} \\\\) thus becomes\n*\n*     ```tex\n*     \\begin{align*}\n*     e^{r} &= 1 + \\frac{2r}{R-r} \\\\\n*           &= 1 + r + \\frac{r \\cdot R_1(r)}{2 - R_1(r)}\\ \\text{for better accuracy}\n*     \\end{align*}\n*     ```\n*\n*     where\n*\n*     ```tex\n*     R_1(r) = r - P_1\\ r^2 + P_2\\ r^4 + \\ldots + P_5\\ r^{10}\n*     ```\n*\n* 3.  We scale back to obtain \\\\( e^{x} \\\\). From step 1, we have\n*\n*     ```tex\n*     e^{x} = 2^k e^{r}\n*     ```\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* e^\\infty &= \\infty \\\\\n* e^{-\\infty} &= 0 \\\\\n* e^{\\mathrm{NaN}} &= \\mathrm{NaN} \\\\\n* e^0 &= 1\\ \\mathrm{is\\ exact\\ for\\ finite\\ argument\\ only}\n* \\end{align*}\n* ```\n*\n* ## Notes\n*\n* -   According to an error analysis, the error is always less than \\\\(1\\\\) ulp (unit in the last place).\n*\n* -   For an IEEE double,\n*\n*     -   if \\\\(x > 7.09782712893383973096\\mbox{e+}02\\\\), then \\\\(e^{x}\\\\) overflows\n*     -   if \\\\(x < -7.45133219101941108420\\mbox{e+}02\\\\), then \\\\(e^{x}\\\\) underflows\n*\n* -   The hexadecimal values included in the source code are the intended ones for the used constants. Decimal values may be used, provided that the compiler will convert from decimal to binary accurately enough to produce the intended hexadecimal values.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = exp( 4.0 );\n* // returns ~54.5982\n*\n* @example\n* var v = exp( -9.0 );\n* // returns ~1.234e-4\n*\n* @example\n* var v = exp( 0.0 );\n* // returns 1.0\n*\n* @example\n* var v = exp( NaN );\n* // returns NaN\n*/\nfunction exp( x ) {\n\tvar hi;\n\tvar lo;\n\tvar k;\n\n\tif ( isnan( x ) || x === PINF ) {\n\t\treturn x;\n\t}\n\tif ( x === NINF ) {\n\t\treturn 0.0;\n\t}\n\tif ( x > OVERFLOW ) {\n\t\treturn PINF;\n\t}\n\tif ( x < UNDERFLOW ) {\n\t\treturn 0.0;\n\t}\n\tif (\n\t\tx > NEG_NEARZERO &&\n\t\tx < NEARZERO\n\t) {\n\t\treturn 1.0 + x;\n\t}\n\t// Reduce and compute `r = hi - lo` for extra precision...\n\tif ( x < 0.0 ) {\n\t\tk = trunc( (LOG2_E*x) - 0.5 );\n\t} else {\n\t\tk = trunc( (LOG2_E*x) + 0.5 );\n\t}\n\thi = x - (k*LN2_HI);\n\tlo = k * LN2_LO;\n\n\treturn expmulti( hi, lo, k );\n}\n\n\n// EXPORTS //\n\nmodule.exports = exp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a double-precision floating-point number toward zero.\n*\n* @module @stdlib/math/base/special/trunc\n*\n* @example\n* var trunc = require( '@stdlib/math/base/special/trunc' );\n*\n* var v = trunc( -4.2 );\n* // returns -4.0\n*\n* v = trunc( 9.99999 );\n* // returns 9.0\n*\n* v = trunc( 0.0 );\n* // returns 0.0\n*\n* v = trunc( -0.0 );\n* // returns -0.0\n*\n* v = trunc( NaN );\n* // returns NaN\n*\n* v = trunc( Infinity );\n* // returns Infinity\n*\n* v = trunc( -Infinity );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( './../../../../base/special/floor' );\nvar ceil = require( './../../../../base/special/ceil' );\n\n\n// MAIN //\n\n/**\n* Rounds a double-precision floating-point number toward zero.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = trunc( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = trunc( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = trunc( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = trunc( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = trunc( NaN );\n* // returns NaN\n*\n* @example\n* var v = trunc( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = trunc( -Infinity );\n* // returns -Infinity\n*/\nfunction trunc( x ) {\n\tif ( x < 0.0 ) {\n\t\treturn ceil( x );\n\t}\n\treturn floor( x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = trunc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a double-precision floating-point number toward positive infinity.\n*\n* @module @stdlib/math/base/special/ceil\n*\n* @example\n* var ceil = require( '@stdlib/math/base/special/ceil' );\n*\n* var v = ceil( -4.2 );\n* // returns -4.0\n*\n* v = ceil( 9.99999 );\n* // returns 10.0\n*\n* v = ceil( 0.0 );\n* // returns 0.0\n*\n* v = ceil( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a double-precision floating-point number toward positive infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = ceil( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = ceil( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = ceil( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = ceil( NaN );\n* // returns NaN\n*/\nvar ceil = Math.ceil; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = ceil;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyrights, licenses, and long comment were part of the original implementation available as part of [Go]{@link https://github.com/golang/go/blob/cb07765045aed5104a3df31507564ac99e6ddce8/src/math/exp.go}, which in turn was based on an implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_exp.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (c) 2009 The Go Authors. All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without\n* modification, are permitted provided that the following conditions are\n* met:\n*\n*    * Redistributions of source code must retain the above copyright\n* notice, this list of conditions and the following disclaimer.\n*    * Redistributions in binary form must reproduce the above\n* copyright notice, this list of conditions and the following disclaimer\n* in the documentation and/or other materials provided with the\n* distribution.\n*    * Neither the name of Google Inc. nor the names of its\n* contributors may be used to endorse or promote products derived from\n* this software without specific prior written permission.\n*\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n* \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* ```\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ldexp = require( './../../../../base/special/ldexp' );\nvar polyvalP = require( './polyval_p.js' );\n\n\n// MAIN //\n\n/**\n* Computes \\\\(e^{r} 2^k\\\\) where \\\\(r = \\mathrm{hi} - \\mathrm{lo}\\\\) and \\\\(|r| \\leq \\ln(2)/2\\\\).\n*\n* @private\n* @param {number} hi - upper bound\n* @param {number} lo - lower bound\n* @param {integer} k - power of 2\n* @returns {number} function value\n*/\nfunction expmulti( hi, lo, k ) {\n\tvar r;\n\tvar t;\n\tvar c;\n\tvar y;\n\n\tr = hi - lo;\n\tt = r * r;\n\tc = r - ( t*polyvalP( t ) );\n\ty = 1.0 - ( lo - ( (r*c)/(2.0-c) ) - hi );\n\n\treturn ldexp( y, k );\n}\n\n\n// EXPORTS //\n\nmodule.exports = expmulti;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Multiply a double-precision floating-point number by an integer power of two.\n*\n* @module @stdlib/math/base/special/ldexp\n*\n* @example\n* var ldexp = require( '@stdlib/math/base/special/ldexp' );\n*\n* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8\n* // returns 4.0\n*\n* x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)\n* // returns 1.0\n*\n* x = ldexp( 0.0, 20 );\n* // returns 0.0\n*\n* x = ldexp( -0.0, 39 );\n* // returns -0.0\n*\n* x = ldexp( NaN, -101 );\n* // returns NaN\n*\n* x = ldexp( Infinity, 11 );\n* // returns Infinity\n*\n* x = ldexp( -Infinity, -118 );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// NOTES //\n\n/*\n* => ldexp: load exponent (see [The Open Group]{@link http://pubs.opengroup.org/onlinepubs/9699919799/functions/ldexp.html} and [cppreference]{@link http://en.cppreference.com/w/c/numeric/math/ldexp}).\n*/\n\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar BIAS = require( '@stdlib/constants/float64/exponent-bias' );\nvar MAX_EXPONENT = require( '@stdlib/constants/float64/max-base2-exponent' );\nvar MAX_SUBNORMAL_EXPONENT = require( '@stdlib/constants/float64/max-base2-exponent-subnormal' );\nvar MIN_SUBNORMAL_EXPONENT = require( '@stdlib/constants/float64/min-base2-exponent-subnormal' );\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar isInfinite = require( './../../../../base/assert/is-infinite' );\nvar copysign = require( './../../../../base/special/copysign' );\nvar normalize = require( '@stdlib/number/float64/base/normalize' ).assign;\nvar floatExp = require( '@stdlib/number/float64/base/exponent' );\nvar toWords = require( '@stdlib/number/float64/base/to-words' );\nvar fromWords = require( '@stdlib/number/float64/base/from-words' );\n\n\n// VARIABLES //\n\n// 1/(1<<52) = 1/(2**52) = 1/4503599627370496\nvar TWO52_INV = 2.220446049250313e-16;\n\n// Exponent all 0s: 1 00000000000 11111111111111111111 => 2148532223\nvar CLEAR_EXP_MASK = 0x800fffff>>>0; // asm type annotation\n\n// Normalization workspace:\nvar FRAC = [ 0.0, 0.0 ];\n\n// High/low words workspace:\nvar WORDS = [ 0, 0 ];\n\n\n// MAIN //\n\n/**\n* Multiplies a double-precision floating-point number by an integer power of two.\n*\n* @param {number} frac - fraction\n* @param {integer} exp - exponent\n* @returns {number} double-precision floating-point number\n*\n* @example\n* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8\n* // returns 4.0\n*\n* @example\n* var x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)\n* // returns 1.0\n*\n* @example\n* var x = ldexp( 0.0, 20 );\n* // returns 0.0\n*\n* @example\n* var x = ldexp( -0.0, 39 );\n* // returns -0.0\n*\n* @example\n* var x = ldexp( NaN, -101 );\n* // returns NaN\n*\n* @example\n* var x = ldexp( Infinity, 11 );\n* // returns Infinity\n*\n* @example\n* var x = ldexp( -Infinity, -118 );\n* // returns -Infinity\n*/\nfunction ldexp( frac, exp ) {\n\tvar high;\n\tvar m;\n\tif (\n\t\texp === 0 ||\n\t\tfrac === 0.0 || // handles +-0\n\t\tisnan( frac ) ||\n\t\tisInfinite( frac )\n\t) {\n\t\treturn frac;\n\t}\n\t// Normalize the input fraction:\n\tnormalize( frac, FRAC, 1, 0 );\n\tfrac = FRAC[ 0 ];\n\texp += FRAC[ 1 ];\n\n\t// Extract the exponent from `frac` and add it to `exp`:\n\texp += floatExp( frac );\n\n\t// Check for underflow/overflow...\n\tif ( exp < MIN_SUBNORMAL_EXPONENT ) {\n\t\treturn copysign( 0.0, frac );\n\t}\n\tif ( exp > MAX_EXPONENT ) {\n\t\tif ( frac < 0.0 ) {\n\t\t\treturn NINF;\n\t\t}\n\t\treturn PINF;\n\t}\n\t// Check for a subnormal and scale accordingly to retain precision...\n\tif ( exp <= MAX_SUBNORMAL_EXPONENT ) {\n\t\texp += 52;\n\t\tm = TWO52_INV;\n\t} else {\n\t\tm = 1.0;\n\t}\n\t// Split the fraction into higher and lower order words:\n\ttoWords.assign( frac, WORDS, 1, 0 );\n\thigh = WORDS[ 0 ];\n\n\t// Clear the exponent bits within the higher order word:\n\thigh &= CLEAR_EXP_MASK;\n\n\t// Set the exponent bits to the new exponent:\n\thigh |= ((exp+BIAS) << 20);\n\n\t// Create a new floating-point number:\n\treturn m * fromWords( high, WORDS[ 1 ] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ldexp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The bias of a double-precision floating-point number's exponent.\n*\n* @module @stdlib/constants/float64/exponent-bias\n* @type {integer32}\n*\n* @example\n* var FLOAT64_EXPONENT_BIAS = require( '@stdlib/constants/float64/exponent-bias' );\n* // returns 1023\n*/\n\n\n// MAIN //\n\n/**\n* Bias of a double-precision floating-point number's exponent.\n*\n* ## Notes\n*\n* The bias can be computed via\n*\n* ```tex\n* \\mathrm{bias} = 2^{k-1} - 1\n* ```\n*\n* where \\\\(k\\\\) is the number of bits in the exponent; here, \\\\(k = 11\\\\).\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_EXPONENT_BIAS = 1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_EXPONENT_BIAS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/max-base2-exponent\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MAX_BASE2_EXPONENT = require( '@stdlib/constants/float64/max-base2-exponent' );\n* // returns 1023\n*/\n\n\n// MAIN //\n\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* ```text\n* 11111111110 => 2046 - BIAS = 1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_BASE2_EXPONENT = 1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX_BASE2_EXPONENT;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/max-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = require( '@stdlib/constants/float64/max-base2-exponent-subnormal' );\n* // returns -1023\n*/\n\n\n// MAIN //\n\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* 00000000000 => 0 - BIAS = -1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default -1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = -1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/min-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = require( '@stdlib/constants/float64/min-base2-exponent-subnormal' );\n* // returns -1074\n*/\n\n\n// MAIN //\n\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* -(BIAS+(52-1)) = -(1023+51) = -1074\n* ```\n*\n* where `BIAS = 1023` and `52` is the number of digits in the significand.\n*\n* @constant\n* @type {integer32}\n* @default -1074\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = -1074|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a double-precision floating-point numeric value is infinite.\n*\n* @module @stdlib/math/base/assert/is-infinite\n*\n* @example\n* var isInfinite = require( '@stdlib/math/base/assert/is-infinite' );\n*\n* var bool = isInfinite( Infinity );\n* // returns true\n*\n* bool = isInfinite( -Infinity );\n* // returns true\n*\n* bool = isInfinite( 5.0 );\n* // returns false\n*\n* bool = isInfinite( NaN );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\n\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is infinite.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is infinite\n*\n* @example\n* var bool = isInfinite( Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( -Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isInfinite( NaN );\n* // returns false\n*/\nfunction isInfinite( x ) {\n\treturn (x === PINF || x === NINF);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInfinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a double-precision floating-point number with the magnitude of `x` and the sign of `y`.\n*\n* @module @stdlib/math/base/special/copysign\n*\n* @example\n* var copysign = require( '@stdlib/math/base/special/copysign' );\n*\n* var z = copysign( -3.14, 10.0 );\n* // returns 3.14\n*\n* z = copysign( 3.14, -1.0 );\n* // returns -3.14\n*\n* z = copysign( 1.0, -0.0 );\n* // returns -1.0\n*\n* z = copysign( -3.14, -0.0 );\n* // returns -3.14\n*\n* z = copysign( -0.0, 1.0 );\n* // returns 0.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar SIGN_MASK = require( '@stdlib/constants/float64/high-word-sign-mask' );\nvar ABS_MASK = require( '@stdlib/constants/float64/high-word-abs-mask' );\nvar toWords = require( '@stdlib/number/float64/base/to-words' );\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar fromWords = require( '@stdlib/number/float64/base/from-words' );\n\n\n// VARIABLES //\n\n// High/low words workspace:\nvar WORDS = [ 0, 0 ];\n\n\n// MAIN //\n\n/**\n* Returns a double-precision floating-point number with the magnitude of `x` and the sign of `y`.\n*\n* @param {number} x - number from which to derive a magnitude\n* @param {number} y - number from which to derive a sign\n* @returns {number} a double-precision floating-point number\n*\n* @example\n* var z = copysign( -3.14, 10.0 );\n* // returns 3.14\n*\n* @example\n* var z = copysign( 3.14, -1.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( 1.0, -0.0 );\n* // returns -1.0\n*\n* @example\n* var z = copysign( -3.14, -0.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( -0.0, 1.0 );\n* // returns 0.0\n*/\nfunction copysign( x, y ) {\n\tvar hx;\n\tvar hy;\n\n\t// Split `x` into higher and lower order words:\n\ttoWords.assign( x, WORDS, 1, 0 );\n\thx = WORDS[ 0 ];\n\n\t// Turn off the sign bit of `x`:\n\thx &= ABS_MASK;\n\n\t// Extract the higher order word from `y`:\n\thy = getHighWord( y );\n\n\t// Leave only the sign bit of `y` turned on:\n\thy &= SIGN_MASK;\n\n\t// Copy the sign bit of `y` to `x`:\n\thx |= hy;\n\n\t// Return a new value having the same magnitude as `x`, but with the sign of `y`:\n\treturn fromWords( hx, WORDS[ 1 ] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = copysign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* High word mask for the sign bit of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/high-word-sign-mask\n* @type {uinteger32}\n*\n* @example\n* var FLOAT64_HIGH_WORD_SIGN_MASK = require( '@stdlib/constants/float64/high-word-sign-mask' );\n* // returns 2147483648\n*/\n\n\n// MAIN //\n\n/**\n* High word mask for the sign bit of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for the sign bit of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2147483648 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 1 00000000000 00000000000000000000\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x80000000\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_HIGH_WORD_SIGN_MASK = 0x80000000>>>0; // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_HIGH_WORD_SIGN_MASK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* High word mask for excluding the sign bit of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/high-word-abs-mask\n* @type {uinteger32}\n*\n* @example\n* var FLOAT64_HIGH_WORD_ABS_MASK = require( '@stdlib/constants/float64/high-word-abs-mask' );\n* // returns 2147483647\n*/\n\n\n// MAIN //\n\n/**\n* High word mask for excluding the sign bit of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for excluding the sign bit of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2147483647 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 11111111111 11111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x7fffffff\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_HIGH_WORD_ABS_MASK = 0x7fffffff>>>0; // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_HIGH_WORD_ABS_MASK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Split a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @module @stdlib/number/float64/base/to-words\n*\n* @example\n* var toWords = require( '@stdlib/number/float64/base/to-words' );\n*\n* var w = toWords( 3.14e201 );\n* // returns [ 1774486211, 2479577218 ]\n*\n* @example\n* var Uint32Array = require( '@stdlib/array/uint32' );\n* var toWords = require( '@stdlib/number/float64/base/to-words' );\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords.assign( 3.14e201, out, 1, 0 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar assign = require( './assign.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fcn = require( './assign.js' );\n\n\n// MAIN //\n\n/**\n* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @param {number} x - input value\n* @returns {Array<number>} output array\n*\n* @example\n* var w = toWords( 3.14e201 );\n* // returns [ 1774486211, 2479577218 ]\n*/\nfunction toWords( x ) {\n\treturn fcn( x, [ 0>>>0, 0>>>0 ], 1, 0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar indices = require( './indices.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\nvar HIGH = indices.HIGH;\nvar LOW = indices.LOW;\n\n\n// MAIN //\n\n/**\n* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @private\n* @param {number} x - input value\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* var Uint32Array = require( '@stdlib/array/uint32' );\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords( 3.14e201, out, 1, 0 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\nfunction toWords( x, out, stride, offset ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tout[ offset ] = UINT32_VIEW[ HIGH ];\n\tout[ offset + stride ] = UINT32_VIEW[ LOW ];\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar indices;\nvar HIGH;\nvar LOW;\n\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n\tLOW = 0; // first index\n} else {\n\tHIGH = 0; // first index\n\tLOW = 1; // second index\n}\nindices = {\n\t'HIGH': HIGH,\n\t'LOW': LOW\n};\n\n\n// EXPORTS //\n\nmodule.exports = indices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a boolean indicating if an environment is little endian.\n*\n* @module @stdlib/assert/is-little-endian\n*\n* @example\n* var IS_LITTLE_ENDIAN = require( '@stdlib/assert/is-little-endian' );\n*\n* var bool = IS_LITTLE_ENDIAN;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar IS_LITTLE_ENDIAN = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = IS_LITTLE_ENDIAN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctors = require( './ctors.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an environment is little endian.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment is little endian\n*\n* @example\n* var bool = isLittleEndian();\n* // returns <boolean>\n*/\nfunction isLittleEndian() {\n\tvar uint16view;\n\tvar uint8view;\n\n\tuint16view = new ctors[ 'uint16' ]( 1 );\n\n\t/*\n\t* Set the uint16 view to a value having distinguishable lower and higher order words.\n\t*\n\t* 4660 => 0x1234 => 0x12 0x34 => '00010010 00110100' => (0x12,0x34) == (18,52)\n\t*/\n\tuint16view[ 0 ] = 0x1234;\n\n\t// Create a uint8 view on top of the uint16 buffer:\n\tuint8view = new ctors[ 'uint8' ]( uint16view.buffer );\n\n\t// If little endian, the least significant byte will be first...\n\treturn ( uint8view[ 0 ] === 0x34 );\n}\n\n\n// MAIN //\n\nbool = isLittleEndian();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint8Array = require( '@stdlib/array/uint8' );\nvar Uint16Array = require( '@stdlib/array/uint16' );\n\n\n// MAIN //\n\nvar ctors = {\n\t'uint16': Uint16Array,\n\t'uint8': Uint8Array\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/get-high-word\n*\n* @example\n* var getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\n*\n* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011\n* // returns 1774486211\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar HIGH = require( './high.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Returns an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - input value\n* @returns {uinteger32} higher order word\n*\n* @example\n* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011\n* // returns 1774486211\n*/\nfunction getHighWord( x ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\treturn UINT32_VIEW[ HIGH ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = getHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar HIGH;\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n} else {\n\tHIGH = 0; // first index\n}\n\n\n// EXPORTS //\n\nmodule.exports = HIGH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @module @stdlib/number/float64/base/from-words\n*\n* @example\n* var fromWords = require( '@stdlib/number/float64/base/from-words' );\n*\n* var v = fromWords( 1774486211, 2479577218 );\n* // returns 3.14e201\n*\n* v = fromWords( 3221823995, 1413754136 );\n* // returns -3.141592653589793\n*\n* v = fromWords( 0, 0 );\n* // returns 0.0\n*\n* v = fromWords( 2147483648, 0 );\n* // returns -0.0\n*\n* v = fromWords( 2146959360, 0 );\n* // returns NaN\n*\n* v = fromWords( 2146435072, 0 );\n* // returns Infinity\n*\n* v = fromWords( 4293918720, 0 );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar indices = require( './indices.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\nvar HIGH = indices.HIGH;\nvar LOW = indices.LOW;\n\n\n// MAIN //\n\n/**\n* Creates a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 should we place the higher order bits? If little endian, the second; if big endian, the first.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {uinteger32} high - higher order word (unsigned 32-bit integer)\n* @param {uinteger32} low - lower order word (unsigned 32-bit integer)\n* @returns {number} floating-point number\n*\n* @example\n* var v = fromWords( 1774486211, 2479577218 );\n* // returns 3.14e201\n*\n* @example\n* var v = fromWords( 3221823995, 1413754136 );\n* // returns -3.141592653589793\n*\n* @example\n* var v = fromWords( 0, 0 );\n* // returns 0.0\n*\n* @example\n* var v = fromWords( 2147483648, 0 );\n* // returns -0.0\n*\n* @example\n* var v = fromWords( 2146959360, 0 );\n* // returns NaN\n*\n* @example\n* var v = fromWords( 2146435072, 0 );\n* // returns Infinity\n*\n* @example\n* var v = fromWords( 4293918720, 0 );\n* // returns -Infinity\n*/\nfunction fromWords( high, low ) {\n\tUINT32_VIEW[ HIGH ] = high;\n\tUINT32_VIEW[ LOW ] = low;\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar indices;\nvar HIGH;\nvar LOW;\n\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n\tLOW = 0; // first index\n} else {\n\tHIGH = 0; // first index\n\tLOW = 1; // second index\n}\nindices = {\n\t'HIGH': HIGH,\n\t'LOW': LOW\n};\n\n\n// EXPORTS //\n\nmodule.exports = indices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @module @stdlib/number/float64/base/normalize\n*\n* @example\n* var normalize = require( '@stdlib/number/float64/base/normalize' );\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var out = normalize( 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0, exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var normalize = require( '@stdlib/number/float64/base/normalize' );\n*\n* var out = new Float64Array( 2 );\n*\n* var v = normalize.assign( 3.14e-319, out, 1, 0 );\n* // returns <Float64Array>[ 1.4141234400356668e-303, -52 ]\n*\n* var bool = ( v === out );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar assign = require( './assign.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fcn = require( './assign.js' );\n\n\n// MAIN //\n\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @param {number} x - input value\n* @returns {NumberArray} output array\n*\n* @example\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var out = normalize( 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var out = normalize( 0.0 );\n* // returns [ 0.0, 0 ]\n*\n* @example\n* var PINF = require( '@stdlib/constants/float64/pinf' );\n*\n* var out = normalize( PINF );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* var NINF = require( '@stdlib/constants/float64/ninf' );\n*\n* var out = normalize( NINF );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( NaN );\n* // returns [ NaN, 0 ]\n*/\nfunction normalize( x ) {\n\treturn fcn( x, [ 0.0, 0 ], 1, 0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = normalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar FLOAT64_SMALLEST_NORMAL = require( '@stdlib/constants/float64/smallest-normal' );\nvar isInfinite = require( '@stdlib/math/base/assert/is-infinite' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar abs = require( '@stdlib/math/base/special/abs' );\n\n\n// VARIABLES //\n\n// (1<<52)\nvar SCALAR = 4503599627370496;\n\n\n// MAIN //\n\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\) and assigns results to a provided output array.\n*\n* @param {number} x - input value\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var out = normalize( 3.14e-319, [ 0.0, 0 ], 1, 0 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var out = normalize( 0.0, [ 0.0, 0 ], 1, 0 );\n* // returns [ 0.0, 0 ];\n*\n* @example\n* var PINF = require( '@stdlib/constants/float64/pinf' );\n*\n* var out = normalize( PINF, [ 0.0, 0 ], 1, 0 );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* var NINF = require( '@stdlib/constants/float64/ninf' );\n*\n* var out = normalize( NINF, [ 0.0, 0 ], 1, 0 );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( NaN, [ 0.0, 0 ], 1, 0 );\n* // returns [ NaN, 0 ]\n*/\nfunction normalize( x, out, stride, offset ) {\n\tif ( isnan( x ) || isInfinite( x ) ) {\n\t\tout[ offset ] = x;\n\t\tout[ offset + stride ] = 0;\n\t\treturn out;\n\t}\n\tif ( x !== 0.0 && abs( x ) < FLOAT64_SMALLEST_NORMAL ) {\n\t\tout[ offset ] = x * SCALAR;\n\t\tout[ offset + stride ] = -52;\n\t\treturn out;\n\t}\n\tout[ offset ] = x;\n\tout[ offset + stride ] = 0;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = normalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Smallest positive double-precision floating-point normal number.\n*\n* @module @stdlib/constants/float64/smallest-normal\n* @type {number}\n*\n* @example\n* var FLOAT64_SMALLEST_NORMAL = require( '@stdlib/constants/float64/smallest-normal' );\n* // returns 2.2250738585072014e-308\n*/\n\n\n// MAIN //\n\n/**\n* The smallest positive double-precision floating-point normal number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* \\frac{1}{2^{1023-1}}\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00000000001 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default 2.2250738585072014e-308\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_SMALLEST_NORMAL = 2.2250738585072014e-308;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_SMALLEST_NORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an integer corresponding to the unbiased exponent of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/exponent\n*\n* @example\n* var exponent = require( '@stdlib/number/float64/base/exponent' );\n*\n* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307\n* // returns -1019\n*\n* exp = exponent( -3.14 );\n* // returns 1\n*\n* exp = exponent( 0.0 );\n* // returns -1023\n*\n* exp = exponent( NaN );\n* // returns 1024\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( './../../../../float64/base/get-high-word' );\nvar EXP_MASK = require( '@stdlib/constants/float64/high-word-exponent-mask' );\nvar BIAS = require( '@stdlib/constants/float64/exponent-bias' );\n\n\n// MAIN //\n\n/**\n* Returns an integer corresponding to the unbiased exponent of a double-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {integer32} unbiased exponent\n*\n* @example\n* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307\n* // returns -1019\n*\n* @example\n* var exp = exponent( -3.14 );\n* // returns 1\n*\n* @example\n* var exp = exponent( 0.0 );\n* // returns -1023\n*\n* @example\n* var exp = exponent( NaN );\n* // returns 1024\n*/\nfunction exponent( x ) {\n\t// Extract from the input value a higher order word (unsigned 32-bit integer) which contains the exponent:\n\tvar high = getHighWord( x );\n\n\t// Apply a mask to isolate only the exponent bits and then shift off all bits which are part of the fraction:\n\thigh = ( high & EXP_MASK ) >>> 20;\n\n\t// Remove the bias and return:\n\treturn (high - BIAS)|0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nmodule.exports = exponent;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/high-word-exponent-mask\n* @type {uinteger32}\n*\n* @example\n* var FLOAT64_HIGH_WORD_EXPONENT_MASK = require( '@stdlib/constants/float64/high-word-exponent-mask' );\n* // returns 2146435072\n*/\n\n\n// MAIN //\n\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for the exponent of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2146435072 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x7ff00000\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_HIGH_WORD_EXPONENT_MASK = 0x7ff00000;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_HIGH_WORD_EXPONENT_MASK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.16666666666666602;\n\t}\n\treturn 0.16666666666666602 + (x * (-0.0027777777777015593 + (x * (0.00006613756321437934 + (x * (-0.0000016533902205465252 + (x * 4.1381367970572385e-8))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar ln = require( '@stdlib/math/base/special/ln' );\n\n\n// VARIABLES //\n\n// (R*phi(R) + Pr(X>=R))*sqrt(2\\pi)\nvar V = 9.91256303526217e-3;\n\n\n// MAIN //\n\n/**\n* Returns an array containing coordinates such that each rectangle has the same area.\n*\n* @private\n* @param {PositiveInteger} N - number of rectangles\n* @param {number} rTail - start of right tail\n* @returns {NumberArray} coordinate array\n*\n* @example\n* var X = coordsArray( 128, 3.44 );\n* // returns <Array>\n*/\nfunction coordsArray( N, rTail ) {\n\tvar X;\n\tvar f;\n\tvar i;\n\n\tf = exp( -0.5 * rTail * rTail );\n\n\tX = [];\n\tX.push( V/f ); // bottom block: V / f(R)\n\tX.push( rTail );\n\tfor ( i = 2; i < N; i++ ) {\n\t\tX[ i ] = sqrt( -2.0 * ln( ( V/X[i-1] ) + f ) );\n\t\tf = exp( -0.5 * X[ i ] * X[ i ] );\n\t}\n\tX.push( 0.0 );\n\treturn X;\n}\n\n\n// EXPORTS //\n\nmodule.exports = coordsArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the principal square root of a double-precision floating-point number.\n*\n* @module @stdlib/math/base/special/sqrt\n*\n* @example\n* var sqrt = require( '@stdlib/math/base/special/sqrt' );\n*\n* var v = sqrt( 4.0 );\n* // returns 2.0\n*\n* v = sqrt( 9.0 );\n* // returns 3.0\n*\n* v = sqrt( 0.0 );\n* // returns 0.0\n*\n* v = sqrt( -4.0 );\n* // returns NaN\n*\n* v = sqrt( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Compute the principal square root of a double-precision floating-point number.\n*\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} principal square root\n*\n* @example\n* var v = sqrt( 4.0 );\n* // returns 2.0\n*\n* v = sqrt( 9.0 );\n* // returns 3.0\n*\n* v = sqrt( 0.0 );\n* // returns 0.0\n*\n* v = sqrt( -4.0 );\n* // returns NaN\n*\n* v = sqrt( NaN );\n* // returns NaN\n*/\nvar sqrt = Math.sqrt; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = sqrt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural logarithm of a double-precision floating-point number.\n*\n* @module @stdlib/math/base/special/ln\n*\n* @example\n* var ln = require( '@stdlib/math/base/special/ln' );\n*\n* var v = ln( 4.0 );\n* // returns ~1.386\n*\n* v = ln( 0.0 );\n* // returns -Infinity\n*\n* v = ln( Infinity );\n* // returns Infinity\n*\n* v = ln( NaN );\n* // returns NaN\n*\n* v = ln( -4.0 );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_log.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar BIAS = require( '@stdlib/constants/float64/exponent-bias' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar polyvalP = require( './polyval_p.js' );\nvar polyvalQ = require( './polyval_q.js' );\n\n\n// VARIABLES //\n\nvar LN2_HI = 6.93147180369123816490e-01; // 3FE62E42 FEE00000\nvar LN2_LO = 1.90821492927058770002e-10; // 3DEA39EF 35793C76\nvar TWO54 = 1.80143985094819840000e+16;  // 0x43500000, 0x00000000\nvar ONE_THIRD = 0.33333333333333333;\n\n// 0x000fffff = 1048575 => 0 00000000000 11111111111111111111\nvar HIGH_SIGNIFICAND_MASK = 0x000fffff|0; // asm type annotation\n\n// 0x7ff00000 = 2146435072 => 0 11111111111 00000000000000000000 => biased exponent: 2047 = 1023+1023 => 2^1023\nvar HIGH_MAX_NORMAL_EXP = 0x7ff00000|0; // asm type annotation\n\n// 0x00100000 = 1048576 => 0 00000000001 00000000000000000000 => biased exponent: 1 = -1022+1023 => 2^-1022\nvar HIGH_MIN_NORMAL_EXP = 0x00100000|0; // asm type annotation\n\n// 0x3ff00000 = 1072693248 => 0 01111111111 00000000000000000000 => biased exponent: 1023 = 0+1023 => 2^0 = 1\nvar HIGH_BIASED_EXP_0 = 0x3ff00000|0; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of a double-precision floating-point number.\n*\n* @param {NonNegativeNumber} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = ln( 4.0 );\n* // returns ~1.386\n*\n* @example\n* var v = ln( 0.0 );\n* // returns -Infinity\n*\n* @example\n* var v = ln( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = ln( NaN );\n* // returns NaN\n*\n* @example\n* var v = ln( -4.0 );\n* // returns NaN\n*/\nfunction ln( x ) {\n\tvar hfsq;\n\tvar hx;\n\tvar t2;\n\tvar t1;\n\tvar k;\n\tvar R;\n\tvar f;\n\tvar i;\n\tvar j;\n\tvar s;\n\tvar w;\n\tvar z;\n\n\tif ( x === 0.0 ) {\n\t\treturn NINF;\n\t}\n\tif ( isnan( x ) || x < 0.0 ) {\n\t\treturn NaN;\n\t}\n\thx = getHighWord( x );\n\tk = 0|0; // asm type annotation\n\tif ( hx < HIGH_MIN_NORMAL_EXP ) {\n\t\t// Case: 0 < x < 2**-1022\n\t\tk -= 54|0; // asm type annotation\n\n\t\t// Subnormal number, scale up `x`:\n\t\tx *= TWO54;\n\t\thx = getHighWord( x );\n\t}\n\tif ( hx >= HIGH_MAX_NORMAL_EXP ) {\n\t\treturn x + x;\n\t}\n\tk += ( ( hx>>20 ) - BIAS )|0; // asm type annotation\n\thx &= HIGH_SIGNIFICAND_MASK;\n\ti = ( (hx+0x95f64) & 0x100000 )|0; // asm type annotation\n\n\t// Normalize `x` or `x/2`...\n\tx = setHighWord( x, hx|(i^HIGH_BIASED_EXP_0) );\n\tk += ( i>>20 )|0; // asm type annotation\n\tf = x - 1.0;\n\tif ( (HIGH_SIGNIFICAND_MASK&(2+hx)) < 3 ) {\n\t\t// Case: -2**-20 <= f < 2**-20\n\t\tif ( f === 0.0 ) {\n\t\t\tif ( k === 0 ) {\n\t\t\t\treturn 0.0;\n\t\t\t}\n\t\t\treturn (k * LN2_HI) + (k * LN2_LO);\n\t\t}\n\t\tR = f * f * ( 0.5 - (ONE_THIRD*f) );\n\t\tif ( k === 0 ) {\n\t\t\treturn f - R;\n\t\t}\n\t\treturn (k * LN2_HI) - ( (R-(k*LN2_LO)) - f );\n\t}\n\ts = f / (2.0 + f);\n\tz = s * s;\n\ti = ( hx - 0x6147a )|0; // asm type annotation\n\tw = z * z;\n\tj = ( 0x6b851 - hx )|0; // asm type annotation\n\tt1 = w * polyvalP( w );\n\tt2 = z * polyvalQ( w );\n\ti |= j;\n\tR = t2 + t1;\n\tif ( i > 0 ) {\n\t\thfsq = 0.5 * f * f;\n\t\tif ( k === 0 ) {\n\t\t\treturn f - ( hfsq - (s * (hfsq+R)) );\n\t\t}\n\t\treturn (k * LN2_HI) - ( hfsq - ((s*(hfsq+R))+(k*LN2_LO)) - f );\n\t}\n\tif ( k === 0 ) {\n\t\treturn f - (s*(f-R));\n\t}\n\treturn (k * LN2_HI) - ( ( (s*(f-R)) - (k*LN2_LO) ) - f );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Set the more significant 32 bits of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/set-high-word\n*\n* @example\n* var setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\n*\n* var high = 5 >>> 0; // => 0 00000000000 00000000000000000101\n*\n* var y = setHighWord( 3.14e201, high ); // => 0 00000000000 0000000000000000010110010011110010110101100010000010\n* // returns 1.18350528745e-313\n*\n* @example\n* var PINF = require( '@stdlib/constants/float64/pinf' ); // => 0 11111111111 00000000000000000000 00000000000000000000000000000000\n* var setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\n*\n* var high = 1072693248 >>> 0; // => 0 01111111111 00000000000000000000\n*\n* // Set the higher order bits of `+infinity` to return `1`:\n* var y = setHighWord( PINF, high ); // => 0 01111111111 0000000000000000000000000000000000000000000000000000\n* // returns 1.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar HIGH = require( './high.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Sets the more significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - double\n* @param {uinteger32} high - unsigned 32-bit integer to replace the higher order word of `x`\n* @returns {number} double having the same lower order word as `x`\n*\n* @example\n* var high = 5 >>> 0; // => 0 00000000000 00000000000000000101\n*\n* var y = setHighWord( 3.14e201, high ); // => 0 00000000000 0000000000000000010110010011110010110101100010000010\n* // returns 1.18350528745e-313\n*\n* @example\n* var PINF = require( '@stdlib/constants/float64/pinf' ); // => 0 11111111111 00000000000000000000 00000000000000000000000000000000\n*\n* var high = 1072693248 >>> 0; // => 0 01111111111 00000000000000000000\n*\n* // Set the higher order bits of `+infinity` to return `1`:\n* var y = setHighWord( PINF, high ); // => 0 01111111111 0000000000000000000000000000000000000000000000000000\n* // returns 1.0\n*/\nfunction setHighWord( x, high ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tUINT32_VIEW[ HIGH ] = ( high >>> 0 ); // identity bit shift to ensure integer\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = setHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar HIGH;\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n} else {\n\tHIGH = 0; // first index\n}\n\n\n// EXPORTS //\n\nmodule.exports = HIGH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.3999999999940942;\n\t}\n\treturn 0.3999999999940942 + (x * (0.22222198432149784 + (x * 0.15313837699209373))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.6666666666666735;\n\t}\n\treturn 0.6666666666666735 + (x * (0.2857142874366239 + (x * (0.1818357216161805 + (x * 0.14798198605116586))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array containing the ratio of each pair of consecutive elements in order: `X[ i+1 ] / X[ i ]`.\n*\n* @private\n* @param {NumberArray} X - input array\n* @returns {NumberArray} ratio array\n*\n* @example\n* var R = ratioArray( [ 1.0, 2.0, 5.0 ] );\n* // returns [ 2.0, 2.5 ]\n*/\nfunction ratioArray( X ) {\n\tvar R;\n\tvar i;\n\n\tR = [];\n\tfor ( i = 0; i < X.length-1; i++ ) {\n\t\tR.push( X[ i+1 ] / X[ i ] );\n\t}\n\treturn R;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ratioArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ln = require( '@stdlib/math/base/special/ln' );\n\n\n// MAIN //\n\n/**\n* Transforms the tail of the normal distribution to the unit interval and then uses rejection technique to generate standard normal variable.\n*\n* ## References\n*\n* -   Marsaglia, George. 1964. \"Generating a Variable from the Tail of the Normal Distribution.\" _Technometrics_ 6 (1): 101–2. doi:[10.1080/00401706.1964.10490150](http://dx.doi.org/10.1080/00401706.1964.10490150).\n*\n* @private\n* @param {PRNG} rand - pseudorandom number generator\n* @param {number} rTail - start value of the right tail\n* @param {boolean} isNegative - boolean indicating which side to evaluate\n* @returns {number} standard normal variable\n*/\nfunction sampleTail( rand, rTail, isNegative ) {\n\tvar x;\n\tvar y;\n\tdo {\n\t\tx = ln( rand() ) / rTail;\n\t\ty = ln( rand() );\n\t} while ( -2.0*y < x*x );\n\treturn ( isNegative ) ? x-rTail : rTail-x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sampleTail;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isPositive = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar isnan = require( '@stdlib/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Validates parameters.\n*\n* @private\n* @param {number} mu - location parameter\n* @param {PositiveNumber} sigma - scale parameter\n* @returns {(Error|null)} error or null\n*\n* @example\n* var err = validate( 1.0, 2.0 );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( mu, sigma ) {\n\tif ( !isNumber( mu ) || isnan( mu ) ) {\n\t\treturn new TypeError( format( 'invalid argument. First argument must be a number and not NaN. Value: `%s`.', mu ) );\n\t}\n\tif ( !isPositive( sigma ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Second argument must be a positive number. Value: `%s`.', sigma ) );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive number.\n*\n* @module @stdlib/assert/is-positive-number\n*\n* @example\n* var isPositiveNumber = require( '@stdlib/assert/is-positive-number' );\n*\n* var bool = isPositiveNumber( 5.0 );\n* // returns true\n*\n* bool = isPositiveNumber( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveNumber( 3.14 );\n* // returns true\n*\n* bool = isPositiveNumber( -5.0 );\n* // returns false\n*\n* bool = isPositiveNumber( null );\n* // returns false\n*\n* @example\n* var isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\n*\n* var bool = isPositiveNumber( 3.0 );\n* // returns true\n*\n* bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isObject;\n*\n* var bool = isPositiveNumber( 3.0 );\n* // returns false\n*\n* bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive number\n*\n* @example\n* var bool = isPositiveNumber( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveNumber( null );\n* // returns false\n*/\nfunction isPositiveNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive value\n*\n* @example\n* var bool = isPositiveNumber( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive value\n*\n* @example\n* var bool = isPositiveNumber( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is `NaN`.\n*\n* @module @stdlib/assert/is-nan\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' );\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( null );\n* // returns false\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' ).isPrimitive;\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns false\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' ).isObject;\n*\n* var bool = isnan( NaN );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( null );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar isNan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `NaN` number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `NaN` number primitive\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar isNan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value of `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value of `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar exp = require( '@stdlib/math/base/special/exp' );\n\n\n// MAIN //\n\n/**\n* Returns a log-normally distributed pseudorandom number.\n*\n* @private\n* @param {PRNG} randn - PRNG for standard normally distributed numbers\n* @param {number} mu - location parameter\n* @param {PositiveNumber} sigma - scale parameter\n* @returns {PositiveNumber} pseudorandom number\n*/\nfunction lognormal( randn, mu, sigma ) {\n\treturn exp( mu + (sigma*randn()) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = lognormal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Normally distributed pseudorandom numbers.\n*\n* @module @stdlib/random/base/normal\n*\n* @example\n* var normal = require( '@stdlib/random/base/normal' );\n*\n* var v = normal( 0.0, 1.0 );\n* // returns <number>\n*\n* @example\n* var factory = require( '@stdlib/random/base/normal' ).factory;\n* var normal = factory( 3.0, 2.0, {\n*     'seed': 297\n* });\n*\n* var v = normal();\n* // returns <number>\n*\n* @example\n* var factory = require( '@stdlib/random/base/normal' ).factory;\n* var normal = factory({\n*     'seed': 297\n* });\n*\n* var v = normal( -3.0, 2.0 );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\n/**\n* Returns a normally distributed pseudorandom number with mean `mu` and standard deviation `sigma`.\n*\n* @name normal\n* @type {PRNG}\n* @param {number} mu - mean\n* @param {PositiveNumber} sigma - standard deviation\n* @returns {number} pseudorandom number\n*\n* @example\n* var v = normal( 0.0, 1.0 );\n* // returns <number>\n*\n* @example\n* var v = normal( 0.0, -1.0 );\n* // returns NaN\n*/\nvar normal = factory();\n\n\n// EXPORTS //\n\nmodule.exports = normal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar setReadWriteAccessor = require( '@stdlib/utils/define-nonenumerable-read-write-accessor' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar noop = require( '@stdlib/utils/noop' );\nvar randn = require( './../../../base/improved-ziggurat' ).factory;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar typedarray2json = require( '@stdlib/array/to-json' );\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\nvar normal0 = require( './normal.js' );\n\n\n// MAIN //\n\n/**\n* Returns a pseudorandom number generator for generating normally distributed random numbers.\n*\n* @param {number} [mu] - mean\n* @param {PositiveNumber} [sigma] - standard deviation\n* @param {Options} [options] - function options\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} `mu` must be a number\n* @throws {TypeError} `sigma` must be a positive number\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {PRNG} pseudorandom number generator\n*\n* @example\n* var normal = factory( 0.0, 1.0 );\n* var v = normal();\n* // returns <number>\n*\n* @example\n* var normal = factory( -3.0, 0.5, {\n*     'seed': 297\n* });\n* var v = normal();\n* // returns <number>\n*/\nfunction factory() {\n\tvar sigma;\n\tvar rnorm;\n\tvar opts;\n\tvar rand;\n\tvar prng;\n\tvar err;\n\tvar mu;\n\n\tif ( arguments.length === 0 ) {\n\t\trnorm = randn();\n\t} else if ( arguments.length === 1 ) {\n\t\topts = arguments[ 0 ];\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'prng' ) ) {\n\t\t\tif ( !isFunction( opts.prng ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', opts.prng ) );\n\t\t\t}\n\t\t\trnorm = randn({\n\t\t\t\t'prng': opts.prng\n\t\t\t});\n\t\t} else {\n\t\t\trnorm = randn( opts );\n\t\t}\n\t} else {\n\t\tmu = arguments[ 0 ];\n\t\tsigma = arguments[ 1 ];\n\t\terr = validate( mu, sigma );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( arguments.length > 2 ) {\n\t\t\topts = arguments[ 2 ];\n\t\t\tif ( !isObject( opts ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t\t\t}\n\t\t\tif ( hasOwnProp( opts, 'prng' ) ) {\n\t\t\t\tif ( !isFunction( opts.prng ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', opts.prng ) );\n\t\t\t\t}\n\t\t\t\trnorm = randn({\n\t\t\t\t\t'prng': opts.prng\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\trnorm = randn( opts );\n\t\t\t}\n\t\t} else {\n\t\t\trnorm = randn();\n\t\t}\n\t}\n\tif ( mu === void 0 ) {\n\t\tprng = normal2;\n\t} else {\n\t\tprng = normal1;\n\t}\n\trand = rnorm.PRNG;\n\n\tsetReadOnly( prng, 'NAME', 'normal' );\n\n\t// If we are provided an \"external\" PRNG, we don't support getting or setting PRNG state, as we'd need to check for compatible state value types, etc, entailing considerable complexity.\n\tif ( opts && opts.prng ) {\n\t\tsetReadOnly( prng, 'seed', null );\n\t\tsetReadOnly( prng, 'seedLength', null );\n\t\tsetReadWriteAccessor( prng, 'state', constantFunction( null ), noop );\n\t\tsetReadOnly( prng, 'stateLength', null );\n\t\tsetReadOnly( prng, 'byteLength', null );\n\t\tsetReadOnly( prng, 'toJSON', constantFunction( null ) );\n\t} else {\n\t\tsetReadOnlyAccessor( prng, 'seed', getSeed );\n\t\tsetReadOnlyAccessor( prng, 'seedLength', getSeedLength );\n\t\tsetReadWriteAccessor( prng, 'state', getState, setState );\n\t\tsetReadOnlyAccessor( prng, 'stateLength', getStateLength );\n\t\tsetReadOnlyAccessor( prng, 'byteLength', getStateSize );\n\t\tsetReadOnly( prng, 'toJSON', toJSON );\n\t}\n\tsetReadOnly( prng, 'PRNG', rand );\n\treturn prng;\n\n\t/**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMT19937} seed\n\t*/\n\tfunction getSeed() {\n\t\treturn rand.seed;\n\t}\n\n\t/**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/\n\tfunction getSeedLength() {\n\t\treturn rand.seedLength;\n\t}\n\n\t/**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/\n\tfunction getStateLength() {\n\t\treturn rand.stateLength;\n\t}\n\n\t/**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/\n\tfunction getStateSize() {\n\t\treturn rand.byteLength;\n\t}\n\n\t/**\n\t* Returns the current pseudorandom number generator state.\n\t*\n\t* @private\n\t* @returns {PRNGStateMT19937} current state\n\t*/\n\tfunction getState() {\n\t\treturn rand.state;\n\t}\n\n\t/**\n\t* Sets the pseudorandom number generator state.\n\t*\n\t* @private\n\t* @param {PRNGStateMT19937} s - generator state\n\t* @throws {Error} must provide a valid state\n\t*/\n\tfunction setState( s ) {\n\t\trand.state = s;\n\t}\n\n\t/**\n\t* Serializes the pseudorandom number generator as a JSON object.\n\t*\n\t* ## Notes\n\t*\n\t* -   `JSON.stringify()` implicitly calls this method when stringifying a PRNG.\n\t*\n\t* @private\n\t* @returns {Object} JSON representation\n\t*/\n\tfunction toJSON() {\n\t\tvar out = {};\n\t\tout.type = 'PRNG';\n\t\tout.name = prng.NAME;\n\t\tout.state = typedarray2json( rand.state );\n\t\tif ( mu === void 0 ) {\n\t\t\tout.params = [];\n\t\t} else {\n\t\t\tout.params = [ mu, sigma ];\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t* Returns a pseudorandom number from a normal distribution with bound parameters `mu` and `sigma`.\n\t*\n\t* @private\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var v = normal1();\n\t* // returns <number>\n\t*/\n\tfunction normal1() {\n\t\treturn normal0( rnorm, mu, sigma );\n\t}\n\n\t/**\n\t* Returns a normally distributed pseudorandom number with mean `mu` and standard deviation `sigma`.\n\t*\n\t* @private\n\t* @param {number} mu - mean\n\t* @param {PositiveNumber} sigma - standard deviation\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var v = normal2( 0.0, 1.0 );\n\t* // returns <number>\n\t*\n\t* @example\n\t* var v = normal2( 0.0, -1.0 );\n\t* // returns NaN\n\t*/\n\tfunction normal2( mu, sigma ) {\n\t\tif (\n\t\t\tisnan( mu ) ||\n\t\t\tisnan( sigma ) ||\n\t\t\tsigma <= 0.0\n\t\t) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn normal0( rnorm, mu, sigma );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isPositive = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar isnan = require( '@stdlib/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Validates parameters.\n*\n* @private\n* @param {number} mu - mean\n* @param {PositiveNumber} sigma - standard deviation\n* @returns {(Error|null)} error or null\n*\n* @example\n* var err = validate( 1.0, 2.0 );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( mu, sigma ) {\n\tif ( !isNumber( mu ) || isnan( mu ) ) {\n\t\treturn new TypeError( format( 'invalid argument. First argument must be a number and not NaN. Value: `%s`.', mu ) );\n\t}\n\tif ( !isPositive( sigma ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Second argument must be a positive number. Value: `%s`.', sigma ) );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns a pseudorandom number from a normal distribution with parameters `mu` and `sigma`.\n*\n* @private\n* @param {PRNG} rand - pseudorandom number generator\n* @param {number} mu - mean\n* @param {PositiveNumber} sigma - standard deviation\n* @returns {number} pseudorandom number\n*/\nfunction normal( rand, mu, sigma ) {\n\treturn mu + (sigma*rand());\n}\n\n\n// EXPORTS //\n\nmodule.exports = normal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Uniform distribution pseudorandom numbers.\n*\n* @module @stdlib/random/base/uniform\n*\n* @example\n* var uniform = require( '@stdlib/random/base/uniform' );\n*\n* var v = uniform( 0.0, 1.0 );\n* // returns <number>\n*\n* @example\n* var factory = require( '@stdlib/random/base/uniform' ).factory;\n* var uniform = factory( -5.0, 5.0, {\n*     'seed': 297\n* });\n*\n* var v = uniform();\n* // returns <number>\n*\n* @example\n* var factory = require( '@stdlib/random/base/uniform' ).factory;\n* var uniform = factory({\n*     'seed': 297\n* });\n*\n* var v = uniform( -5.0, 5.0 );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\n/**\n* Returns a uniformly distributed pseudorandom number with minimum support `a` and maximum support `b`.\n*\n* @name uniform\n* @type {PRNG}\n* @param {number} a - minimum support (inclusive)\n* @param {number} b - maximum support (exclusive)\n* @returns {number} pseudorandom number\n*\n* @example\n* var v = uniform( 0.0, 1.0 );\n* // returns <number>\n*/\nvar uniform = factory();\n\n\n// EXPORTS //\n\nmodule.exports = uniform;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar setReadWriteAccessor = require( '@stdlib/utils/define-nonenumerable-read-write-accessor' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar noop = require( '@stdlib/utils/noop' );\nvar randu = require( './../../../base/mt19937' ).factory;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar typedarray2json = require( '@stdlib/array/to-json' );\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\nvar uniform0 = require( './uniform.js' );\n\n\n// MAIN //\n\n/**\n* Returns a pseudorandom number generator for generating uniformly distributed random numbers.\n*\n* @param {number} [a] - minimum support (inclusive)\n* @param {number} [b] - maximum support (exclusive)\n* @param {Options} [options] - function options\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} `a` must be a number\n* @throws {TypeError} `b` must be a number\n* @throws {RangeError} `a` must be less than `b`\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {PRNG} pseudorandom number generator\n*\n* @example\n* var uniform = factory( 0.0, 1.0 );\n*\n* var v = uniform();\n* // returns <number>\n*\n* @example\n* var uniform = factory( -3.0, -1.0, {\n*     'seed': 297\n* });\n* var v = uniform();\n* // returns <number>\n*/\nfunction factory() {\n\tvar opts;\n\tvar rand;\n\tvar prng;\n\tvar err;\n\tvar a;\n\tvar b;\n\n\tif ( arguments.length === 0 ) {\n\t\trand = randu();\n\t} else if ( arguments.length === 1 ) {\n\t\topts = arguments[ 0 ];\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'prng' ) ) {\n\t\t\tif ( !isFunction( opts.prng ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', opts.prng ) );\n\t\t\t}\n\t\t\trand = opts.prng;\n\t\t} else {\n\t\t\trand = randu( opts );\n\t\t}\n\t} else {\n\t\ta = arguments[ 0 ];\n\t\tb = arguments[ 1 ];\n\t\terr = validate( a, b );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( arguments.length > 2 ) {\n\t\t\topts = arguments[ 2 ];\n\t\t\tif ( !isObject( opts ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t\t\t}\n\t\t\tif ( hasOwnProp( opts, 'prng' ) ) {\n\t\t\t\tif ( !isFunction( opts.prng ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', opts.prng ) );\n\t\t\t\t}\n\t\t\t\trand = opts.prng;\n\t\t\t} else {\n\t\t\t\trand = randu( opts );\n\t\t\t}\n\t\t} else {\n\t\t\trand = randu();\n\t\t}\n\t}\n\tif ( a === void 0 ) {\n\t\tprng = uniform2;\n\t} else {\n\t\tprng = uniform1;\n\t}\n\tsetReadOnly( prng, 'NAME', 'uniform' );\n\n\t// If we are provided an \"external\" PRNG, we don't support getting or setting PRNG state, as we'd need to check for compatible state value types, etc, entailing considerable complexity.\n\tif ( opts && opts.prng ) {\n\t\tsetReadOnly( prng, 'seed', null );\n\t\tsetReadOnly( prng, 'seedLength', null );\n\t\tsetReadWriteAccessor( prng, 'state', constantFunction( null ), noop );\n\t\tsetReadOnly( prng, 'stateLength', null );\n\t\tsetReadOnly( prng, 'byteLength', null );\n\t\tsetReadOnly( prng, 'toJSON', constantFunction( null ) );\n\t\tsetReadOnly( prng, 'PRNG', rand );\n\t} else {\n\t\tsetReadOnlyAccessor( prng, 'seed', getSeed );\n\t\tsetReadOnlyAccessor( prng, 'seedLength', getSeedLength );\n\t\tsetReadWriteAccessor( prng, 'state', getState, setState );\n\t\tsetReadOnlyAccessor( prng, 'stateLength', getStateLength );\n\t\tsetReadOnlyAccessor( prng, 'byteLength', getStateSize );\n\t\tsetReadOnly( prng, 'toJSON', toJSON );\n\t\tsetReadOnly( prng, 'PRNG', rand );\n\t\trand = rand.normalized;\n\t}\n\treturn prng;\n\n\t/**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMT19937} seed\n\t*/\n\tfunction getSeed() {\n\t\treturn rand.seed;\n\t}\n\n\t/**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/\n\tfunction getSeedLength() {\n\t\treturn rand.seedLength;\n\t}\n\n\t/**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/\n\tfunction getStateLength() {\n\t\treturn rand.stateLength;\n\t}\n\n\t/**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/\n\tfunction getStateSize() {\n\t\treturn rand.byteLength;\n\t}\n\n\t/**\n\t* Returns the current pseudorandom number generator state.\n\t*\n\t* @private\n\t* @returns {PRNGStateMT19937} current state\n\t*/\n\tfunction getState() {\n\t\treturn rand.state;\n\t}\n\n\t/**\n\t* Sets the pseudorandom number generator state.\n\t*\n\t* @private\n\t* @param {PRNGStateMT19937} s - generator state\n\t* @throws {Error} must provide a valid state\n\t*/\n\tfunction setState( s ) {\n\t\trand.state = s;\n\t}\n\n\t/**\n\t* Serializes the pseudorandom number generator as a JSON object.\n\t*\n\t* ## Notes\n\t*\n\t* -   `JSON.stringify()` implicitly calls this method when stringifying a PRNG.\n\t*\n\t* @private\n\t* @returns {Object} JSON representation\n\t*/\n\tfunction toJSON() {\n\t\tvar out = {};\n\t\tout.type = 'PRNG';\n\t\tout.name = prng.NAME;\n\t\tout.state = typedarray2json( rand.state );\n\t\tif ( a === void 0 ) {\n\t\t\tout.params = [];\n\t\t} else {\n\t\t\tout.params = [ a, b ];\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t* Returns a uniformly distributed pseudorandom number with minimum support `a` and maximum support `b`.\n\t*\n\t* @private\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var v = uniform1();\n\t* // returns <number>\n\t*/\n\tfunction uniform1() {\n\t\treturn uniform0( rand, a, b );\n\t}\n\n\t/**\n\t* Returns a uniformly distributed pseudorandom number with minimum support `a` and maximum support `b`.\n\t*\n\t* @private\n\t* @param {number} a - minimum support (inclusive)\n\t* @param {number} b - maximum support (exclusive)\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var v = uniform2( 0.0, 1.0 );\n\t* // returns <number>\n\t*\n\t* @example\n\t* var v = uniform2( 1.0, 0.0 );\n\t* // returns NaN\n\t*/\n\tfunction uniform2( a, b ) {\n\t\tif (\n\t\t\tisnan( a ) ||\n\t\t\tisnan( b ) ||\n\t\t\ta >= b\n\t\t) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn uniform0( rand, a, b );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar isnan = require( '@stdlib/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Validates values provided for minimum and maximum support.\n*\n* @private\n* @param {number} a - minimum support\n* @param {number} b - maximum support\n* @returns {(Error|null)} error or null\n*\n* @example\n* var err = validate( 1.0, 2.0 );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( a, b ) {\n\tif ( !isNumber( a ) || isnan( a ) ) {\n\t\treturn new TypeError( format( 'invalid argument. First argument must be a number and not NaN. Value: `%s`.', a ) );\n\t}\n\tif ( !isNumber( b ) || isnan( b ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Second argument must be a number and not NaN. Value: `%s`.', b ) );\n\t}\n\tif ( a >= b ) {\n\t\treturn new RangeError( format( 'invalid argument. Minimum support must be less than maximum support. Value: `[%f, %f]`.', a, b ) );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns a uniformly distributed pseudorandom number with minimum support `a` and maximum support `b`.\n*\n* @private\n* @param {PRNG} rand - pseudorandom number generator\n* @param {number} a - minimum support (inclusive)\n* @param {number} b - maximum support (exclusive)\n* @returns {number} pseudorandom number\n*/\nfunction uniform( rand, a, b ) {\n\tvar r = rand();\n\treturn ( b*r ) + ( (1.0-r)*a ); // equivalent to (b-a)*r + a\n}\n\n\n// EXPORTS //\n\nmodule.exports = uniform;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arithmetic mean of a strided array.\n*\n* @module @stdlib/stats/base/mean\n*\n* @example\n* var mean = require( '@stdlib/stats/base/mean' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = mean( N, x, 1 );\n* // returns ~0.3333\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var mean = require( '@stdlib/stats/base/mean' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = mean.ndarray( N, x, 2, 1 );\n* // returns 1.25\n*/\n\n// MODULES //\n\nvar mean = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = mean;\n\n// exports: { \"ndarray\": \"mean.ndarray\" }\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar mean = require( './mean.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( mean, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = mean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar meanpn = require( './../../../base/meanpn' );\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} arithmetic mean\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = mean( N, x, 1 );\n* // returns ~0.3333\n*/\nfunction mean( N, x, stride ) {\n\treturn meanpn( N, x, stride );\n}\n\n\n// EXPORTS //\n\nmodule.exports = mean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arithmetic mean of a strided array using a two-pass error correction algorithm.\n*\n* @module @stdlib/stats/base/meanpn\n*\n* @example\n* var meanpn = require( '@stdlib/stats/base/meanpn' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = meanpn( N, x, 1 );\n* // returns ~0.3333\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var meanpn = require( '@stdlib/stats/base/meanpn' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = meanpn.ndarray( N, x, 2, 1 );\n* // returns 1.25\n*/\n\n// MODULES //\n\nvar meanpn = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = meanpn;\n\n// exports: { \"ndarray\": \"meanpn.ndarray\" }\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar meanpn = require( './meanpn.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( meanpn, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = meanpn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gsumpw = require( '@stdlib/blas/ext/base/gsumpw' );\nvar gapxsumpw = require( '@stdlib/blas/ext/base/gapxsumpw' );\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a strided array using a two-pass error correction algorithm.\n*\n* ## Method\n*\n* -   This implementation uses a two-pass approach, as suggested by Neely (1966).\n*\n* ## References\n*\n* -   Neely, Peter M. 1966. \"Comparison of Several Algorithms for Computation of Means, Standard Deviations and Correlation Coefficients.\" _Communications of the ACM_ 9 (7). Association for Computing Machinery: 496–99. doi:[10.1145/365719.365958](https://doi.org/10.1145/365719.365958).\n* -   Schubert, Erich, and Michael Gertz. 2018. \"Numerically Stable Parallel Computation of (Co-)Variance.\" In _Proceedings of the 30th International Conference on Scientific and Statistical Database Management_. New York, NY, USA: Association for Computing Machinery. doi:[10.1145/3221269.3223036](https://doi.org/10.1145/3221269.3223036).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} arithmetic mean\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = meanpn( N, x, 1 );\n* // returns ~0.3333\n*/\nfunction meanpn( N, x, stride ) {\n\tvar mu;\n\tvar c;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ 0 ];\n\t}\n\t// Compute an estimate for the meanpn:\n\tmu = gsumpw( N, x, stride ) / N;\n\n\t// Compute an error term:\n\tc = gapxsumpw( N, -mu, x, stride ) / N;\n\n\treturn mu + c;\n}\n\n\n// EXPORTS //\n\nmodule.exports = meanpn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the sum of strided array elements using pairwise summation.\n*\n* @module @stdlib/blas/ext/base/gsumpw\n*\n* @example\n* var gsumpw = require( '@stdlib/blas/ext/base/gsumpw' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = gsumpw( N, x, 1 );\n* // returns 1.0\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var gsumpw = require( '@stdlib/blas/ext/base/gsumpw' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = gsumpw.ndarray( N, x, 2, 1 );\n* // returns 5.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar sum = require( './ndarray.js' );\n\n\n// MAIN //\n\n/**\n* Computes the sum of strided array elements using pairwise summation.\n*\n* ## Method\n*\n* -   This implementation uses pairwise summation, which accrues rounding error `O(log2 N)` instead of `O(N)`. The recursion depth is also `O(log2 N)`.\n*\n* ## References\n*\n* -   Higham, Nicholas J. 1993. \"The Accuracy of Floating Point Summation.\" _SIAM Journal on Scientific Computing_ 14 (4): 783–99. doi:[10.1137/0914050](https://doi.org/10.1137/0914050).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} sum\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = gsumpw( N, x, 1 );\n* // returns 1.0\n*/\nfunction gsumpw( N, x, stride ) {\n\tvar ix;\n\tvar s;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ 0 ];\n\t}\n\tif ( stride < 0 ) {\n\t\tix = (1-N) * stride;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( N < 8 ) {\n\t\t// Use simple summation...\n\t\ts = 0.0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\ts += x[ ix ];\n\t\t\tix += stride;\n\t\t}\n\t\treturn s;\n\t}\n\treturn sum( N, x, stride, ix );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gsumpw;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// VARIABLES //\n\n// Blocksize for pairwise summation (NOTE: decreasing the blocksize decreases rounding error as more pairs are summed, but also decreases performance. Because the inner loop is unrolled eight times, the blocksize is effectively `16`.):\nvar BLOCKSIZE = 128;\n\n\n// MAIN //\n\n/**\n* Computes the sum of strided array elements using pairwise summation.\n*\n* ## Method\n*\n* -   This implementation uses pairwise summation, which accrues rounding error `O(log2 N)` instead of `O(N)`. The recursion depth is also `O(log2 N)`.\n*\n* ## References\n*\n* -   Higham, Nicholas J. 1993. \"The Accuracy of Floating Point Summation.\" _SIAM Journal on Scientific Computing_ 14 (4): 783–99. doi:[10.1137/0914050](https://doi.org/10.1137/0914050).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} sum\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = gsumpw( N, x, 2, 1 );\n* // returns 5.0\n*/\nfunction gsumpw( N, x, stride, offset ) {\n\tvar ix;\n\tvar s0;\n\tvar s1;\n\tvar s2;\n\tvar s3;\n\tvar s4;\n\tvar s5;\n\tvar s6;\n\tvar s7;\n\tvar M;\n\tvar s;\n\tvar n;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ offset ];\n\t}\n\tix = offset;\n\tif ( N < 8 ) {\n\t\t// Use simple summation...\n\t\ts = 0.0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\ts += x[ ix ];\n\t\t\tix += stride;\n\t\t}\n\t\treturn s;\n\t}\n\tif ( N <= BLOCKSIZE ) {\n\t\t// Sum a block with 8 accumulators (by loop unrolling, we lower the effective blocksize to 16)...\n\t\ts0 = x[ ix ];\n\t\ts1 = x[ ix+stride ];\n\t\ts2 = x[ ix+(2*stride) ];\n\t\ts3 = x[ ix+(3*stride) ];\n\t\ts4 = x[ ix+(4*stride) ];\n\t\ts5 = x[ ix+(5*stride) ];\n\t\ts6 = x[ ix+(6*stride) ];\n\t\ts7 = x[ ix+(7*stride) ];\n\t\tix += 8 * stride;\n\n\t\tM = N % 8;\n\t\tfor ( i = 8; i < N-M; i += 8 ) {\n\t\t\ts0 += x[ ix ];\n\t\t\ts1 += x[ ix+stride ];\n\t\t\ts2 += x[ ix+(2*stride) ];\n\t\t\ts3 += x[ ix+(3*stride) ];\n\t\t\ts4 += x[ ix+(4*stride) ];\n\t\t\ts5 += x[ ix+(5*stride) ];\n\t\t\ts6 += x[ ix+(6*stride) ];\n\t\t\ts7 += x[ ix+(7*stride) ];\n\t\t\tix += 8 * stride;\n\t\t}\n\t\t// Pairwise sum the accumulators:\n\t\ts = ((s0+s1) + (s2+s3)) + ((s4+s5) + (s6+s7));\n\n\t\t// Clean-up loop...\n\t\tfor ( i; i < N; i++ ) {\n\t\t\ts += x[ ix ];\n\t\t\tix += stride;\n\t\t}\n\t\treturn s;\n\t}\n\t// Recurse by dividing by two, but avoiding non-multiples of unroll factor...\n\tn = floor( N/2 );\n\tn -= n % 8;\n\treturn gsumpw( n, x, stride, ix ) + gsumpw( N-n, x, stride, ix+(n*stride) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gsumpw;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Add a constant to each strided array element and compute the sum using pairwise summation.\n*\n* @module @stdlib/blas/ext/base/gapxsumpw\n*\n* @example\n* var gapxsumpw = require( '@stdlib/blas/ext/base/gapxsumpw' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = gapxsumpw( N, 5.0, x, 1 );\n* // returns 16.0\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var gapxsumpw = require( '@stdlib/blas/ext/base/gapxsumpw' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = gapxsumpw.ndarray( N, 5.0, x, 2, 1 );\n* // returns 25.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar sum = require( './ndarray.js' );\n\n\n// MAIN //\n\n/**\n* Adds a constant to each strided array element and computes the sum using pairwise summation.\n*\n* ## Method\n*\n* -   This implementation uses pairwise summation, which accrues rounding error `O(log2 N)` instead of `O(N)`. The recursion depth is also `O(log2 N)`.\n*\n* ## References\n*\n* -   Higham, Nicholas J. 1993. \"The Accuracy of Floating Point Summation.\" _SIAM Journal on Scientific Computing_ 14 (4): 783–99. doi:[10.1137/0914050](https://doi.org/10.1137/0914050).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} alpha - constant\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} sum\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = gapxsumpw( N, 5.0, x, 1 );\n* // returns 16.0\n*/\nfunction gapxsumpw( N, alpha, x, stride ) {\n\tvar ix;\n\tvar s;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn alpha + x[ 0 ];\n\t}\n\tif ( stride < 0 ) {\n\t\tix = (1-N) * stride;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( N < 8 ) {\n\t\t// Use simple summation...\n\t\ts = 0.0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\ts += alpha + x[ ix ];\n\t\t\tix += stride;\n\t\t}\n\t\treturn s;\n\t}\n\treturn sum( N, alpha, x, stride, ix );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gapxsumpw;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// VARIABLES //\n\n// Blocksize for pairwise summation (NOTE: decreasing the blocksize decreases rounding error as more pairs are summed, but also decreases performance. Because the inner loop is unrolled eight times, the blocksize is effectively `16`.):\nvar BLOCKSIZE = 128;\n\n\n// MAIN //\n\n/**\n* Adds a constant to each strided array element and computes the sum using pairwise summation.\n*\n* ## Method\n*\n* -   This implementation uses pairwise summation, which accrues rounding error `O(log2 N)` instead of `O(N)`. The recursion depth is also `O(log2 N)`.\n*\n* ## References\n*\n* -   Higham, Nicholas J. 1993. \"The Accuracy of Floating Point Summation.\" _SIAM Journal on Scientific Computing_ 14 (4): 783–99. doi:[10.1137/0914050](https://doi.org/10.1137/0914050).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} alpha - constant\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} sum\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = gapxsumpw( N, 5.0, x, 2, 1 );\n* // returns 25.0\n*/\nfunction gapxsumpw( N, alpha, x, stride, offset ) {\n\tvar ix;\n\tvar s0;\n\tvar s1;\n\tvar s2;\n\tvar s3;\n\tvar s4;\n\tvar s5;\n\tvar s6;\n\tvar s7;\n\tvar M;\n\tvar s;\n\tvar n;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn alpha + x[ offset ];\n\t}\n\tix = offset;\n\tif ( N < 8 ) {\n\t\t// Use simple summation...\n\t\ts = 0.0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\ts += alpha + x[ ix ];\n\t\t\tix += stride;\n\t\t}\n\t\treturn s;\n\t}\n\tif ( N <= BLOCKSIZE ) {\n\t\t// Sum a block with 8 accumulators (by loop unrolling, we lower the effective blocksize to 16)...\n\t\ts0 = alpha + x[ ix ];\n\t\ts1 = alpha + x[ ix+stride ];\n\t\ts2 = alpha + x[ ix+(2*stride) ];\n\t\ts3 = alpha + x[ ix+(3*stride) ];\n\t\ts4 = alpha + x[ ix+(4*stride) ];\n\t\ts5 = alpha + x[ ix+(5*stride) ];\n\t\ts6 = alpha + x[ ix+(6*stride) ];\n\t\ts7 = alpha + x[ ix+(7*stride) ];\n\t\tix += 8 * stride;\n\n\t\tM = N % 8;\n\t\tfor ( i = 8; i < N-M; i += 8 ) {\n\t\t\ts0 += alpha + x[ ix ];\n\t\t\ts1 += alpha + x[ ix+stride ];\n\t\t\ts2 += alpha + x[ ix+(2*stride) ];\n\t\t\ts3 += alpha + x[ ix+(3*stride) ];\n\t\t\ts4 += alpha + x[ ix+(4*stride) ];\n\t\t\ts5 += alpha + x[ ix+(5*stride) ];\n\t\t\ts6 += alpha + x[ ix+(6*stride) ];\n\t\t\ts7 += alpha + x[ ix+(7*stride) ];\n\t\t\tix += 8 * stride;\n\t\t}\n\t\t// Pairwise sum the accumulators:\n\t\ts = ((s0+s1) + (s2+s3)) + ((s4+s5) + (s6+s7));\n\n\t\t// Clean-up loop...\n\t\tfor ( i; i < N; i++ ) {\n\t\t\ts += alpha + x[ ix ];\n\t\t\tix += stride;\n\t\t}\n\t\treturn s;\n\t}\n\t// Recurse by dividing by two, but avoiding non-multiples of unroll factor...\n\tn = floor( N/2 );\n\tn -= n % 8;\n\treturn gapxsumpw( n, alpha, x, stride, ix ) + gapxsumpw( N-n, alpha, x, stride, ix+(n*stride) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = gapxsumpw;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gsumpw = require( '@stdlib/blas/ext/base/gsumpw' ).ndarray;\nvar gapxsumpw = require( '@stdlib/blas/ext/base/gapxsumpw' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a strided array using a two-pass error correction algorithm.\n*\n* ## Method\n*\n* -   This implementation uses a two-pass approach, as suggested by Neely (1966).\n*\n* ## References\n*\n* -   Neely, Peter M. 1966. \"Comparison of Several Algorithms for Computation of Means, Standard Deviations and Correlation Coefficients.\" _Communications of the ACM_ 9 (7). Association for Computing Machinery: 496–99. doi:[10.1145/365719.365958](https://doi.org/10.1145/365719.365958).\n* -   Schubert, Erich, and Michael Gertz. 2018. \"Numerically Stable Parallel Computation of (Co-)Variance.\" In _Proceedings of the 30th International Conference on Scientific and Statistical Database Management_. New York, NY, USA: Association for Computing Machinery. doi:[10.1145/3221269.3223036](https://doi.org/10.1145/3221269.3223036).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} arithmetic mean\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = meanpn( N, x, 2, 1 );\n* // returns 1.25\n*/\nfunction meanpn( N, x, stride, offset ) {\n\tvar mu;\n\tvar c;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ offset ];\n\t}\n\t// Compute an estimate for the meanpn:\n\tmu = gsumpw( N, x, stride, offset ) / N;\n\n\t// Compute an error term:\n\tc = gapxsumpw( N, -mu, x, stride, offset ) / N;\n\n\treturn mu + c;\n}\n\n\n// EXPORTS //\n\nmodule.exports = meanpn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar meanpn = require( './../../../base/meanpn' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} arithmetic mean\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = mean( N, x, 2, 1 );\n* // returns 1.25\n*/\nfunction mean( N, x, stride, offset ) {\n\treturn meanpn( N, x, stride, offset );\n}\n\n\n// EXPORTS //\n\nmodule.exports = mean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the standard deviation of a strided array.\n*\n* @module @stdlib/stats/base/stdev\n*\n* @example\n* var stdev = require( '@stdlib/stats/base/stdev' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = stdev( N, 1, x, 1 );\n* // returns ~2.0817\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var stdev = require( '@stdlib/stats/base/stdev' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = stdev.ndarray( N, 1, x, 2, 1 );\n* // returns 2.5\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n\n// exports: { \"ndarray\": \"main.ndarray\" }\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar stdev = require( './stdev.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( stdev, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = stdev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar stdevpn = require( './../../../base/stdevpn' );\n\n\n// MAIN //\n\n/**\n* Computes the standard deviation of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} standard deviation\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = stdev( N, 1, x, 1 );\n* // returns ~2.0817\n*/\nfunction stdev( N, correction, x, stride ) {\n\treturn stdevpn( N, correction, x, stride );\n}\n\n\n// EXPORTS //\n\nmodule.exports = stdev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the standard deviation of a strided array using a two-pass algorithm.\n*\n* @module @stdlib/stats/base/stdevpn\n*\n* @example\n* var stdevpn = require( '@stdlib/stats/base/stdevpn' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n*\n* var v = stdevpn( x.length, 1, x, 1 );\n* // returns ~2.0817\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var stdevpn = require( '@stdlib/stats/base/stdevpn' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = stdevpn.ndarray( N, 1, x, 2, 1 );\n* // returns 2.5\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n\n// exports: { \"ndarray\": \"main.ndarray\" }\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar stdevpn = require( './stdevpn.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( stdevpn, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = stdevpn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar variancepn = require( './../../../base/variancepn' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\n\n\n// MAIN //\n\n/**\n* Computes the standard deviation of a strided array using a two-pass algorithm.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} standard deviation\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n*\n* var v = stdevpn( x.length, 1, x, 1 );\n* // returns ~2.0817\n*/\nfunction stdevpn( N, correction, x, stride ) {\n\treturn sqrt( variancepn( N, correction, x, stride ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = stdevpn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the variance of a strided array using a two-pass algorithm.\n*\n* @module @stdlib/stats/base/variancepn\n*\n* @example\n* var variancepn = require( '@stdlib/stats/base/variancepn' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = variancepn( N, 1, x, 1 );\n* // returns ~4.3333\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var variancepn = require( '@stdlib/stats/base/variancepn' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = variancepn.ndarray( N, 1, x, 2, 1 );\n* // returns 6.25\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n\n// exports: { \"ndarray\": \"main.ndarray\" }\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar variancepn = require( './variancepn.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( variancepn, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = variancepn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gsumpw = require( '@stdlib/blas/ext/base/gsumpw' );\n\n\n// MAIN //\n\n/**\n* Computes the variance of a strided array using a two-pass algorithm.\n*\n* ## Method\n*\n* -   This implementation uses a two-pass approach, as suggested by Neely (1966).\n*\n* ## References\n*\n* -   Neely, Peter M. 1966. \"Comparison of Several Algorithms for Computation of Means, Standard Deviations and Correlation Coefficients.\" _Communications of the ACM_ 9 (7). Association for Computing Machinery: 496–99. doi:[10.1145/365719.365958](https://doi.org/10.1145/365719.365958).\n* -   Schubert, Erich, and Michael Gertz. 2018. \"Numerically Stable Parallel Computation of (Co-)Variance.\" In _Proceedings of the 30th International Conference on Scientific and Statistical Database Management_. New York, NY, USA: Association for Computing Machinery. doi:[10.1145/3221269.3223036](https://doi.org/10.1145/3221269.3223036).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} variance\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = variancepn( N, 1, x, 1 );\n* // returns ~4.3333\n*/\nfunction variancepn( N, correction, x, stride ) {\n\tvar mu;\n\tvar ix;\n\tvar M2;\n\tvar M;\n\tvar d;\n\tvar n;\n\tvar i;\n\n\tn = N - correction;\n\tif ( N <= 0 || n <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn 0.0;\n\t}\n\t// Compute an estimate for the mean:\n\tmu = gsumpw( N, x, stride ) / N;\n\n\tif ( stride < 0 ) {\n\t\tix = (1-N) * stride;\n\t} else {\n\t\tix = 0;\n\t}\n\t// Compute the variance...\n\tM2 = 0.0;\n\tM = 0.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\td = x[ ix ] - mu;\n\t\tM2 += d * d;\n\t\tM += d;\n\t\tix += stride;\n\t}\n\treturn (M2/n) - ((M/N)*(M/n));\n}\n\n\n// EXPORTS //\n\nmodule.exports = variancepn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gsumpw = require( '@stdlib/blas/ext/base/gsumpw' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Computes the variance of a strided array using a two-pass algorithm.\n*\n* ## Method\n*\n* -   This implementation uses a two-pass approach, as suggested by Neely (1966).\n*\n* ## References\n*\n* -   Neely, Peter M. 1966. \"Comparison of Several Algorithms for Computation of Means, Standard Deviations and Correlation Coefficients.\" _Communications of the ACM_ 9 (7). Association for Computing Machinery: 496–99. doi:[10.1145/365719.365958](https://doi.org/10.1145/365719.365958).\n* -   Schubert, Erich, and Michael Gertz. 2018. \"Numerically Stable Parallel Computation of (Co-)Variance.\" In _Proceedings of the 30th International Conference on Scientific and Statistical Database Management_. New York, NY, USA: Association for Computing Machinery. doi:[10.1145/3221269.3223036](https://doi.org/10.1145/3221269.3223036).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} variance\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = variancepn( N, 1, x, 2, 1 );\n* // returns 6.25\n*/\nfunction variancepn( N, correction, x, stride, offset ) {\n\tvar mu;\n\tvar ix;\n\tvar M2;\n\tvar M;\n\tvar d;\n\tvar n;\n\tvar i;\n\n\tn = N - correction;\n\tif ( N <= 0 || n <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn 0.0;\n\t}\n\t// Compute an estimate for the mean:\n\tmu = gsumpw( N, x, stride, offset ) / N;\n\n\t// Compute the variance...\n\tix = offset;\n\tM2 = 0.0;\n\tM = 0.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\td = x[ ix ] - mu;\n\t\tM2 += d * d;\n\t\tM += d;\n\t\tix += stride;\n\t}\n\treturn (M2/n) - ((M/N)*(M/n));\n}\n\n\n// EXPORTS //\n\nmodule.exports = variancepn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar variancepn = require( './../../../base/variancepn' ).ndarray;\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\n\n\n// MAIN //\n\n/**\n* Computes the standard deviation of a strided array using a two-pass algorithm.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} standard deviation\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = stdevpn( N, 1, x, 2, 1 );\n* // returns 2.5\n*/\nfunction stdevpn( N, correction, x, stride, offset ) {\n\treturn sqrt( variancepn( N, correction, x, stride, offset ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = stdevpn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar stdevpn = require( './../../../base/stdevpn' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Computes the standard deviation of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} standard deviation\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = stdev( N, 1, x, 2, 1 );\n* // returns 2.5\n*/\nfunction stdev( N, correction, x, stride, offset ) {\n\treturn stdevpn( N, correction, x, stride, offset );\n}\n\n\n// EXPORTS //\n\nmodule.exports = stdev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Parse a string as JSON.\n*\n* @module @stdlib/utils/parse-json\n*\n* @example\n* var parseJSON = require( '@stdlib/utils/parse-json' );\n*\n* var obj = parseJSON( '{\"beep\":\"boop\"}' );\n* // returns {'beep':'boop'}\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Attempts to parse a string as JSON.\n*\n* @param {string} str - string to parse\n* @param {Function} [reviver] - transformation function\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} reviver must be a function\n* @returns {(*|Error)} parsed value or parse error\n*\n* @example\n* var obj = parseJSON( '{\"beep\":\"boop\"}' );\n* // returns {'beep':'boop'}\n*/\nfunction parseJSON( str, reviver ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isFunction( reviver ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Reviver argument must be a function. Value: `%s`.', reviver ) );\n\t\t}\n\t}\n\ttry {\n\t\treturn JSON.parse( str, reviver );\n\t} catch ( error ) {\n\t\treturn error;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = parseJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Read the entire contents of a file.\n*\n* @module @stdlib/fs/read-file\n*\n* @example\n* var readFile = require( '@stdlib/fs/read-file' );\n*\n* function onFile( error, data ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( data );\n* }\n* readFile( __filename, onFile );\n*\n* @example\n* var readFileSync = require( '@stdlib/fs/read-file' ).sync;\n*\n* var out = readFileSync( __filename );\n* if ( out instanceof Error ) {\n*     throw out;\n* }\n* console.log( out );\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar sync = require( './sync.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'sync', sync );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar readfile = require( 'fs' ).readFile;\n\n\n// MAIN //\n\n/**\n* Asynchronously reads the entire contents of a file.\n*\n* @param {(string|Buffer|integer)} file - file path or file descriptor\n* @param {(Object|string)} [options] - options\n* @param {(string|null)} [options.encoding] - file encoding\n* @param {string} [options.flag] - file status flag\n* @param {Function} clbk - callback to invoke after reading file contents\n*\n* @example\n* function onFile( error, data ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( data );\n* }\n* readFile( __filename, onFile );\n*/\nfunction readFile() {\n\tvar args;\n\tvar i;\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treadfile.apply( null, args );\n}\n\n\n// EXPORTS //\n\nmodule.exports = readFile;\n","\"use strict\";","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar readfileSync = require( 'fs' ).readFileSync; // eslint-disable-line node/no-sync\n\n\n// MAIN //\n\n/**\n* Synchronously reads the entire contents of a file.\n*\n* @param {(string|Buffer|integer)} file - file path or file descriptor\n* @param {(Object|string)} [options] - options\n* @param {(string|null)} [options.encoding] - file encoding\n* @param {string} [options.flag] - file status flag\n* @returns {(Buffer|string|Error)} file contents or an error\n*\n* @example\n* var out = readFileSync( __filename );\n* if ( out instanceof Error ) {\n*     throw out;\n* }\n* console.log( out );\n*/\nfunction readFileSync( file, options ) {\n\tvar f;\n\ttry {\n\t\tif ( arguments.length > 1 ) {\n\t\t\tf = readfileSync( file, options );\n\t\t} else {\n\t\t\tf = readfileSync( file );\n\t\t}\n\t} catch ( err ) {\n\t\treturn err;\n\t}\n\treturn f;\n}\n\n\n// EXPORTS //\n\nmodule.exports = readFileSync;\n"],"names":["$parcel$interopDefault","a","__esModule","default","$871d6b2b8d225f7e$var$defineProperty","$c1bcb1474c583c23$var$main","$0ae4ca15aedf4f34$var$f","$953bdf9b1275f1e2$var$getProto","$2ffeb30574781963$var$ctor","$688bf0eeb5997346$var$ctor","$26891ca0f6b1a852$var$ctor","$25d2454a59275c01$var$ctor","$d41d9d0c25adca97$var$ctor","$8e8697281bde0b47$var$ctor","$b1ee90e09bc85e12$var$ctor","$6a9e0856aadec59b$var$ctor","$08d0b88cbc0edb01$var$ctor","$4d0919e4af4fd38a$var$float64ToFloat32","$7bbb979cc546c5ad$var$HIGH","$7bbb979cc546c5ad$var$LOW","$487d580d2069144a$var$HIGH","$8c8ca92d33842b22$var$HIGH","$8c8ca92d33842b22$var$LOW","$96aa1cafbecb2ebd$var$HIGH","$6f0ad54a2a2a621f$exports","JSON","parse","$5781d91b55e476c0$exports","$2046038b2cff296f$exports","$8e1b699ad97a9f1e$exports","$735bc78b1ba08f31$exports","$dfd4cfb9f136c5d5$exports","$367a9fa440f39890$exports","$871d6b2b8d225f7e$exports","$5f1f3a9c556aa86c$exports","$34265eeb9b67274c$exports","Object","defineProperty","err","$3a4d9697938188fb$exports","$f427547c116eb305$exports","$5a5504e40381a222$exports","$28293cfd4981871f$exports","$3d9a9645ba0fdb10$exports","$05d86a4cde6adc6e$exports","$689fa02b419ce23e$exports","$b3c7ff053c5e7eea$exports","value","$f4470c11f3d71260$exports","$f4470c11f3d71260$var$zeros","n","i","out","str","width","right","negative","pad","length","substr","$689fa02b419ce23e$var$lowercase","String","prototype","toLowerCase","$689fa02b419ce23e$var$uppercase","toUpperCase","token","base","specifier","isFinite","parseInt","arg","Error","toString","precision","padRight","sign","alternate","call","charAt","$45e4fcd22e06377c$exports","$c98673acb52107cb$exports","$c98673acb52107cb$var$abs","Math","abs","$c98673acb52107cb$var$lowercase","$c98673acb52107cb$var$uppercase","$c98673acb52107cb$var$replace","replace","$c98673acb52107cb$var$RE_EXP_POS_DIGITS","$c98673acb52107cb$var$RE_EXP_NEG_DIGITS","$c98673acb52107cb$var$RE_ONLY_DIGITS","$c98673acb52107cb$var$RE_DIGITS_BEFORE_EXP","$c98673acb52107cb$var$RE_TRAILING_PERIOD_ZERO","$c98673acb52107cb$var$RE_PERIOD_ZERO_EXP","$c98673acb52107cb$var$RE_ZERO_BEFORE_EXP","digits","f","parseFloat","toExponential","toFixed","toPrecision","$38a0c40dd8438ef4$exports","$38a0c40dd8438ef4$var$spaces","$05d86a4cde6adc6e$var$fromCharCode","fromCharCode","$05d86a4cde6adc6e$var$isArray","Array","isArray","tokens","hasPeriod","flags","flag","num","pos","j","TypeError","$05d86a4cde6adc6e$var$initialize","mapping","padZeros","indexOf","arguments","maxWidth","$05d86a4cde6adc6e$var$isnan","substring","$9bb73ed29242928e$exports","$ef875852df60c9a8$exports","$ef875852df60c9a8$var$RE","content","match","prev","exec","slice","lastIndex","push","$ef875852df60c9a8$var$parse","$30e31cf71a00c461$exports","$28293cfd4981871f$var$format","args","apply","$f427547c116eb305$var$objectProtoype","$f427547c116eb305$var$toStr","$f427547c116eb305$var$defineGetter","__defineGetter__","$f427547c116eb305$var$defineSetter","__defineSetter__","$f427547c116eb305$var$lookupGetter","__lookupGetter__","$f427547c116eb305$var$lookupSetter","__lookupSetter__","obj","prop","descriptor","hasValue","hasGet","hasSet","__proto__","get","set","$ff49fffc1b65c6db$exports","$a971c8057dda0ad4$exports","$a4444f7456e1c73a$exports","$356661c5ff0b22b5$exports","getter","$c1b2e538264ff4b7$exports","$560b11f3efa37bfa$exports","setter","$c8f9ba5bc2a81d34$exports","$950a7c8c5f57ecc9$exports","$01b2bacec2990d67$exports","$c3bcb4f12f2774cd$exports","$5ebc6df234db68eb$exports","$0ae4ca15aedf4f34$exports","$c1bcb1474c583c23$exports","$ad8748866c202ed6$exports","$7df1b287ab18f0d2$exports","$08ec1251ae26e6d3$exports","$f2eeec8d342f58b8$exports","$7df1b287ab18f0d2$var$FLG","Symbol","toStringTag","$dc4809be987a55e0$exports","$fd1000537da8a65f$exports","v","$92cccdbac4d45668$exports","$5a7912bad9882251$exports","$4c076cdf0a0e33ea$exports","$4c076cdf0a0e33ea$var$has","hasOwnProperty","property","$16a2c08be5ca434f$exports","$3d8926390533d7c3$exports","$d2db8d7cf419b4e4$exports","isOwn","tag","$39cac8b951c1ded2$exports","$a5a4352d57441052$exports","$11635579c618f7ef$exports","$ebe10159ccc0b72f$exports","$17eeb353939b4c1a$exports","$033a4865697952e4$exports","$09f4eb6cac48617c$exports","$195eb9bd8e34a246$exports","$8dc2db74c26e7332$exports","$d94b237ec9b79e34$exports","$fe892bf154c0b855$exports","$7ddb66cb80aa5581$exports","$2015413f2ffb2cf4$exports","Boolean","$f616776244fc2bfb$exports","$8a0899da35fd4d07$exports","$fe892bf154c0b855$var$FLG","$09f4eb6cac48617c$require$isBoolean","isPrimitive","$f6e0ff9dbf4fa51f$exports","Function","$ea44ca70bbcaacc7$exports","self","$3c0f6f0b3fed2d4c$exports","window","$ef185afabe14564c$exports","globalThis","$033a4865697952e4$var$root","codegen","document","childNodes","$0cdd6c3124ce7e79$exports","Int8Array","$57f3ee8f60e14393$exports","$094cb60ccc73a674$exports","$f25f78d4bbb4d32e$exports","$06003f96259ab889$exports","$5fc5214d71835fc8$exports","$b8a0fb4d6749c567$exports","$f25f78d4bbb4d32e$require$RE","REGEXP","$195b16e791542a7f$exports","$daf9b9ffe40280b0$exports","$5f29508570e4c532$exports","$90f61aea219ebb3a$exports","$ca405724d466029f$exports","$38760b92cd8ccb7c$exports","$5f29508570e4c532$var$isObjectLikeArray","predicate","len","_isBuffer","constructor","isBuffer","name","ctor","type","$43eb246741dfe14e$exports","$d5bb7e750799db60$exports","$e12825453b39e256$exports","$c135f3c349acd1cd$exports","$b6e0e6b2379122d5$exports","$953bdf9b1275f1e2$exports","$e662dc7930a785d2$exports","getPrototypeOf","$9d5e86c952aed971$exports","$0c6c90c0e2fe7c27$exports","proto","$950a7c8c5f57ecc9$var$objectPrototype","isPrototypeOf","$950a7c8c5f57ecc9$var$ownProps","key","$427c86626b845cf7$exports","$e3dd5756224fd923$exports","$b50f262dd23e3975$exports","$28edb5103c7fd514$exports","$665931b83d6270df$exports","$39a357d3dce33fab$exports","$82132ebca57c92e4$exports","$82132ebca57c92e4$require$isBoolean","$a3146ba2bb56d8f0$exports","$757c75aef8d2941a$exports","$757c75aef8d2941a$var$hasUint32Array","Uint32Array","$05d4f0dfaf19f1a1$exports","$54d02d2e82bde01d$exports","$3b344fcd5166f627$exports","$b52cee4fbc0f7b72$exports","$aa8cbfd7c504b7cd$exports","$009faf297be97aa1$exports","$4ffaf4cf532b0a66$exports","$19a18984922c6b5f$exports","$e925a6402668f716$exports","floor","x","$4c027b7f20d29e65$exports","$3b344fcd5166f627$require$isBoolean","$edfad03af173d8ff$exports","$cc0fc3db9896380b$exports","$94bce60474e71568$exports","$0654f579c472fc00$exports","$299d7a0d100776ba$exports","$f642eccedad232fa$exports","$019754bf0ce823af$exports","$40e61c93e97a3e07$exports","$363bfa0d881059e6$exports","$700f4493d928a3cd$exports","$a64a1429c4ede784$exports","$12d842204dbcf5a2$exports","$d7c508a0812e96c7$exports","$103323befb61daf7$exports","Number","$700f4493d928a3cd$var$FLG","$f642eccedad232fa$require$isNumber","$10bf7053ead4e5e5$exports","$163c16c3843b9db0$exports","POSITIVE_INFINITY","$8caa281ecaa80049$exports","NEGATIVE_INFINITY","$e221483ccbb20fc0$exports","$e221483ccbb20fc0$require$isNumber","isObject","valueOf","$94bce60474e71568$require$isInteger","$213520d942e0740c$exports","$213520d942e0740c$require$isInteger","$3b344fcd5166f627$require$isPositiveInteger","$1c9ea135448a31a9$exports","$a5069161f8233194$exports","$2ffeb30574781963$exports","$054bc35b6f5fb593$exports","$c7b696d148cebce3$exports","$95312e39384f229f$exports","bool","arr","$27067c3f2efc61d0$exports","$8c6ec15ca4e0a049$exports","$c60bed3c04bd9984$exports","$98c1ea186f9ec02b$exports","$e7144be1dfdeeb7d$exports","$05ec2bd337789885$exports","$806500fab48b0961$exports","$4d115d22c79c26cf$exports","y","NaN","$66f874ac6fdc70e7$exports","$ec70f4308d970ec8$exports","b","ha","hb","la","lb","lbits","$5c6324161692e0ec$exports","$63bf1be7a391376a$exports","$6a02809187fe3c4a$exports","$9c2cd5987f1f9b27$exports","$114d21ecee832746$exports","$70574a91dd3c20ca$exports","$70574a91dd3c20ca$var$TYPE","$88f5ca10627f0cae$exports","$7746194384f5541a$exports","$7746194384f5541a$var$GETTERS","idx","dtype","$c5348a68ff530f9c$exports","$4d421b6080a6fa07$exports","$4d421b6080a6fa07$var$SETTERS","$dfd66f945cb96da9$exports","$8141b4ae21f8ed28$exports","$8141b4ae21f8ed28$var$GETTERS","$7a65e941626c3146$exports","$ce0839c36fe479b6$exports","$ce0839c36fe479b6$var$SETTERS","$197ea0f3ce9f037b$exports","$ae2895751c8f79c8$exports","$1cea0019130bbe15$exports","$3ad6a1cfb43d8878$exports","$688bf0eeb5997346$exports","$f51c88c88382236d$exports","$6a2ea7ea146c8988$exports","$a1b67c4739a9bfa6$exports","$1f47951994ce5bd6$exports","$1f47951994ce5bd6$var$hasFloat64Array","Float64Array","$60ea159ebc53c5b3$exports","$f3538e338d4130bd$exports","$1602a69491a764ab$exports","$26891ca0f6b1a852$exports","$e4989b1d79b3b8c3$exports","$bcbe48ccd7c6c2c1$exports","$a7f905c77ab0e6a2$exports","$4bec4a970779c346$exports","$4bec4a970779c346$var$hasFloat32Array","Float32Array","$9eac870346dc568c$exports","$d1410802ed9042b2$exports","$e39cb8336d43de5c$exports","$25d2454a59275c01$exports","$6f7f726350c4ec69$exports","$46221959f324b79e$exports","$76f29fd81e6db4bc$exports","$db8c282f0aeaed30$exports","$db8c282f0aeaed30$var$hasInt32Array","Int32Array","$29c6c390d1dbe43f$exports","$99acf866a7ce9c84$exports","$00f94046e2bcf8e2$exports","$448c9aa0d27fc1c2$exports","$809df437e6d360b9$exports","$d41d9d0c25adca97$exports","$f88d18dac5c80440$exports","$0939ef0769e4a541$exports","$70add841e4c53a36$exports","$093455c87000bdbd$exports","$093455c87000bdbd$var$hasUint16Array","Uint16Array","$e3580730f4942dc8$exports","$1f4c3649cfc7b463$exports","$3d6f94228254dbc1$exports","$c038b280ecde4a56$exports","$8e8697281bde0b47$exports","$5c1694e24a2d76e5$exports","$32932833093f7068$exports","$68cbb738d294702f$exports","$231e46d78911d41a$exports","$231e46d78911d41a$var$hasInt16Array","Int16Array","$2446128d1e477ad4$exports","$891f6158648ba9cb$exports","$96d48abaa213ed8a$exports","$49936125e794dea2$exports","$97a51d62a5b77d16$exports","$b1ee90e09bc85e12$exports","$fd29a8d396fe8333$exports","$b0b32f9f79eec122$exports","$40ce47bdafbd2519$exports","$a3c8f1663b58e13f$exports","$a3c8f1663b58e13f$var$hasUint8Array","Uint8Array","$3cb40d89de80441c$exports","$0c619b71d9181927$exports","$c8e3a1d9fea18240$exports","$bf72e6acf6f8e9aa$exports","$6a9e0856aadec59b$exports","$fb5436843fc1bce3$exports","$4ee92a1c52afadd6$exports","$fb28b0ee7bf4d923$exports","$4b32ec28ec97ca81$exports","$4b32ec28ec97ca81$var$hasUint8ClampedArray","Uint8ClampedArray","$46bcc8ff276d7bb3$exports","$30d78b713a9853a3$exports","$d76037cffd959500$exports","$08d0b88cbc0edb01$exports","$d71bfd64bcd54886$exports","$2df7669c4e6c6a51$exports","$65472513b605afc2$exports","$459126ac0bd50730$exports","$459126ac0bd50730$var$hasInt8Array","$f100d20f2ae15016$exports","$84c8b55c42b29a84$exports","$f10dbf5cb0777625$exports","$6b65e71714af0366$exports","$cad39b825d919f89$exports","$375b4d44e8b8b01e$exports","$ba8711ef40fa4add$exports","$0bdd74f709a75343$exports","$1182d28e7a3e580c$exports","$92083d37421a5150$exports","$92083d37421a5150$require$isInteger","$22b0b8a3134625d9$exports","$22b0b8a3134625d9$require$isInteger","$ba8711ef40fa4add$require$isNonNegativeInteger","$121906abae93f5cb$exports","$a103721489851473$exports","$86fed06ae3a4ffeb$exports","$0c6292c314072f8d$exports","$c8de0f653ba5296a$exports","$c8de0f653ba5296a$var$hasArrayBuffer","ArrayBuffer","$2f257dbaf842ff48$exports","$2a5f909076b7a477$exports","$dcb6c17f402af636$exports","$cc1bfbb385362bad$exports","$c6300c370a161ac9$exports","$0efeea41ca4d50b7$exports","$d1898cc3130a36e1$exports","$c6300c370a161ac9$var$FLG","$2f257dbaf842ff48$var$isPrimitiveArray","$2f257dbaf842ff48$var$isObjectArray","$2f257dbaf842ff48$var$isStringArray","$ba8711ef40fa4add$require$isStringArray","primitives","$ba8711ef40fa4add$require$isString","$7911d5483bd25b55$exports","$fc6bf7c413c52178$exports","$ad35ee0af2f9e50a$exports","$894324bf8503b94f$exports","$894324bf8503b94f$require$isNumber","$2e091ace12ecbc2e$exports","re","im","$75b1db21debcd1c7$exports","$894324bf8503b94f$var$Complex128","real","imag","$5d6f97a39db1e2b8$exports","$c27ada7a6a65f84c$exports","$c27ada7a6a65f84c$require$isNumber","$4d0919e4af4fd38a$exports","$f8a354fe3d226513$exports","fround","$279c1404560a229e$exports","$279c1404560a229e$var$FLOAT32_VIEW","$22a5430236ea7416$exports","$9857dd86698f86c0$exports","$c27ada7a6a65f84c$var$Complex64","$4d1b28d3c34f95aa$exports","$e646dfe582277534$exports","$c9a11eb31d8609bb$exports","$31f50551f46f6d2c$exports","BYTES_PER_ELEMENT","$91951cfa87e1b5e1$exports","$2fa13b68f2ad99a2$exports","$d1469be5794ac8a0$exports","$56c4eff70058e371$exports","$b1dd39231526b140$exports","$0f047d7c477bb880$exports","iterator","$efb2d5190b246528$exports","$c301cd259ffcbfc8$exports","z","$fc26d261a528b8b0$exports","$f8794b441b652dc9$exports","$5d2756b8cde44db9$exports","$514141df0d7d6f79$exports","offset","buffer","byteOffset","$88d548af1d36ede9$exports","$226599221ca0bc5b$exports","$d3702300d1b0ec4b$exports","it","next","done","$1db2d3f49940dca5$exports","clbk","thisArg","$505d21a179225210$exports","buf","$ba8711ef40fa4add$var$BYTES_PER_ELEMENT","$ba8711ef40fa4add$var$HAS_ITERATOR_SYMBOL","$ba8711ef40fa4add$var$isComplexArray","$ba8711ef40fa4add$var$Complex64Array","_length","_buffer","$ba8711ef40fa4add$var$isComplexArrayConstructor","$ba8711ef40fa4add$var$getComplex64","nargs","RangeError","byteLength","src","tmp","flg","target","start","copyWithin","iter","FLG","entries","end","fcn","searchElement","fromIndex","separator","sep","join","keys","outbuf","reducer","initialValue","acc","N","sbuf","outlen","compareFcn","sort","begin","locales","options","opts","loc","toLocaleString","values","index","$b43bc7a4d963783e$exports","$b5346cacdcd1b519$exports","$b5346cacdcd1b519$require$isNonNegativeInteger","$b5346cacdcd1b519$require$isStringArray","$75312021f59ef5f6$exports","$d83d8934e7890411$exports","$97e9e15ff77fcffa$exports","$9660ed1d5e23ad8b$exports","$6680c891bd630776$exports","$1290071e1f517cce$exports","$d572162fe936568a$exports","$b5346cacdcd1b519$var$BYTES_PER_ELEMENT","$b5346cacdcd1b519$var$HAS_ITERATOR_SYMBOL","$b5346cacdcd1b519$var$isComplexArray","$b5346cacdcd1b519$var$Complex128Array","$b5346cacdcd1b519$var$isComplexArrayConstructor","$b5346cacdcd1b519$var$getComplex128","$12973d080ce9e731$exports","$56183b3879b1a53c$exports","$56183b3879b1a53c$require$isNonNegativeInteger","$56183b3879b1a53c$require$isBoolean","$56183b3879b1a53c$require$isInteger","$56183b3879b1a53c$require$isString","$56183b3879b1a53c$require$isStringArray","$60ee89e662acbb14$exports","$e2dd71999b31ec27$exports","$7270a14dd0e96177$exports","$56183b3879b1a53c$var$BYTES_PER_ELEMENT","$56183b3879b1a53c$var$HAS_ITERATOR_SYMBOL","$56183b3879b1a53c$var$isBooleanArray","$56183b3879b1a53c$var$BooleanArray","val","$95cafa856eb4e27d$exports","$ae2895751c8f79c8$var$NTYPES","dt","$83931cbda3c45bcd$exports","strideX","offsetX","strideY","offsetY","xbuf","ybuf","ix","iy","data","accessors","$772bd7a728f48153$exports","ox","oy","m","accessorProtocol","$46c75d6fadb33a0e$exports","$2506763e932268bf$exports","$87ab65900a1f386d$exports","$02b3d4138e395ebb$exports","$de0f1020be252b85$exports","$c2f433b5f5f60a9e$exports","$6a4f90a371ecf427$exports","$a5c669b27f023413$exports","$7c214c1da250c1b6$exports","$c2f433b5f5f60a9e$require$RE","$c2f433b5f5f60a9e$var$isFunctionNameSupported","$256312899d9acb9e$exports","$4485bda1a1b28a15$exports","$02b3d4138e395ebb$var$TypedArray","$02b3d4138e395ebb$var$Dummy","$bcdc764731c4e02b$exports","$962cab2299084f79$exports","$5c4b6adbe13f580a$exports","$af0d66d2ecee3d3c$exports","$71be7141b4c5fb9a$exports","$cffa11d0f25cce41$exports","$a6e1691e7348d703$exports","$c070d48e65024d57$exports","$40fb1c7473819646$exports","$374565f5f188571c$exports","$eeddcdba1a0c6161$exports","$3df0ee3a2965cbae$exports","$a1390ae0787b71de$exports","$a1390ae0787b71de$var$MAX","random","$3b344fcd5166f627$var$MAX_SEED","$3b344fcd5166f627$var$MAG01","$3b344fcd5166f627$var$MATRIX_A","$3b344fcd5166f627$var$FLOAT64_NORMALIZATION_CONSTANT","$3b344fcd5166f627$var$MAX_NORMALIZED","$3b344fcd5166f627$var$verifyState","state","s1","$3b344fcd5166f627$var$STATE_FIXED_LENGTH","$3b344fcd5166f627$var$N","$3b344fcd5166f627$var$createState","s","STATE","seed","slen","copy","$3b344fcd5166f627$var$STATE_SECTION_OFFSET","$3b344fcd5166f627$var$SEED_SECTION_OFFSET","$3b344fcd5166f627$var$OTHER_SECTION_OFFSET","ndarray","$3b344fcd5166f627$var$initState","M","k","mt19937","getSeed","getSeedLength","getState","setState","getStateLength","getStateSize","toJSON","normalized","NAME","params","r","$3b344fcd5166f627$var$twist","w","$3b344fcd5166f627$var$M","$82132ebca57c92e4$require$mt19937","factory","$787fa62bd4fb4f7a$exports","$c3b1c45c52c68198$exports","$8f7102689254549e$exports","$b35c6ca368f840b7$exports","$5d80281c5bdd2b49$exports","$04c484e1b6b0e61d$exports","$bcfb4e2c004a5d85$exports","$289e17509f014ab2$exports","$d74bdb801b28b127$exports","ceil","$b69836c7c753b273$exports","$1022cb4988ba009f$exports","$a10bcf89a5217591$exports","$34e9e8663ea87dc8$exports","$a3e6d81a9e86d108$exports","$d07a7ab16f56612c$exports","$edfa495c3e8dc3b6$exports","$baf4b596b38391ae$exports","$e724c8c573aa15bb$exports","$80ce45bbbc194168$exports","$91574aed2d327ce0$exports","$d622ef5ed2260c58$exports","$39fd8267c1818b2c$exports","$d83d8b2815a1bcbe$exports","$f319b4b6c1a5cdf9$exports","$353a9012a2ac293e$exports","$7bbb979cc546c5ad$exports","$997874f55af78d2a$exports","$8e281ac8ec44f482$exports","$f7b715a9b4010760$exports","$8e281ac8ec44f482$var$isLittleEndian","uint16view","uint16","uint8view","uint8","$353a9012a2ac293e$var$FLOAT64_VIEW","$353a9012a2ac293e$var$UINT32_VIEW","$353a9012a2ac293e$var$HIGH","HIGH","$353a9012a2ac293e$var$LOW","LOW","stride","$a12df7c61468e5b9$exports","$a7d3f0b6903ad805$exports","$487d580d2069144a$exports","$a7d3f0b6903ad805$var$FLOAT64_VIEW","$a7d3f0b6903ad805$var$UINT32_VIEW","$bd3b32db5ed1e9e1$exports","$f36489ace07312b2$exports","$8c8ca92d33842b22$exports","$f36489ace07312b2$var$FLOAT64_VIEW","$f36489ace07312b2$var$UINT32_VIEW","$f36489ace07312b2$var$HIGH","$f36489ace07312b2$var$LOW","high","low","$91574aed2d327ce0$var$WORDS","hx","hy","assign","$18f974f475440ccd$exports","$eb591093379e40af$exports","$952d76d4f57d25ee$exports","$7c6e9019493442ac$exports","$a10bcf89a5217591$require$normalize","$4bf8ff0a3522d4d0$exports","$29a1d20f56f31deb$exports","$13768c218cecc6a2$exports","$a10bcf89a5217591$var$FRAC","$a10bcf89a5217591$var$WORDS","frac","exp","$16c5675e742ed05b$exports","hi","lo","t","c","$5d80281c5bdd2b49$var$NEARZERO","$5d80281c5bdd2b49$var$NEG_NEARZERO","$5d80281c5bdd2b49$var$LOG2_E","$0b19e82d1c772432$exports","$fba0048b3725563e$exports","$42bd40e27925c2b2$exports","sqrt","$34a5fdb6c9cfe261$exports","$c32e45fc48ffbf27$exports","$f20b66e24bd8d75d$exports","$3dfd6f80acdf32ae$exports","$96aa1cafbecb2ebd$exports","$3dfd6f80acdf32ae$var$FLOAT64_VIEW","$3dfd6f80acdf32ae$var$UINT32_VIEW","$248907d5c902c819$exports","$fa4ed947f6f45631$exports","hfsq","t2","t1","R","$c32e45fc48ffbf27$var$HIGH_SIGNIFICAND_MASK","$c32e45fc48ffbf27$var$ONE_THIRD","rTail","X","$0b19e82d1c772432$var$V","$6e0b32306d7a6110$exports","$4cacedfa34e1007d$exports","rand","isNegative","$787fa62bd4fb4f7a$var$X","$787fa62bd4fb4f7a$var$R","randu","randi","f0","f1","x2","u","randn","prng","seedLength","stateLength","$a971c8057dda0ad4$require$randn","$dd5bcf2f5352e07b$exports","$dd5bcf2f5352e07b$require$isNumber","$e95da724e81ac8e1$exports","$ed183dff9a56ba3b$exports","$06e04b069a955fe6$exports","$06e04b069a955fe6$require$isNumber","$4cbe5698d7d24fa1$exports","$4cbe5698d7d24fa1$require$isNumber","$dd5bcf2f5352e07b$require$isPositive","$58226ebdfb370dd2$exports","$dcd8646c10ee7eeb$exports","$287b764a9f4648a6$exports","$287b764a9f4648a6$require$isNumber","$e0f1948844ebd846$exports","$e0f1948844ebd846$require$isNumber","mu","sigma","$b3f6cfb7b66c240f$exports","rnorm","PRNG","$cfdf67a5fc2cd432$exports","$c33794d51c93c7d6$exports","$1509f77662f7e6e4$exports","$1509f77662f7e6e4$require$randn","$196549892a585dfb$exports","$196549892a585dfb$require$isNumber","$196549892a585dfb$require$isPositive","$58671b2050bf5d87$exports","$13db2958b0309f6e$exports","$78e6a0d57ed1d4d4$exports","$8c826bd53f428064$exports","$8c826bd53f428064$require$randu","$03b0d95201fe2b83$exports","$03b0d95201fe2b83$require$isNumber","$6d57ebfd3441e201$exports","$90dd2828a14bc41c$exports","$62c062962518582b$exports","$7e41df13edb87dc4$exports","$81155863c00f9217$exports","$38d4865ec857a707$exports","$a322c7692faa8854$exports","$26108f7279209649$exports","$829c89063eb3668a$exports","$9819e19595d90020$exports","$9819e19595d90020$var$gsumpw","s0","s2","s3","s4","s5","s6","s7","$3a344372a8701412$exports","$8cd9f0f0580d7ddb$exports","$a63ec7706614a023$exports","$a63ec7706614a023$var$gapxsumpw","alpha","$50b78479cac018fd$exports","$50b78479cac018fd$require$gsumpw","$50b78479cac018fd$require$gapxsumpw","$6d01dd214e8e02ac$exports","$6d01dd214e8e02ac$require$meanpn","$5fb7fa894854ade4$exports","$3171f8b2b15b8183$exports","$c6b57d881f311af8$exports","$41ca3ad4720ef7e4$exports","$a8c806a47645133b$exports","$c666391390467e5c$exports","$c09df1a5b1b0eb7b$exports","$ed89abe4f0f1d532$exports","$c14c6e3ff6d4bf39$exports","correction","M2","d","$13a13ece0e9a13c3$exports","$13a13ece0e9a13c3$require$gsumpw","$52768df656e6d6c5$exports","$52768df656e6d6c5$require$variancepn","$cce42cc7a953eb78$exports","$cce42cc7a953eb78$require$stdevpn","$f919191cf20350da$exports","$f919191cf20350da$require$isString","$82a0080910277a82$exports","$b364f2cd2faf3e98$exports","$82a0080910277a82$require$readfile","readFile","$de03132fb6b0caed$exports","$de03132fb6b0caed$require$readfileSync","readFileSync","file","$305d0a1dffe471e1$var$distributionParamsCache","$305d0a1dffe471e1$var$stockChartInstance","$305d0a1dffe471e1$var$stockData","AAPL","AMZN","NFLX","GOOG","MSFT","$305d0a1dffe471e1$var$fetchStockPrices","stock","map","entry","date","Date","price","Close","$305d0a1dffe471e1$var$simulateFuturePrices","distribution","historical","$305d0a1dffe471e1$var$calculateLogReturnParams","prices","logReturns","log","mean","stdev","lastPrice","lastDate","simulatedPrices","simulatedReturn","futureDate","setDate","getDate","toISOString","split","future","ctx","getElementById","getContext","dates","p","datasets","label","undefined","destroy","Chart","labels","scales","time","unit","title","display","text","runSimulation"],"version":3,"file":"script.js.map"}